@model BimViewer.Models.Marker



<style>
    #viewport {
        border: 2px solid grey;
        border-radius: 5px;
        background-color: cornflowerblue;
        width: 800px;
        height: 600px;
        margin: 0 auto;
        padding: 0;
    }
</style>
<div id="viewport"></div>
<h2>ModelViewerThree</h2>
<script src="~/Scripts/three.js"></script>
<script src="~/Scripts/TrackballControls.js"></script>
<script src="~/Scripts/FlyControls.js"></script>
<script>
    //variables
    var viewport;
    var cube;
    var scene = new THREE.Scene();
    var viewportWidth = 800;
    var viewportHeight = 600;
    var flyControls;
    var intersectMarker;
    var intersects;
    //camera variables
    var view_angle = 45,
            aspect = viewportWidth / viewportHeight,
            near = 0.1,//near clip-plane
            far = 10000;//far clip-plane

    //contructors
    var camera = new THREE.PerspectiveCamera(
            view_angle,
            aspect,
            near,
            far
            );

    var renderer = new THREE.WebGLRenderer({ alpha: true });
    renderer.setClearColor(0xffffff, 0);

    var geometry = new THREE.BoxGeometry(2, 2, 2);
    var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });
    cube = new THREE.Mesh(geometry, material);
    var rayCaster = new THREE.Raycaster();
    var mouse = new THREE.Vector2();

    var intersectMarkerGeometry = new THREE.SphereGeometry(0.1, 0.1, 0.1);
    intersectMarker = new THREE.Mesh(intersectMarkerGeometry, new THREE.MeshNormalMaterial());

    camera.position.z = 5;




    initialize();

    function initialize() {

        renderer.setSize(viewportWidth, viewportHeight);
        viewport = document.getElementById('viewport');
        //document.body.appendChild(renderer.domElement);
        viewport.appendChild(renderer.domElement);
        camera.position.set(0, 0, 200);

        //construct FlyControls and define it's behavior
        flyControls = new THREE.FlyControls(camera);
        flyControls.movementSpeed = 1;
        flyControls.domElement = viewport;
        flyControls.rollSpeed = 0.005;
        flyControls.autoForward = false;
        flyControls.dragToLook = true;

        scene.add(camera);
        scene.add(cube);
        scene.add(intersectMarker);

        //adding event to check intersecting
        viewport.addEventListener("mousemove", checkIntersectOnMouseMove, false);
        //adding event to play marker
        viewport.addEventListener("dblclick", placeMarker, false);

        update();

    }



    function update() {
        requestAnimationFrame(update);

        //Tells the controls how quickly to update. The input of the controls are saved until this is called.
        flyControls.update(1);

        render();
    }

    function render() {
        renderer.render(scene, camera);
    }


    function checkIntersectOnMouseMove(event) {
        mouse.x = (event.clientX / window.innerWidth) * 2 - 1;
        mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;
        rayCaster.setFromCamera(mouse, camera);

        intersects = rayCaster.intersectObject(cube);

        if (intersects.length > 0) {
            intersectMarker.position.set(-1, -1, -1);
            intersectMarker.lookAt(intersects[0].face.normal);
            intersectMarker.position.copy(intersects[0].point);

            var span = document.getElementById("intersectSpan");
            span.innerText = "X: " + intersects[0].point.x + " , Y: " + intersects[0].point.y + " , Z: " + intersects[0].point.z;
        }
    }

    function placeMarker() {
        if (intersects.length > 0) {
            var x = intersects[0].point.x;
            var y = intersects[0].point.y;
            var z = intersects[0].point.z;

            var markerGeometry = new THREE.SphereGeometry(0.05, 0.05, 0.05);
            var markerMateriel = new THREE.MeshBasicMaterial({ color: 0xff0000 });
            var marker = new THREE.Mesh(markerGeometry, markerMateriel);
            scene.add(marker);

            marker.position.set(x, y, z);

            var sendData = JSON.stringify({ 'x': x, 'y': y, 'z': z });
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                type: 'POST',
                url: "ModelViewerThree/saveCoordinates",
                data: sendData,
                success: function (data) {
                    console.log("Marker Coordinates saved");
                }
            });

        }
    }

</script>

<div>
    <span>
        Intersecting at:
        <span id="intersectSpan"></span>
    </span>
</div>
