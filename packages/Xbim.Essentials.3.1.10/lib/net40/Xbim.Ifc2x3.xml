<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xbim.Ifc2x3</name>
    </assembly>
    <members>
        <member name="T:Xbim.Ifc2x3.ActorResource.IfcAddress">
            <summary>
              WR1   :   EXISTS (InternalLocation) OR EXISTS (AddressLines) OR EXISTS (PostalBox) OR EXISTS (PostalCode) OR EXISTS (Town) OR EXISTS (Region) OR EXISTS (Country);
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcAddress.Purpose">
            <summary>
              Optional. Identifies the logical location of the address
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcAddress.Description">
            <summary>
              Optional. Text that relates the nature of the address.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcAddress.UserDefinedPurpose">
            <summary>
              Optional. Allows for specification of user specific purpose of the address beyond the
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcOrganizationRelationship.Name">
            <summary>
              The word or group of words by which the relationship is referred to.
            </summary>
            <value>it should be restricted to max. 255 characters</value>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcOrganizationRelationship.Description">
            <summary>
              Optional. Text that relates the nature of the relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcOrganizationRelationship.RelatingOrganization">
            <summary>
              Organization which is the relating part of the relationship between organizations.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcOrganizationRelationship.RelatedOrganizations">
            <summary>
              The other, possibly dependent, organizations which are the related parts of the relationship between organizations.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ActorResource.IfcAddressType">
            <summary>
              Type of the Address
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ActorResource.IfcAddressType.Office">
            <summary>
              A office address
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ActorResource.IfcAddressType.Site">
            <summary>
              A  site address
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ActorResource.IfcAddressType.Home">
            <summary>
              A home address
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ActorResource.IfcAddressType.DistributionPoint">
            <summary>
              A postal distribution point address
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ActorResource.IfcAddressType.UserDefined">
            <summary>
              A user defined address type to be provided
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApproval.Description">
            <summary>
              A general textual description of a design, work task, plan, etc. that is being approved for.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApproval.ApprovalDateTime">
            <summary>
              Date and time when the result of the approval process is produced.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApproval.ApprovalStatus">
            <summary>
              The result or current status of the approval, e.g. Requested, Processed, Approved, Not Approved.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApproval.ApprovalLevel">
            <summary>
              Level of the approval e.g. Draft v.s. Completed design.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApproval.ApprovalQualifier">
            <summary>
              Textual description of special constraints or conditions for the approval.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApproval.Name">
            <summary>
              A human readable name given to an approval.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApproval.Identifier">
            <summary>
              A computer interpretable identifier by which the approval is known.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApproval.ApprovedResources">
            <summary>
              The set of relationships by which resource objects that are are approved by this approval are known.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApproval.Actors">
            <summary>
              The set of relationships by which the actors acting in specified roles on this approval are known.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApproval.IsRelatedWith">
            <summary>
              The set of relationships by which this approval is related to others.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApproval.Relates">
            <summary>
              The set of relationships by which other approvals are related to this one.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApprovalActorRelationship.Actor">
            <summary>
              The reference to the actor who is acting in the given role on the approval specified in this relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApprovalActorRelationship.Approval">
            <summary>
              The approval on which the actor is acting in the role specified in this relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApprovalActorRelationship.Role">
            <summary>
              The role of the actor w.r.t the approval. May be omitted, if the actor's general role implies also the role w.r.t the approval and does not need more detailed definition.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApprovalPropertyRelationship.ApprovedProperties">
            <summary>
              Properties approved by the approval.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApprovalPropertyRelationship.Approval">
            <summary>
              The approval for the properties selected.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApprovalRelationship.Name">
            <summary>
              The human readable name given to the relationship between the approvals.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApprovalRelationship.Description">
            <summary>
              Textual description explaining the relationship between approvals.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApprovalRelationship.RelatedApproval">
            <summary>
              The approval that relates to another approval
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcApprovalRelationship.RelatingApproval">
            <summary>
              The approval that other approval is related to.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcResourceApprovalRelationship.ApprovedResources">
            <summary>
              Resources approved by the approval.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ApprovalResource.IfcResourceApprovalRelationship.Approval">
            <summary>
              The approval for the resources selected.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ArchitectureDomain.IfcPermeableCoveringProperties">
            <summary>
            Definition from BS 6100: A permeable covering is a permeable cover for an opening which allows airflow .
            
            Definition from IAI: A description of a panel within a door or window (as fillers for opening) which allows for air flow. It is given by its properties (IfcPermeableCoveringProperties). A permeable covering is a casement, i.e. a component, fixed or opening, consisting essentially of a frame and the infilling. The infilling is normally a grill, a louver or a screen. The way of operation is defined in the operation type.
            
            The IfcPermeableCoveringProperties are included in the list of properties (HasPropertySets) of the IfcWindowStyle or the IfcDoorStyle. More information about the permeable covering can be included in the same list of the window or door style using the IfcPropertySet for dynamic extensions. This particularly applies for additional properties for the various operation types
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcPropertySetDefinition">
            <summary>
              An IfcPropertySetDefinition is a generalization of property sets, that are either: 
              Dynamically extendable properties, they define properties for which the IFC model only provides a kind of "meta model", to be further declared by agreement. 
              This means no entity definition of the properties exists within the IFC model. The declaration is done by assigning a significant string value to the 
              Name attribute of the entity as defined in the entity IfcPropertySet and at each subtype of IfcProperty, referenced by the property set.
              Statically defined properties, they define properties for which an entity definition exists within the IFC model. 
              The semantic meaning of each statically defined property is declared by its entity type and the meaning of the properties is defined by the name of the explicit attribute.
              The subtypes of the IfcPropertySetDefinition are either the dynamically extendable IfcPropertySet, or all other statically defined subtypes.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcPropertyDefinition">
            <summary>
              The IfcPropertyDefinition defines the generalization of all characteristics (i.e. a grouping of individual properties), that may be assigned to objects. 
              Currently, subtypes of IfcPropertyDefinition include property set definitions, and property sets.
              Property definitions define information that is shared among multiple instances of objects. 
              The assignment of the shared information to objects is handled by the IfcRelDefines relationship.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRoot">
            <summary>
              The IfcRoot is the most abstract and root class for all IFC entity definitions that roots in the kernel or in subsequent layers of the IFC object model.
            </summary>
            <remarks>
              Definition from IAI: The IfcRoot is the most abstract and root class for all IFC entity definitions that roots in the kernel or in subsequent layers of the IFC object model. It is therefore the common supertype all all IFC entities, beside those defined in an IFC resource schema. All entities that are subtypes of IfcRoot can be used independently, whereas resource schema entities, that are not subtypes of IfcRoot, are not supposed to be independent entities. 
              The IfcRoot assigns the globally unique ID, and the ownership and history information to the entity. In addition it may provide for a name and a description about the concepts.
              HISTORY New entity in IFC Release 1.0
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRoot.GlobalId">
            <summary>
              Assignment of a globally unique identifier within the entire software world
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRoot.OwnerHistory">
            <summary>
              Assignment of the information about the current ownership of that object, including owning actor, application, local identification and information captured about the recent changes of the object, NOTE: only the last modification in stored.
            </summary>
            TODO: Resolve this
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRoot.Name">
            <summary>
              Optional name for use by the participating software systems or users. For some subtypes of IfcRoot the insertion of the Name attribute may be required. This would be enforced by a where rule.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRoot.Description">
            <summary>
              Optional description, provided for exchanging informative comments.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcPropertyDefinition.HasAssociations">
            <summary>
              Inverse: Reference to the relationship IfcRelAssociates and thus to those externally defined concepts, like classifications, documents, or library information, which are associated to the property definition.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcPropertySetDefinition.PropertyDefinitionOf">
            <summary>
              Inverse: The property style to which the property set might belong.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcPropertySetDefinition.DefinesType">
            <summary>
              Inverse: Reference to the relation to one or many objects that are characterized by the property definition. The reference may be omited, if the property definition is used to define a style library and no instances, to which the particular style of property set is associated, exist yet.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcPermeableCoveringProperties.OperationType">
            <summary>
            Types of permeable covering operations. Also used to assign standard symbolic presentations according to national building standards.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcPermeableCoveringProperties.PanelPosition">
            <summary>
             	Position of this permeable covering panel within the overall window or door type. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcPermeableCoveringProperties.FrameDepth">
            <summary>
            Depth of panel frame (used to include the permeable covering), measured from front face to back face horizontally (i.e. perpendicular to the window or door (elevation) plane. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcPermeableCoveringProperties.FrameThickness">
            <summary>
            Width of panel frame (used to include the permeable covering), measured from inside of panel (at permeable covering) to outside of panel (at lining), i.e. parallel to the window or door (elevation) plane. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcPermeableCoveringProperties.ShapeAspectStyle">
            <summary>
            
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelConnects">
            <summary>
              A connectivity relationship (IfcRelConnects) that connects objects under some criteria.
            </summary>
            <remarks>
              Definition from IAI: A connectivity relationship (IfcRelConnects) that connects objects under some criteria. As a general connectivity it does not imply constraints, however subtypes of the relationship define the applicable object types for the connectivity relationship and the semantics of the particular connectivity.
              HISTORY: New entity in IFC Release 2x.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelationship">
            <summary>
              The abstract generalization of all objectified relationships in IFC.
            </summary>
            <remarks>
              Definition from IAI: The abstract generalization of all objectified relationships in IFC. Objectified relationships are the preferred way to handle relationships among objects. This allows to keep relationship specific properties directly at the relationship and opens the possibility to later handle relationship specific behavior. 
              There are two different types of relationships, 1-to-1 relationships and 1-to-many relationship. used within the subtypes of IfcRelationship. The following convention applies to all subtypes:
              The two sides of the objectified relationship are named 
              - Relating+name of relating object and 
              - Related+name of related object
              In case of the 1-to-many relationship, the related side of the relationship shall be an aggregate SET 1:N 
              HISTORY: New entitiy in IFC Release 1.0.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcRelInteractionRequirements.DailyInteraction">
            <summary>
            Number of interactions occurring on a daily basis. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcRelInteractionRequirements.ImportanceRating">
            <summary>
            Represents the level of importance of interaction. 0 represents lowest importance, 1 represents highest importance. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcRelInteractionRequirements.LocationOfInteraction">
            <summary>
            The location where this interaction happens. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcRelInteractionRequirements.RelatedSpaceProgram">
            <summary>
            Related space program for the interaction requirement. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcRelInteractionRequirements.RelatingSpaceProgram">
            <summary>
            Relating space program for the interaction requirement. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ArchitectureDomain.IfcSpaceProgram">
            <summary>
            Architectural program for a space in the building or facility being designed; essentially the requirements definition for such a building space.
            
                NOTE: that this 'program' defines the client requirements for the space before the building is designed. Space programs can change over the life cycle of a building, after the building is occupied. Changes to space programs take place in the facilities management/operations phase of the building life cycle.
            
            The assignment of a person or an organization to a space program, e.g., as the anticipated occupants of the space, is handled through using the objectified relationship IfcRelAssignsToActor referring to IfcActor. Space programs can be nested, i.e. an IfcSpaceProgram can specify a program group up to any desired level. This is handled through using the objectified relationship IfcRelNests.
            
            Property Set Use Definition:
            
            The property sets relating to the IfcSpaceProgram are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcSpaceProgram are part of this IFC release:
            
                Pset_SpaceProgramCommon: common property set for all types of the space program
            
            General Use Definition
            
            The IfcSpaceProgram entity is used to define:
            
                the architectural program for a space in the building or facility being designed;
                the standard for space allocation that can be assigned to persons within an organization.
            
            As the architectural program, the IfcSpaceProgram class sets down the requirements definition for a space in the building or facility being designed. Used in this way, it defines the client requirements for the space before the building in designed. Space programs can change over the life cycle of a building, after the building is occupied. Changes to space programs take place in the facilities management/operations phase of the building life cycle.
            
            As a space standard for facilities management (FM), the IfcSpaceProgram class defines the requirements for usage of a space according to the roles of persons that will occupy the space. This could take into account role driven elements such as whether the space should be a single person office, corner space, glazing on two sides etc. In order to use the class as an space standard within FM, a classification of spaces must have been established. This does not mean that each individual space needs to have a classification although for locating persons having an assigned space standard, this would be desirable.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcControl">
            <summary>
              The IfcControl is the abstract generalization of all concepts that control or constrain products or processes in general. It can be seen as a specification, regulation, cost schedule or other requirement applied to a product or process whose requirements and provisions must be fulfilled. 
              Controls are assigned to products, processes, or other objects by using the IfcRelAssignsToControl relationship.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcObject">
            <summary>
              An IfcObject is the generalization of any semantically treated thing or process.
            </summary>
            <remarks>
              Definition from IAI: An IfcObject is the generalization of any semantically treated thing or process. Objects are things as they appear - i.e. occurrences. 
              NOTE Examples of IfcObject include physically tangible items, such as wall, beam or covering, physically existing items, such as spaces, or conceptual items, such as grids or virtual boundaries. It also stands for processes, such as work tasks, for controls, such as cost items, for actors, such as persons involved in the design process, etc. 
              Objects can be named, using the inherited Name attribute, which should be a user recognizable label for the object occurrance. Further explanations to the object can be given using the inherited Description attribute. The ObjectType attribute is used:
              to store the user defined value for all subtypes of IfcObject, where a PredefinedType attribute is given, and its value is set to USERDEFINED. 
              to provide a type information (could be seen as a very lightweight classifier) of the subtype of IfcObject, if no PredefinedType attribute is given. This is often the case, if no comprehensive list of predefined types is available. 
              Objects are independent pieces of information that might contain or reference other pieces of information. There are four essential kind of relationships in which objects can be involved:
              Assignment of other objects - an assignment relationship that refers to other types of objects. See supertype IfcObjectDefinition for more information. 
              Association to external resources - an association relationship that refers to external sources of information. See supertype IfcObjectDefinition for more information. 
              Aggregation of other objects - an aggregation relationship that establishes a whole/part relation. See supertype IfcObjectDefinition for more information.
              Refinement by type and properties - a refinement relationship (IfcRelDefines) that uses a type definition or (partial) property set definition to define the properties of the object instance. It is a specific - occurrence relationship with implied dependencies (as the occurrence properties depend on the specific properties). 
              HISTORY New Entity in IFC Release 1.0
              Formal Propositions:
              WR1   :   Only maximum of one relationship to an underlying type (by an IfcRelDefinesByType relationship) should be given for an object instance.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcObjectDefinition">
            <summary>
              An IfcObjectDefinition is the generalization of any semantically treated thing or process, either being a type or an occurrences.
            </summary>
            <remarks>
              Definition from IAI: An IfcObjectDefinition is the generalization of any semantically treated thing or process, either being a type or an 
              occurrences. Object defintions can be named, using the inherited Name attribute, which should be a user recognizable label for the object
              occurrance. Further explanations to the object can be given using the inherited Description attribute. 
              Objects are independent pieces of information that might contain or reference other pieces of information. There are three essential kinds of
              relationships in which object definitons (by their instantiable subtypes) can be involved:
              Assignment of other objects - an assignment relationship (IfcRelAssigns) that refers to other types of objects and creates a bi-directional
              association. The semantic of the assignment is established at the level of the subtypes of the general IfcRelAssigns relationship. There is no
              dependency implied a priori by the assignment. 
              Association to external resources - an association relationship (IfcRelAssociates) that refers to external sources of information (most 
              notably a classification or document) and creates a uni-directional association. There is no dependency implied by the association. 
              Aggregation of other objects - an aggregation relationship (IfcRelDecomposes) that establishes a whole/part relation and creates a bi-
              directional relation. There is an implied dependency established. 
              HISTORY  New abstract entity in Release IFC2x Edition 3. 
              IFC2x Edition 3 CHANGE  The abstract entity IfcObjectDefinition has been added. Upward compatibility for file based exchange is guaranteed.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcObjectDefinition.HasAssignments">
            <summary>
              Inverse. Reference to the relationship objects, that assign (by an association relationship) other subtypes of IfcObject to this object instance. Examples are the association to products, processes, controls, resources or groups.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcObjectDefinition.IsDecomposedBy">
            <summary>
              Reference to the decomposition relationship, that allows this object to be the composition of other objects. An object can be decomposed by several other objects.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcObjectDefinition.Decomposes">
            <summary>
              References to the decomposition relationship, that allows this object to be a part of the decomposition. An object can only be part of a single decomposition (to allow hierarchical strutures only).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcObjectDefinition.HasAssociations">
            <summary>
              Reference to the relationship objects, that associates external references or other resource definitions to the object.. Examples are the association to library, documentation or classification.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcObject.ObjectType">
            <summary>
              The type denotes a particular type that indicates the object futher. The use has to be established at the level of instantiable subtypes. In particular it holds the user defined type, if the enumeration of the attribute PredefinedType is set to USERDEFINED.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcObject.IsDefinedBy">
            <summary>
              Set of relationships to type or property (statically or dynamically defined) information that further define the object. In case of type information, the associated IfcTypeObject contains the specific information (or type, or style), that is common to all instances of IfcObject refering to the same type.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcObject.IsDefinedByProperties">
            <summary>
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcObject.PropertySets">
            <summary>
              Returns a collection of PropertySets for the entity
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcControl.Controls">
            <summary>
              Reference to the relationship that associates the control to the object(s) being controlled.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcSpaceProgram.SpaceProgramIdentifier">
            <summary>
            Identifier for this space program. It often refers to a number (or code) assigned to the space program. Example: R-001. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcSpaceProgram.MaxRequiredArea">
            <summary>
            The maximum floor area programmed for this space (according to client requirements) 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcSpaceProgram.MinRequiredArea">
            <summary>
            The minimum floor area programmed for this space (according to client requirements) 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcSpaceProgram.RequestedLocation">
            <summary>
            Location within the building structure, requested for the space. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcSpaceProgram.StandardRequiredArea">
            <summary>
            The floor area programmed for this space (according to client requirements). 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcSpaceProgram.HasInteractionReqsFrom">
            <summary>
            Set of inverse relationships to space or work interaction requirement objects (FOR RelatedObject). 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ArchitectureDomain.IfcSpaceProgram.HasInteractionReqsTo">
            <summary>
            Set of inverse relationships to space or work interaction requirements (FOR RelatingObject). 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcDistributionElementType">
            <summary>
              The element type (IfcDistributionElementType) defines a list of commonly shared property set definitions of an element and an optional set of product representations.
            </summary>
            <remarks>
              Definition from IAI: The element type (IfcDistributionElementType) defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (i.e. the specific product information, that is common to all occurrences of that product type).
              NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem. 
              A distribution element type is used to define the common properties of a certain type of a distribution element that may be applied to many instances of that feature type to assign a specific style. Distribution element types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.
              The occurrences of the IfcDistributionElementType are represented by instances of IfcDistributionElement (or its subtypes).
              HISTORY  New entity in Release IFC2x Edition 2.
              IFC2x Edition 3 CHANGE  The entity has been made non-abstract
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcElementType">
            <summary>
              The element type (IfcElementType) defines a list of commonly shared property set definitions of an element and an optional set of product representations.
            </summary>
            <remarks>
              Definition from IAI: The element type (IfcElementType) defines a list of commonly shared property set definitions of an element and an optional 
              set of product representations. It is used to define an element specification (i.e. the specific product information, 
              that is common to all occurrences of that product type).
              NOTE: The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, 
              which gets assigned by an element instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.
              An element type is used to define the common properties of a certain type or style of an element that may be applied
              to instances of that element type to assign a specific style. 
              Element types (the instantiable subtypes) may be exchanged without being already assigned to occurrences.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcTypeObject.ApplicableOccurrence">
            <summary>
              Optional. The attribute optionally defines the data type of the occurrence object, to which the assigned type object can relate. If not present, no instruction is given to which occurrence object the type object is applicable.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcTypeObject.HasPropertySets">
            <summary>
              Optional. Set list of unique property sets, that are associated with the object type and are common to all object occurrences referring to this object type.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcTypeObject.ObjectTypeOf">
            <summary>
              Reference to the relationship IfcRelDefinedByType and thus to those occurrence objects, which are defined by this type.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcTypeProduct.RepresentationMaps">
            <summary>
              List of unique representation maps. Each representation map describes a block definition of the shape of the product style.
              By providing more than one representation map, a multi-view block definition can be given.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcTypeProduct.Tag">
            <summary>
              The tag (or label) identifier at the particular type of a product, e.g. the article number (like the EAN). It is the identifier at the specific level.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElementType.ElementType">
            <summary>
              The type denotes a particular type that indicates the object further. 
              The use has to be established at the level of instantiable subtypes. In particular it holds the user defined type, 
              if the enumeration of the attribute 'PredefinedType' is set to USERDEFINED.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ConstraintResource.IfcConstraint">
            <summary>
              Abstract class. An IfcConstraint is used to define a constraint or limiting value or boundary condition 
              that may be applied to an object or to the value of a property.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraint.Name">
            <summary>
              A name to be used for the constraint (e.g., ChillerCoefficientOfPerformance).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraint.Description">
            <summary>
              A description that may apply additional information about a constraint.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraint.ConstraintGrade">
            <summary>
              Enumeration that qualifies the type of constraint.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraint.ConstraintSource">
            <summary>
              Any source material, such as a code or standard, from which the constraint originated.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraint.CreatingActor">
            <summary>
              Person and/or organization that has created the constraint.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraint.CreationTime">
            <summary>
              Time when information specifying the constraint instance was created.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraint.UserDefinedGrade">
            <summary>
              Allows for specification of user defined grade of the constraint beyond the enumeration values (hard, soft, advisory) 
              provided by ConstraintGrade attribute of type ConstraintEnum. 
              When a value is provided for attribute UserDefinedGrade in parallel the attribute ConstraintGrade 
              shall have enumeration value USERDEFINED.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraint.ClassifiedAs">
            <summary>
              Reference to the constraint classifications through objectified relationship
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraint.RelatesConstraints">
            <summary>
              References to the objectified relationships that relate other constraints with this constraint.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraint.IsRelatedWith">
            <summary>
              References to the objectified relationships that relate this constraint with other constraints.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraint.PropertiesForConstraint">
            <summary>
              Reference to the properties to which the constraint is applied.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraint.Aggregates">
            <summary>
              Reference to the relationships that collect other constraints into this aggregate constraint.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraint.IsAggregatedIn">
            <summary>
              Reference to the relationships that relate this constraint into aggregate constraints.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ConstraintResource.IfcConstraintAggregationRelationship">
            <summary>
              An IfcConstraintAggregationRelationship is an objectified relationship that enables instances
              of IfcConstraint and its subtypes to be aggregated together logically.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraintAggregationRelationship.Name">
            <summary>
              A name used to identify or qualify the constraint aggregation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraintAggregationRelationship.Description">
            <summary>
              A description that may apply additional information about a constraint aggregation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraintAggregationRelationship.RelatingConstraint">
            <summary>
              Constraint to which the other Constraints are associated.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraintAggregationRelationship.RelatedConstraints">
            <summary>
              Constraints that are aggregated in using the LogicalAggregator.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraintAggregationRelationship.LogicalAggregator">
            <summary>
              Enumeration that identifies the logical type of aggregation.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ConstraintResource.IfcConstraintClassificationRelationship">
            <summary>
              An IfcClassificationConstraintRelationship is an objectified relationship that enables assigning 
              classifications to instances of IfcConstraint and its subtypes.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraintClassificationRelationship.ClassifiedConstraint">
            <summary>
              Constraint being classified
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraintClassificationRelationship.RelatedClassifications">
            <summary>
              Classifications of the constraint. .
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ConstraintResource.IfcConstraintEnum">
            <summary>
              An IfcConstraintEnum is an enumeration used to qualify a constraint.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ConstraintResource.IfcConstraintRelationship">
            <summary>
              An IfcConstraintRelationship is an objectified relationship that enables instances of 
              IfcConstraint and its subtypes to be associated to each other.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraintRelationship.Name">
            <summary>
              A name used to identify or qualify the constraint aggregation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraintRelationship.Description">
            <summary>
              A description that may apply additional information about a constraint aggregation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraintRelationship.RelatingConstraint">
            <summary>
              Constraint to which the other Constraints are associated.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcConstraintRelationship.RelatedConstraints">
            <summary>
              Constraints that are aggregated in using the LogicalAggregator.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ConstraintResource.IfcLogicalOperatorEnum">
            <summary>
              IfcLogicalOperatorEnum is an enumeration that defines the logical operators that may be applied 
              for the satisfaction of more than one constraint at a time.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcMetric.Benchmark">
            <summary>
              Enumeration that identifies the type of benchmark data.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcMetric.ValueSource">
            <summary>
              Reference source for data values.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcMetric.DataValue">
            <summary>
              Value with data type defined by the DataType enumeration
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcObjective.BenchmarkValues">
            <summary>
              A list of any benchmark values used for comparison purposes.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcObjective.ResultValues">
            <summary>
              A list of any resultant values used for comparison purposes.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcObjective.ObjectiveQualifier">
            <summary>
              Enumeration that qualifies the type of objective constraint.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcObjective.UserDefinedQualifier">
            <summary>
              Enumeration that qualifies the type of objective constraint.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcPropertyConstraintRelationship.RelatingConstraint">
            <summary>
              The constraint that is to be related.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcPropertyConstraintRelationship.RelatedProperties">
            <summary>
              The properties to which a constraint is to be related.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcPropertyConstraintRelationship.Name">
            <summary>
              A name used to identify or qualify the property constraint relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstraintResource.IfcPropertyConstraintRelationship.Description">
            <summary>
              A description that may apply additional information about a property constraint relationship.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcResource">
            <summary>
              The IfcResource contains the information needed to represent the costs, schedule, and other impacts from the use of a thing in a process.
            </summary>
            <remarks>
              Definition from IAI: The IfcResource contains the information needed to represent the costs, schedule, and other impacts from the use of a thing in a process. It is not intended to use IfcResource to model the general properties of the things themselves, while an optional linkage from IfcResource to the things to be used can be specified (i.e. the relationship from subtypes of IfcResource to IfcProduct through the IfcRelAssignsToResource relationship). 
              There are two basic intended use of IfcResource. First, if the attributes of the thing are not needed for the purpose of the use of IfcResource, or the types of things are not explicitly modeled in IFC yet, then the linkage between the resource and the thing doesn’t have to be instantiated in the system. That is, the attributes of IfcResource (or its subtypes) alone are sufficient to represent the use of the thing as a resource for the purpose of the project. 
              EXAMPLE: construction equipment such as earth-moving vehicles or tools are not currently modeled within the IFC. For the purpose of estimating and scheduling, these can be represented using subtypes of IfcResource alone.
              Second, if the attributes of the thing are needed for the use of IfcResource objects, and they are modeled explicitly as objects (e.g. classes or properties), then the IfcResource instances can be linked to the instances of the type of the things being referenced. Things that might be used as resources and that are already modeled in the IFC include physical products, people and organizations, and materials. The relationship object IfcRelAssignsToResource is provided for this approach.
              The inherited attribute ObjectType is used as a textual code that identifies the resource type. 
              HISTORY New entity in IFC Release 1.0 
              IFC2x PLATFORM CHANGE: The attributes BaseUnit and ResourceConsumption have been removed from the abstract entity, they are reintroduced at a lower level in the hierarchy.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcResource.ResourceOf">
            <summary>
              Reference to the IfcRelAssignsToResource relationship and thus pointing to those objects, which are used as resources.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstructionMgmtDomain.IfcConstructionResource.ResourceGroup">
            <summary>
              Optional identification of a code or ID for the construction resource
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstructionMgmtDomain.IfcConstructionResource.ResourceIdentifier">
            <summary>
              The group label, or title of the type resource, e.g. the title of a labour resource as carpenter, crane operator, superintendent, etc.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstructionMgmtDomain.IfcConstructionResource.ResourceConsumption">
            <summary>
              A value that indicates how the resource is consumed during its use in a process (see IfcResourceConsumptionEnum for more detail)
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstructionMgmtDomain.IfcConstructionResource.BaseQuantity">
            <summary>
              The basic (i.e. default, or recommended) unit that should be used for measuring the volume (or amount) of the resource and the basic quantity of the resource fully or partially consumed.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstructionMgmtDomain.IfcConstructionMaterialResource.Suppliers">
            <summary>
              The actor performing the role of the subcontracted resource.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstructionMgmtDomain.IfcConstructionMaterialResource.UsageRatio">
            <summary>
              The description of the jobs that this subcontract should complete.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstructionMgmtDomain.IfcLaborResource.SkillSet">
            <summary>
              The skill set required for this type of labor.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstructionMgmtDomain.IfcSubContractResource.SubContractor">
            <summary>
              The actor performing the role of the subcontracted resource.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ConstructionMgmtDomain.IfcSubContractResource.JobDescription">
            <summary>
              The description of the jobs that this subcontract should complete.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ControlExtension.IfcPerformanceHistory.LifeCyclePhase">
            <summary>
            Describes the applicable building life-cycle phase. Typical values should be DESIGNDEVELOPMENT, SCHEMATICDEVELOPMENT, CONSTRUCTIONDOCUMENT, CONSTRUCTION, ASBUILT, COMMISSIONING, OPERATION, etc. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ControlExtension.IfcRelAssociatesApproval">
            <summary>
            The entity IfcRelAssociatesApproval is used to apply approval information defined by IfcApproval, 
            in IfcApprovalResource schema, to all subtypes of IfcRoot.
            </summary>
            <remarks>
            Definition from IAI: The entity IfcRelAssociatesApproval is used to apply approval information defined by IfcApproval, 
            in IfcApprovalResource schema, to all subtypes of IfcRoot.
            NOTE: This entity replaces the IfcApprovalUsage in IFC2x
            HISTORY: New entity in Release IFC2x Edition 2.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelAssociates.RelatedObjects">
            <summary>
              Objects or Types, to which the external references or information is associated
            </summary>
            <remarks>
              WR21   :   The IfcRelAssociates relationship is restricted to associate information object, such as classification, document, library information, matsel, etc., to semantic object (occurrence objects based on IfcObject, and type objects, based on IfcTypeObject).
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ControlExtension.IfcRelAssociatesApproval.RelatingApproval">
            <summary>
            Reference to approval that is being applied using this relationship.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ControlExtension.IfcRelAssociatesConstraint">
            <summary>
            The entity IfcRelAssociatesConstraint is used to apply constraint information defined by IfcConstraint, in IfcConstraintResource schema, to all subtypes of IfcRoot. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ControlExtension.IfcRelAssociatesConstraint.Intent">
            <summary>
            The intent of the constraint usage with regard to its related IfcConstraint and IfcObjects, IfcPropertyDefinitions or IfcRelationships. Typical values can be e.g. RATIONALE or EXPECTED PERFORMANCE. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ControlExtension.IfcRelAssociatesConstraint.RelatingConstraint">
            <summary>
            Reference to constraint that is being applied using this relationship.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ControlExtension.IfcTimeSeriesSchedule">
            <summary>
            Definition from IAI: The IfcTimeSeriesSchedule defines a time-series that is applicable to to one or more calendar dates. It typically contains a periodically repetitive time series used to define the schedule, facilitating the capture of hours of operation, occupancy loads, etc.
            
                HISTORY: New entity in Release IFC2x Edition 2.
            
            Informal proposition:
            
                If Intent : IfcConstraintIntentEnum is set to value UserDefined, then the intent shall be given by using inherited attribute IfcObject.ObjectType.
            
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ControlExtension.IfcTimeSeriesSchedule.ApplicableDates">
            <summary>
            Defines an ordered list of the dates for which the time-series data are applicable. For example, the definition of all public holiday dates for a given year allows the formulation of a "holiday" occupancy schedule from overall occupancy data. Local time can be used if the dates are not bound to a particular year. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ControlExtension.IfcTimeSeriesSchedule.TimeSeriesScheduleType">
            <summary>
            Defines the type of schedule, such as daily, weekly, monthly or annually. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ControlExtension.IfcTimeSeriesSchedule.TimeSeries">
            <summary>
            The time series is used to represent the values at discrete points in time that define the schedule. For example, a 24-hour occupancy schedule would be a regular time series with a start time at midnight, end time at (the following) midnight, and with 24 values indicating the occupancy load for each hour of the 24-hour period. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.CostResource.IfcAppliedValue">
            <summary>
              An IfcAppliedValue is an abstract supertype that specifies the common attributes for cost and environmental values that may be applied to objects within the IFC model.
            </summary>
            <remarks>
              Definition from IAI: An IfcAppliedValue is an abstract supertype that specifies the common attributes for cost and environmental values that may be applied to objects within the IFC model. 
              HISTORY: New Entity in IFC Release 2x2
              Use Definitions
              The extent of the IfcAppliedValue is determined by the AppliedValue attribute which may be defined either as an IfcMeasureWithUnit or as an IfcMonetaryMeasure or as an IfcRatioMeasure via the IfcAppliedValueSelect type. 
              Optionally, an IfcAppliedValue may have an applicable date. This is intended to fix the date on which the value became relevant for use. It may be the date on which the value was set in the model or it may be a prior or future date when the value becomes operable. It should be noted that the datatype for IfcAppliedValue.ApplicableDate is IfcDateTimeSelect. This enables either a calendar date or a date and time to be selected. The option of selecting a time only without a date is also possible through this select mechanism but should not be used in the case of an applied value. 
              Similarly, an IfcAppliedValue may have a 'fixed until' date. This is intended to fix the date on which the value ceases to be relevant for use. 
              An instance of IfcAppliedValue may have a unit basis asserted. This is defined as an IfcMeasureWithUnit that determines the extent of the unit value for application purposes. It is assumed that when this attribute is asserted, then the value given to IfcAppliedValue is that for unit quantity. This is not enforced within the IFC schema and thus needs to be controlled within an application.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcAppliedValue.Name">
            <summary>
              Optional. A name or additional clarification given to a cost (or impact) value.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcAppliedValue.Description">
            <summary>
              Optional. The description that may apply additional information about a cost (or impact) value. The description may be from purpose generated text, specification libraries, standards etc.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcAppliedValue.Value">
            <summary>
              Optional. The extent or quantity or amount of an applied value.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcAppliedValue.UnitBasis">
            <summary>
              Optional. The number and unit of measure on which the unit cost is based.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcAppliedValue.ApplicableDate">
            <summary>
              Optional. The date until which applied value is applicable.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcAppliedValue.FixedUntilDate">
            <summary>
              Optional. The date until which applied value is applicable.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcAppliedValue.ValuesReferenced">
            <summary>
              Inverse. Pointer to the IfcReferencesCostDocument relationship, which refer to a document from which the cost value is referenced.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcAppliedValue.ValueOfComponents">
            <summary>
              Inverse. The total (or subtotal) value of the components within the applied value relationship expressed as a single applied value.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcAppliedValue.IsComponentIn">
            <summary>
              Inverse. The value of the single applied value which is used by the applied value relationship to express a complex applied value.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.CostResource.IfcAppliedValueRelationship">
            <summary>
              An IfcAppliedValueRelationship is a relationship class that enables applied values of cost or environmental impact to be aggregated together as components of another applied value.
            </summary>
            <remarks>
              Definition from IAI: An IfcAppliedValueRelationship is a relationship class that enables applied values of cost or environmental impact to be aggregated together as components of another applied value.
              HISTORY: New Entity in IFC Release 2.0. Name changed in IFC 2x2 from IfcCostValueRelationship.
              Use Definitions
              Dependency relationships can exist between applied values on the basis that one particular value may be determined by operations on one or more other values. This is captured through the IfcAppliedValueRelationship entity. In this relationship, one instance of IfcAppliedValue acts as the principal (IfcAppliedValueRelationship.ComponentOf) whose value may be determined from the instances of IfcAppliedValue that are defined as its components (IfcAppliedValueRelationship.Components)
              An IfcAppliedValueRelationship has an ArithmeticOperator attribute that specifies the form of arithmetical operation implied by the relationship.
              A practical consideration when using the applied value relationship is that when the arithmetic operator is ADD, then the type of the IfcAppliedValue.AppliedValue attribute will be IfcMeasureWithUnit or IfcMonetaryMeasure whilst if the arithmetic operator is MULTIPLY, then the type of the IfcAppliedValue.AppliedValue attribute for one instance of IfcAppliedValue will be IfcMeasureWithUnit or IfcMonetaryMeasure whilst for other instances it will be IfcRatioMeasure.
              Example
              A relationship exists between applied value A and applied values B, C and D such that the value of A is determined by the addition of B, C and D such that:
              A = B + C + D 
             
              It is possible to develop more complex applied value specifications by creating hierarchies of applied value relationships. In the diagram below, the development of a applied value is shown whereby, because B = E * F and D = G * H * J, then:
              A = ((E * F) + C + (G * H * J)) 
              EXPRESS specification:
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcAppliedValueRelationship.ComponentOfTotal">
            <summary>
              The applied value (total or subtotal) of which the value being considered is a component.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcAppliedValueRelationship.Components">
            <summary>
              Applied values that are components of another applied value and from which that applied value may be deduced.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcAppliedValueRelationship.ArithmeticOperator">
            <summary>
              The arithmetic operator applied in an applied value relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcAppliedValueRelationship.Name">
            <summary>
              A name used to identify or qualify the applied value relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcAppliedValueRelationship.Description">
            <summary>
              A description that may apply additional information about an applied value relationship.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.CostResource.IfcArithmeticOperatorEnum">
            <summary>
              The IfcArithmeticOperatorEnum specifies the form of arithmetical operation implied by the relationship.
            </summary>
            <remarks>
              Use Definitions
              There can be only one arithmetic operator for each applied value relationship. This is to enforce arithmetic consistency. Given this consistency, the cardinality of the IfcAppliedValueRelationship.Components attribute is a set of one to many applied values that are components of an applied value. 
              EXPRESS specification:
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.CostResource.IfcCostValue">
            <summary>
              An IfcCostValue is an amount of money or a value that affects an amount of money.
            </summary>
            <remarks>
              Definition from IAI:An IfcCostValue is an amount of money or a value that affects an amount of money.
              HISTORY: New Entity in IFC Release 1.0 
              Use Definitions
              Each instance of IfcCostValue may also have a CostType. There are many possible types of cost value that may be identified. Whilst there is a broad understanding of the meaning of names that may be assigned to different types of costs, there is no general standard for naming cost types nor are there any broadly defined classifications. To allow for any type of cost value, the IfcLabel datatype is assigned. The following defines some cost types that might be applied: 
              Annual rate of return Lease Replacement 
              Bonus List price Sale 
              Bulk purchase rebate Maintenance Small quantity surcharge 
              Contract Material Spares 
              Consultancy Overhead Storage 
              Delivery Postage and packing Sub-Contract 
              Estimated cost Profit Trade discount 
              Hire Purchase Transportation 
              Installation Rental Waste allowance 
              Interest rate Repair Whole life 
              Labor   
              In the absence of any well-defined standard, it is recommended that local agreements should be made to define allowable and understandable cost value types within a project or region
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcCostValue.CostType">
            <summary>
              Specification of the type of cost type used.
            </summary>
            <remarks>
              NOTE: There are many possible types of cost value that may be identified. Whilst there is a broad understanding of the meaning of names that may be assigned to different types of costs, there is no general standard for naming cost types nor are there any broadly defined classifications. To allow for any type of cost value, the IfcLabel datatype is assigned.
              In the absence of any well defined standard, it is recommended that local agreements should be made to define allowable and understandable cost value types within a project or region.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcCostValue.Condition">
            <summary>
              Optional. The condition under which a cost value applies.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.CostResource.IfcCurrencyRelationship">
            <summary>
              An IfcCurrencyRelationship defines the rate of exchange that applies between two designated currencies at a particular time and as published by a particular source.
            </summary>
            <remarks>
              Definition from IAI:An IfcCurrencyRelationship defines the rate of exchange that applies between two designated currencies at a particular time and as published by a particular source. 
              HISTORY: New Entity in IFC 2x2. 
              Use Definitions
              An IfcCurrencyRelationship is used where there may be a need to reference an IfcCostValue in one currency to an IfcCostValue in another currency. It takes account of fact that currency exchange rates may vary by requiring the recording the date and time of the currency exchange rate used and the source that publishes the rate. There may be many sources and there are different strategies for currency conversion (spot rate, forward buying of currency at a fixed rate). 
              The source for the currency exchange is defined as an instance of IfcLibraryInformation that includes a name and a location (typically a URL, since most rates are now published in reliable sources via the web, although it may be a string value defining a lication of any type).
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcCurrencyRelationship.RelatingMonetaryUnit">
            <summary>
              The monetary unit from which an exchange is derived. For instance, in the case of a conversion from GBP to USD, the relating monetary unit is GBP.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcCurrencyRelationship.RelatedMonetaryUnit">
            <summary>
              The monetary unit to which an exchange results. For instance, in the case of a conversion from GBP to USD, the related monetary unit is USD.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcCurrencyRelationship.ExchangeRate">
            <summary>
              The currently agreed ratio of the amount of a related monetary unit that is equivalent to a unit amount of the relating monetary unit in a currency relationship. For instance, in the case of a conversion from GBP to USD, the value of the exchange rate may be 1.486 (USD) : 1 (GBP).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcCurrencyRelationship.RateDateTime">
            <summary>
              The date and time at which an exchange rate applies.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcCurrencyRelationship.RateSource">
            <summary>
              The source from which an exchange rate is obtained.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.CostResource.IfcEnvironmentalImpactCategoryEnum">
            <summary>
              The IfcEnvironmentalImpactCategoryEnum defines the range of categories into which an environmental impact can be broken down and from which the category required may be selected.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.CostResource.IfcEnvironmentalImpactCategoryEnum.DISPOSAL">
            <summary>
              An environmental impact value is deduced from values in more than one category as a result of using the applied value relationship.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.CostResource.IfcEnvironmentalImpactCategoryEnum.EXTRACTION">
            <summary>
              An environmental impact value due to disposal.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.CostResource.IfcEnvironmentalImpactCategoryEnum.INSTALLATION">
            <summary>
              An environmental impact value due to extraction.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.CostResource.IfcEnvironmentalImpactCategoryEnum.MANUFACTURE">
            <summary>
              An environmental impact value due to installation.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.CostResource.IfcEnvironmentalImpactCategoryEnum.TRANSPORTATION">
            <summary>
              An environmental impact value due to manufacture and manufacturing processes.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.CostResource.IfcEnvironmentalImpactCategoryEnum.USERDEFINED">
            <summary>
              An environmental impact value due to transportation.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.CostResource.IfcEnvironmentalImpactValue">
            <summary>
              An IfcEnvironmentalImpactValue is an amount or measure of an environmental impact or a value that affects an amount or measure of an environmental impact.
            </summary>
            <remarks>
              Definition from IAI: An IfcEnvironmentalImpactValue is an amount or measure of an environmental impact or a value that affects an amount or measure of an environmental impact.
              HISTORY: New entity in IFC 2x2
              Use Definitions
              The IfcEnvironmentalImpactValue contains the value of the environmental impact. For example this could represent the volume of carbon dioxide emission, amount of operational energy or mass of aluminium used in a product.
              Each instance of IfcEnvironmentalImpactValue may also have an ImpactType. There are many possible types of environmental impact value that may be identified. To allow for any type of environmental impact value, the IfcLabel datatype is assigned. The following defines some impact types that might be applied: 
              CO2 emission 
              Embodied energy 
              Mass of aluminium 
              Operational energy 
              Resource 
              Water pollution 
              Where a formal standard is not used, it is recommended that local agreements should be made to define allowable and understandable impact value types within a project or region.
              Formal Propositions:
              WR1   :   The attribute UserDefinedCategory must be asserted when the value of the IfcEnvironmentalImpactCategoryEnum is set to USERDEFINED.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcEnvironmentalImpactValue.ImpactType">
            <summary>
              Specification of the environmental impact type to be referenced.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcEnvironmentalImpactValue.Category">
            <summary>
              The category into which the environmental impact value falls.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcEnvironmentalImpactValue.UserDefinedCategory">
            <summary>
              Optional. A user defined value category into which the environmental impact value falls.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.CostResource.IfcReferencesValueDocument">
            <summary>
              An IfcReferencesValueDocument is a means of referencing many instances of IfcAppliedValue to a single document where the document is a price list, quotation, list of environmental impact values or other source of information.
            </summary>
            <remarks>
              Definition from IAI: An IfcReferencesValueDocument is a means of referencing many instances of IfcAppliedValue to a single document where the document is a price list, quotation, list of environmental impact values or other source of information. 
              HISTORY: New class in IFC Release 2x. Name changed from IfcReferencesCostDocument in IFC 2x2
              Use Definitions
              The purpose of this class is to be able to identify a reference source from which applied values are obtained. Since many objects may be obtain such values from the same referenced document, use of a relationship class allows the document to be identified once only when information is exchanged or shared rather than many times.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcReferencesValueDocument.ReferencedDocument">
            <summary>
              A document such as a price list or quotation from which costs are obtained.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcReferencesValueDocument.ReferencingValues">
            <summary>
              Costs obtained from a single document such as a price list or quotation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcReferencesValueDocument.Name">
            <summary>
              Optional. A name used to identify or qualify the relationship to the document from which values may be referenced..
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.CostResource.IfcReferencesValueDocument.Description">
            <summary>
              Optional. A description of the relationship to the document from which values may be referenced.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.DateTimeResource.IfcAheadOrBehind">
            <summary>
              An enumeration type that is used to specify whether a local time is ahead or behind of the coordinated universal time.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-41:1992: An enumeration type that is used to specify whether a local time is ahead or behind of the coordinated universal time. 
              NOTE Corresponding STEP name: ahead_or_behind, please refer to ISO/IS 10303-41:1994 for the final definition of the formal standard. 
              HISTORY New type in IFC Release 2.0.
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.DateTimeResource.IfcAheadOrBehind.AHEAD">
            <summary>
              The time is ahead of coordinated universal time.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.DateTimeResource.IfcAheadOrBehind.BEHIND">
            <summary>
              The time is ahead of coordinated universal time.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.DateTimeResource.IfcCalendarDate">
            <summary>
              A date which is defined by a day in a month of a year.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-41:1992: A date which is defined by a day in a month of a year. 
              NOTE Corresponding STEP name: calendar_date, please refer to ISO/IS 10303-41:1994 for the final definition of the formal standard. 
              HISTORY New entity in IFC Release 1.5.1.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.DateTimeResource.IfcCalendarDate.DayComponent">
            <summary>
              The day element of the calendar date.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.DateTimeResource.IfcCalendarDate.MonthComponent">
            <summary>
              The month element of the calendar date.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.DateTimeResource.IfcCalendarDate.YearComponent">
            <summary>
              The year element of the calendar date.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.DateTimeResource.IfcCoordinatedUniversalTimeOffset.HourOffset">
            <summary>
              The number of hours by which local time is offset from coordinated universal time.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.DateTimeResource.IfcCoordinatedUniversalTimeOffset.MinuteOffset">
            <summary>
              The number of minutes by which local time is offset from coordinated universal time.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.DateTimeResource.IfcCoordinatedUniversalTimeOffset.Sense">
            <summary>
              The direction of the offset.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.DateTimeResource.IfcLocalTime.HourComponent">
            <summary>
              The number of hours of the local time.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.DateTimeResource.IfcLocalTime.MinuteComponent">
            <summary>
              The number of minutes of the local time.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.DateTimeResource.IfcLocalTime.SecondComponent">
            <summary>
              The number of seconds of the local time.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.DateTimeResource.IfcLocalTime.Zone">
            <summary>
              The relationship of the local time to coordinated universal time.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.DateTimeResource.IfcLocalTime.DaylightSavingOffset">
            <summary>
              The offset of daylight saving time from basis time.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcGroup">
            <summary>
              Definition from IAI: The IfcGroup is an generalization of any arbitrary group. A group is a logical collection of objects. 
              It does not have its own position, nor can it hold its own shape representation. 
              Therefore a group is an aggregation under some non-geometrical / topological grouping aspects. 
              NOTE  Use IfcRelDecomposes together with the appropriate subtypes of IfcProduct to define an aggregation of products that may have its own position and shape representation.
              EXAMPLE  An example for a group is the system, since it groups elements under the aspect of their role, regardless of their position in a building. 
              A group can hold any collection of objects (being products, processes, controls, resources, actors or other groups). Thus groups can be nested. An object can be part of zero, one, or many groups.
              Grouping relationships are not required to be hierarchical.
              NOTE  Use IfcRelDecomposes together with the appropriate subtypes of IfcProduct to define an hieraarchical aggregation of products. 
              The group collection is handled by an instance of IfcRelAssignsToGroup, which assigns all group members to the IfcGroup.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcGroup.IsGroupedBy">
            <summary>
              Contains the relationship that assigns the group members to the group object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSystem.ServicesBuildings">
            <summary>
              Inverse. Reference to the spatial structure via the objectified relationship IfcRelServicesBuildings, which is serviced by the system.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcDistributionElement">
            <summary>
              Generalization of all elements that participate in a distribution system. It is further specialized in the IFC model.
            </summary>
            <remarks>
              Definition from IAI: Generalization of all elements that participate in a distribution system. It is further specialized in the IFC model.
              HISTORY New entity in IFC Release 1.5.
              Geometry Use Definitions:
              The geometric representation of IfcDistributionElement is given by the IfcProductDefinitionShape, allowing multiple geometric representation. 
              Local Placement
              The local placement for IfcDistributionElement is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement , which is used in the ContainedInStructure inverse attribute, or to a spatial structure element at a higher level, referenced by that. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Geometric Representation
              The geometric representation of IfcDistributionElement is defined using different geometric representation types for the various subtypes. In general, the following guidelines should be used:
              all fixtures (all non distribution flow elements, i.e. everything which is not a duct, pipe or later cable) should be defined by an b-rep - the new mapped item should be used if appropriate as it allows for reusing the geometry definition of the element type at element instances. In this case the IfcShapeRepresentation.RepresentationType = MappedRepresentation. 
              all "simple" distribution flow elements (general ducts and pipes) are defined by sweep geometry . In this case the IfcShapeRepresentation.RepresentationType = SweptSolid. 
              an additional representation type for all "simple" distribution flow elements (general ducts and pipes) is the ability to have a simple line based representation. In this case the IfcShapeRepresentation.RepresentationType = GeometricSet. 
              distribution flow elements with size changes (e.g. reducer) are defined by sectioned spine representations. In this case the IfcShapeRepresentation.RepresentationType = SectionedSpine. 
              all complex distribution elements (e.g. Y branch or T branch) are defined using b-rep geometry. In this case the IfcShapeRepresentation.RepresentationType = Brep.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcElement">
            <summary>
              Generalization of all components that make up an AEC product. Those elements can be logically contained by a spatial structure element that constitutes a certain level within a project structure hierarchy (e.g., site, building, storey or space).
            </summary>
            <remarks>
              Definition from IAI: Generalization of all components that make up an AEC product. Those elements can be logically contained by a spatial structure element that constitutes a certain level within a project structure hierarchy (e.g., site, building, storey or space). This is done by using the IfcRelContainedInSpatialStructure relationship. 
              Elements are physically existent objects, although they might be void elements, such as holes. Elements either remain permanently in the AEC product, or only temporarily, as formwork does. Elements can be either assembled on site or pre-manufactured and built in on site. 
              EXAMPLEs of elements in a building construction context are walls, floors, windows and recesses. 
              An element can have material and quantity information assigned through the IfcRelAssociatesMaterial and IfcRelDefinesByProperties relationship. 
              In addition an element can be declared to be a specific occurrence of an element type (and thereby be defined by the element type properties) using the IfcRelDefinesByType relationship.
              An element can also be defined as an element assembly that is a group of semantically and topologically related elements that form a higher level part of the AEC product. Those element assemblies are defined by virtue of the IfcRelAggregates relationship.
              EXAMPLEs for element assembly are complete Roof Structures, made by several Roof Areas, or a Stair, composed by Flights and Landings. 
              Elements that performs the same function may be grouped by an "Element Group By Function". It is realized by an instance of IfcGroup with the ObjectType = 'ElementGroupByFunction". 
              HISTORY New entity in IFC Release 1.0 
              Property Set Use Definition:
              The property sets relating to the IfcElement are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcElement are part of this IFC release:
              Pset_Draughting: common property set for elements introduced to handle the assignement of CAD related information (here layer name and object colour). 
              Pset_QuantityTakeOff: common property set for elements introduced to handle additional description of quantity take off. 
              Pset_ElementShading: common property set for elements that have shading properties to be used in energy calculations or simulations 
              Quantity Use Definition:
              The quantities relating to the IfcElement are defined by the IfcElementQuantity and attached by the IfcRelDefinesByProperties. A detailed specification for individual quantities is introduced at the level of subtypes of IfcElement.
              Geometry Use Definitions
              The geometric representation of any IfcElement is given by the IfcProductDefinitionShape and IfcLocalPlacement allowing multiple geometric representations. A detailed specification for the shape representaion is introduced at the level of subtypes of IfcElement.
              information is provided at the level of the subtypes.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcProduct">
            <summary>
              Any object, or any aid to define, organize and annotate an object, that relates to a geometric or spatial context.
            </summary>
            <remarks>
              Definition from IAI: Any object, or any aid to define, organize and annotate an object, that relates to a geometric or spatial context. Subtypes of IfcProduct usually hold a shape representation and a local placement within the project structure. 
              This includes manufactured, supplied or created objects (referred to as elements) for incorporation into an AEC/FM project. This also includes objects that are created indirectly by other products, as spaces are defined by bounding elements. Products can be designated for permanent use or temporary use, an example for the latter is formwork. Products are defined by their properties and representations.
              In addition to physical products (covered by the subtype IfcElement) and spatial items (covered by the subtype IfcSpatialStructureElement) the IfcProduct also includes non-physical items, that relate to a geometric or spatial contexts, such as grid, port, annotation, structural actions, etc.
              HISTORY New Entity in IFC Release 1.0
              Use Definition
              Any instance of IfcProduct defines a particular occurrence of a product, the common type information, that relates to many similar (or identical) occurrences of IfcProduct, is handled by the IfcTypeProduct (and its subtypes), assigned to one or many occurrences of IfcProduct by using the objectified relationship IfcRelDefinesByType. The IfcTypeProduct may provide, in addition to common properties, also a common geometric representation for all occurrences.
              An IfcProduct occurs at a specific location in space if it has a geometric representation assigned. It can be placed relatively to other products, but ultimately relative to the world coordinate system defined for this project.
              The inherited ObjectType attribute can be used to designate a particular type of the product instance. If subtypes of IfcProduct have a PredefinedType defined, the ObjectType is used to provide the user defined, particular type of the product instance, if the PredefinedType is set to USERDEFINED.
              Formal Propositions:
              WR1   :   If an Representation is given, then also a LocalPlacement has to be given.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcProduct.ObjectPlacement">
            <summary>
              Optional. Placement of the product in space, the placement can either be absolute (relative to the world coordinate system), relative (relative to the object placement of another product), or constraint (e.g. relative to grid axes)
            </summary>
            <remarks>
              Placement of the product in space, the placement can either be absolute (relative to the world coordinate system), relative (relative to the object placement of another product), or constraint (e.g. relative to grid axes). It is determined by the various subtypes of IfcObjectPlacement, which includes the axis placement information to determine the transformation for the object coordinate system.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcProduct.Representation">
            <summary>
              Optional. Reference to the representations of the product, being either a representation (IfcProductRepresentation) or as a special case a shape representations (IfcProductDefinitionShape).
            </summary>
            <remarks>
              Reference to the representations of the product, being either a representation (IfcProductRepresentation) or as a special case a shape representations (IfcProductDefinitionShape). The product definition shape provides for multiple geometric representations of the shape property of the object within the same object coordinate system, defined by the object placement.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcProduct.ReferencedBy">
            <summary>
              Reference to the IfcRelAssignsToProduct relationship, by which other subtypes of IfcObject can be related to the product.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElement.Tag">
            <summary>
              Optional. The tag (or label) identifier at the particular instance of a product, e.g. the serial number, or the position number. It is the identifier at the occurrence level.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElement.FillsVoids">
            <summary>
              Inverse. Reference to the Fills Relationship that puts the Element into the Opening within another Element.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElement.ConnectedTo">
            <summary>
              Inverse. Reference to the element connection relationship. The relationship then refers to the other element to which this element is connected to.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElement.HasCoverings">
            <summary>
              Inverse. Reference to IfcCovering by virtue of the objectified relationship IfcRelCoversBldgElement. It defines the concept of an element having coverings attached.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElement.HasProjections">
            <summary>
              Inverse. Projection relationship that adds a feature (using a Boolean union) to the IfcBuildingElement.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElement.HasStructuralMember">
            <summary>
            </summary>
            <remarks>
              IFC2x Edition 3 CHANGE  The inverse attribute has been added with upward compatibility for file based exchange.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElement.ReferencedInStructures">
            <summary>
              Inverse. Reference relationship to the spatial structure element, to which the element is additionally associated.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElement.HasPorts">
            <summary>
              Inverse. Reference to the element to port connection relationship. The relationship then refers to the port which is contained in this element.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElement.HasOpenings">
            <summary>
              Inverse. Reference to the Voids Relationship that creates an opening in an element. An element can incorporate zero-to-many openings.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElement.IsConnectionRealization">
            <summary>
              Inverse. Reference to the connection relationship with realizing element. The relationship then refers to the realizing element which provides the physical manifestation of the connection relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElement.ProvidesBoundaries">
            <summary>
              Inverse. Reference to Space Boundaries by virtue of the objectified relationship IfcRelSeparatesSpaces. It defines the concept of an Building Element bounding Spaces.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElement.ConnectedFrom">
            <summary>
              Inverse. Reference to the element connection relationship. The relationship then refers to the other element that is connected to this element.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElement.ContainedInStructure">
            <summary>
              Inverse. Containment relationship to the spatial structure element, to which the element is primarily associated.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ElectricalDomain.IfcElectricDistributionPointFunctionEnum">
            <summary>
              Defines the range of different functions that an electric distribution point can fulfil.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ElectricalDomain.IfcLightFixtureTypeEnum">
            <summary>
              Defines the range of different types of light fixture available.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ElectricalDomain.IfcLightFixtureTypeEnum.POINTSOURCE">
            <summary>
              A light fixture that is considered to emit light at a point.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ElectricalDomain.IfcLightFixtureTypeEnum.DIRECTIONSOURCE">
            <summary>
              A light fixture that is considered to emit light from a linear or area face and in a direction.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ElectricalDomain.IfcProtectiveDeviceTypeEnum">
            <summary>
              Defines the range of different types of protective device available.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcActionRequest">
            <summary>
            An IfcActionRequest is a request for an action to fulfil a need.
            Requests may take many forms depending on the need including fault reports for maintenance, 
            requests for small works, purchase requests (where these are to be made through a help desk or buying function) etc.
            </summary>
            <remarks>
            Requests may take many forms depending on the need including fault reports for maintenance, requests for small works, 
            purchase requests (where these are to be made through a help desk or buying function) etc.
            A request may call for several actions and an action may refer to several requests. IfcRelAssignsToControl is used to 
            relate one or more requests to an action.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcActionRequest.RequestId">
            <summary>
            A unique identifier assigned to the request on receipt.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcCondition">
            <summary>
            An IfcCondition determines the state or condition of an element at a particular point in time. 
            </summary>
            <remarks>
            IfcCondition is a particular subtype of IfcGroup that can contain only instances of IfcConditionCriterion. 
            The objectified relationship class IfcRelAssignsToGroup is used to assign the related instances of IfcConditionCriterion 
            to the relating instance of IfcCondition. 
            An IfcCondition is determined either from an observed or a measured state (see IfcConditionCriterion). 
            The condition is determined at a particular point in time, the time being determined through the IfcRelAssociatesDateTime 
            class with an appropriate designation for the value of the DateTimeType e.g. AssessmentDate. Note that other dates may be 
            assigned to IfcCondition for relevant purposes e.g. to recommend the date for the next condition assessment.
            IfcRelAssignsToProduct is used to relate one or more instances of IfcCondition to an artifact that is an instance of a 
            subtype of IfcProduct. For an instance of IfcAsset, condition is related through the use of IfcRelAssignsToGroup.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcConditionCriterion">
            <summary>
            An IfcConditionCriterion is a particular measured or assessed criterion that contributes to the overall condition of an artefact.
            </summary>
            <remarks>
            An IfcConditionCriterion may be either an observed/assessed value or a measured value. This is determined by selection through the 
            IfcConditionCriterionSelect type that has a datatype either of IfcLabel (for a numeric or alphanumeric scale observation 
            e.g. on a scale of 1 to 10 where 1 represents 'as new' and 10 represents 'urgent replacement required') or of 
            IfcMeasureWithUnit (for a measured criterion that also includes units of measure).
            Each criterion must be named and optionally, may also have a description. A description used for a condition should be persistent 
            so that there is absolute consistency in condition recording.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcConditionCriterion.Criterion">
            <summary>
            The measured or assessed value of a criterion.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcConditionCriterion.CriterionDateTime">
            <summary>
            The time and/or date at which the criterion is determined.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcEquipmentStandard">
            <summary>
            An IfcEquipmentStandard is a standard for equipment allocation that can be assigned to persons within an organization.
            </summary>
            <remarks>
            An IfcEquipmentStandard is assigned a set of classification notations (through the IfcRelAssociatesClassification class within the IfcKernel schema) 
            that determine the types of equipment that fulfill the requirements of the standard. In order to use the equipment standard class, 
            a classification of equipment items must have been established. This does not mean that each individual equipment item needs to have a classification 
            notation although this is considered to be desirable. Examples of equipment items that might fall within an equipment standard include number and type 
            PC's and connections, task lighting, pictures etc.
            An equipment standard is assigned to one or several persons or organizations (like a work group or department) through the IfcRelAssignsToControl 
            relationship via the Controls inverse attribute.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcFurnitureStandard">
            <summary>
            An IfcFurnitureStandard is a standard for furniture allocation that can be assigned to persons within an organization.
            </summary>
            <remarks>
            A furniture standard is assigned a set of classification notations (through the IfcRelAssociatesClassification class within the IfcKernel schema) 
            that determine the types of furniture that fulfil the requirements of the standard. In order to use the IfcFurnitureStandard class, a classification 
            of furniture items must have been established. This does not mean that each individual furniture item needs to have a classification notation although 
            this is considered to be desirable. 
            A furniture standard is assigned to one or several persons or organisations (like a work group or department) through the IfcRelAssignsToControl 
            relationship via the Controls inverse attribute.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcMove">
            <summary>
            An IfcMove is an activity that moves people, groups within an organization or complete organizations 
            together with their associated furniture and equipment from one place to another. The objects to be moved, 
            normally people, equipment, and furniture, are assigned by the IfcRelAssignsToProcess relationship.
            </summary>
            <remarks>
            Actors, equipment and furniture are moved from one IfcSpatialStructureElement to another. 
            The IfcSpatialStructureElement to be moved from and that to be moved to are assigned to the IfcMove 
            class using the IfcRelAssignsToProcess relationship.
            The actors (as IfcActor), equipment and furnitures to be moved are assigned to the IfcMove using the IfcRelAssignsToProcess relationship
            Each IfcMove must have a name. This requirement is enforced by a rule.
            he inherited attribute OperatesOn refers to the IfcRelAssignsToProcess relationship, keeping the reference to IfcActor, IfcEquipmentElement
            and IfcFurnishingElement. The QuantityInProcess attribute at the relationship object can be used to specify a quantity of the objects to be moved.
            Constraints may be applied to a move through instances of the IfcConstraint class (or its subtypes) that are associated 
            through the IfcRelAssociatesConstraint relationship class.
            Moves can be nested, i.e. a move object can contain other (more detailed) move objects. This is handled by the IfcRelNests relationship 
            pointing (with RelatingObject) to the containing move and (with RelatedObjects) to the contained (sub)moves.
            Moves are assigned to a move schedule (represented as IfcWorkSchedule with Purpose attribute 'Move') by using the IfcRelAssignsTask relationship.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcProcess.OperatesOn">
            <summary>
              Inverse. Set of Relationships to objects that are operated on by the process.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcProcess.IsSuccessorFrom">
            <summary>
             Inverse. Relative placement in time, refers to the previous processes for which this process is successor.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcProcess.IsPredecessorTo">
            <summary>
             Inverse. Relative placement in time, refers to the subsequent processes for which this process is predecessor.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcTask.TaskId">
            <summary>
              An identifying designation given to a task.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcTask.Status">
            <summary>
              Current status of the task.
              NOTE: Particular values for status are not specified, these should be 
              determined and agreed by local usage. Examples of possible status 
              values include 'Not Yet Started', 'Started', 'Completed'.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcTask.WorkMethod">
            <summary>
              The method of work used in carrying out a task.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcTask.IsMilestone">
            <summary>
              Identifies whether a task is a milestone task (=TRUE) or not (= FALSE).
              NOTE: In small project planning applications, a milestone task may be 
              understood to be a task having no duration. As such, it represents a 
              singular point in time
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcMove.MoveFrom">
            <summary>
            The place from which actors and their associated equipment are moving.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcMove.MoveTo">
            <summary>
            The place to which actors and their associated equipment are moving.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcMove.PunchList">
            <summary>
            A list of points concerning a move that require attention.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcOrderAction">
            <summary>
            An IfcOrderAction is the point at which requests for work are received and processed within an organization.
            </summary>
            <remarks>
            The IfcOrderAction represents tasks that might be carried out by a Helpdesk acting the role of interface for 
            the organization between the facility user and the functional requirement of fulfilling their needs. The actual 
            task represented by the IfcOrderAction class is turning a request into an order and initiating the action that 
            will enable the order to be completed.
            IfcRelAssignsToControl is used to relate one or more instances of IfcOrderAction to an IfcProjectOrder or one 
            of its subtypes including maintenance work order.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcOrderAction.ActionID">
            <summary>
            A unique identifier assigned to an action on issue.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcPermit">
            <summary>
            An IfcPermit is a document that allows permission to carry out actions in places and on 
            artefacts where security or other access restrictions apply.
            </summary>
            <remarks>
            The permit will identify the restrictions that apply and when access may be gained to carry out the actions.
            IfcRelAssignsToControl is used to identify related spaces, assets etc. upon which actions are permitted to take place.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.FacilitiesMgmtDomain.IfcPermit.PermitID">
            <summary>
            A unique identifier assigned to a permit.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionCurveGeometry">
            <summary>
              The IfcConnectionCurveGeometry is used to describe the geometric constraints that facilitate the physical connection of two objects at a curve or at an edge with curve geometry associated.
            </summary>
            <remarks>
              Definition from IAI: The IfcConnectionCurveGeometry is used to describe the geometric constraints that facilitate the physical connection of two objects at a curve or at an edge with curve geometry associated. It is envisioned as a control that applies to the element connection relationships. 
              EXAMPLE  The connection relationship between two walls has a geometric constraint which describes the end caps (or cut-off of the wall ends) by a CurveOnRelatingElement for the first wall and a CurveOnRelatedElement for the second wall. The exact usage of the IfcConnectionCurveGeometry is further defined in the geometry use sections of the elements that use it. 
              The available geometry for the connection constraint may be further restricted to only allow straight segments by applying IfcPolyline only. Such an usage constraint is provided at the object definition of the IfcElement subtype, utilizing the element connection by refering to the subtype of IfcRelConnects with the associated IfcConnectionCurveGeometry.
              HISTORY  New entity in IFC Release 1.5, has been renamed from IfcLineConnectionGeometry in IFC Release 2x.
              IFC2x Edition 3 CHANGE  The provision of topology with associated geometry, IfcEdgeCurve, is enabled by using the IfcCurveOrEdgeCurve.
              Geometry Use Definitions:
              The IfcCurve (or the IfcEdgeCurve with an associated IfcCurve) at the CurveOnRelatingElement attribute defines the curve where the basic geometry items of the connected elements connects. The curve geometry and coordinates are provided within the local coordinate system of the RelatingElement, as specified at the IfcRelConnects Subtype that utilizes the IfcConnectionCurveGeometry. Optionally, the same curve geometry and coordinates can also be provided within the local coordinate system of the RelatedElement by using the CurveOnRelatedElement attribute.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionGeometry">
            <summary>
              The IfcConnectionGeometry is used to describe the geometric and topological constraints that facilitate the physical connection of two objects.
            </summary>
            <remarks>
              Definition from IAI: The IfcConnectionGeometry is used to describe the geometric and topological constraints that facilitate the physical connection of two objects. It is envisioned as a control that applies to the element connection relationships.
              NOTE  The element connection relationship normally provides for a logical connection information, by referencing the relating and related elements. If in addition an IfcConnectionGeometry is provided, physical connection information is given by specifying exactly where at the relating and related element the element connection occurs. Using the eccentricity subtypes, the connection can also be described when there is a physical distance (or eccentricity) between the connection elements. 
              The IfcConnectionGeometry allows for the provision of connection constraints between geometric and topological elements, the following connection geometry/topology types are in scope:
              point | vertex point, 
              curve | edge curve, 
              surface | face surface, 
              profile - NOTE  the profile (or port) connection type is deprecated since Release IFC2x Edition 2. 
              HISTORY  New entity in IFC Release 1.5. 
              IFC2x Edition 3 CHANGE  The definition of the subtypes has been enhanced by allowing either geometric representation items (point | curve | surface) or topological representation items with associated geometry (vertex point | edge curve | face  surface).
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionCurveGeometry.CurveOnRelatingElement">
            <summary>
              The bounded curve at which the connected objects are aligned at the relating element, given in the LCS of the relating element.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionCurveGeometry.CurveOnRelatedElement">
            <summary>
              Optional. The bounded curve at which the connected objects are aligned at the related element, given in the LCS of the related element. If the information is omitted, then the origin of the related element is used.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionPointEccentricity">
            <summary>
            The IfcConnectionPointEccentricity is used to describe the geometric constraints that facilitate the physical connection 
            of two objects at a point or vertex point with associated point coordinates. There is a physical distance, or eccentricity, 
            between the connection points of both object
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionPointGeometry">
            <summary>
              The IfcConnectionPointGeometry is used to describe the geometric constraints that facilitate the physical connection of two objects at a point (here IfcCartesianPoint) or at an vertex with point coordinates associated
            </summary>
            <remarks>
              Definition from IAI: The IfcConnectionPointGeometry is used to describe the geometric constraints that facilitate the physical connection of two objects at a point (here IfcCartesianPoint) or at an vertex with point coordinates associated. It is envisioned as a control that applies to the element connection relationships. 
              EXAMPLE  The connection relationship between two path based elements (like a column and a beam) has a geometric constraint which describes the connection points by a PointOnRelatingElement for the column and a PointOnRelatedElement for the beam. The exact usage of the IfcConnectionPointGeometry is further defined in the geometry use sections of the elements that use it.
              NOTE  If the point connection has an offset, i.e. if the two points (or vertex points) at the relating and related element do not physically match, the subtyp IfcConnectionPointEccentricity shall be used. 
              HISTORY  New entity in IFC Release 1.5, has been renamed from IfcPointConnectionGeometry in IFC Release 2x. 
              IFC2x Edition 3 CHANGE  The provision of topology with associated geometry, IfcVertexPoint, is enabled by using the IfcPointOrVertexPoint. 
              Geometry Use Definitions: 
              The IfcPoint (or the IfcVertexPoint with an associated IfcPoint) at the PointOnRelatingElement attribute defines the point where the basic geometry items of the connected elements connects. The point coordinates are provided within the local coordinate system of the RelatingElement, as specified at the IfcRelConnectsSubtype that utilizes the IfcConnectionPointGeometry. Optionally, the same point coordinates can also be provided within the local coordinate system of the RelatedElement by using the PointOnRelatedElement attribute. If both point coordinates are not identical within a common parent coordinate system (latestly within the world coordinate system), the subtype IfcConnectionPointEccentricity shall be used.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionPointGeometry.PointOnRelatingElement">
            <summary>
              Point at which the connected object is aligned at the relating element, given in the LCS of the relating element.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionPointGeometry.PointOnRelatedElement">
            <summary>
              Optional. Point at which connected objects are aligned at the related element, given in the LCS of the related element. If the information is omitted, then the origin of the related element is used.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionPointEccentricity.EccentricityInX">
            <summary>
            Distance in x direction between the two points (or vertex points) engaged in the point connection. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionPointEccentricity.EccentricityInY">
            <summary>
            Distance in y direction between the two points (or vertex points) engaged in the point connection. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionPointEccentricity.EccentricityInZ">
            <summary>
            Distance in y direction between the two points (or vertex points) engaged in the point connection. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionPortGeometry">
             <summary>
             The IfcConnectionPortGeometry is used to describe the geometric constraints that facilitate the physical
             connection of two objects at a port having a profile geometry (here IfcProfile). It is envisioned as a control 
             that applies to the element connection relationships.
            
             This entity defines the geometric location and configuration of a port on a distribution element. 
             This information can be used to determine how to physically connect distribution elements. 
             </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionPortGeometry.LocationAtRelatingElement">
            <summary>
            Local placement of the port relative to its distribution element's local placement. The element in question is that, which plays the role of the 
            relating element in the connectivity relationship. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionPortGeometry.LocationAtRelatedElement">
            <summary>
             	Local placement of the port relative to its distribution element's local placement. The element in question is that, 
             	which plays the role of the related element in the connectivity relationship. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcConnectionPortGeometry.ProfileOfPort">
            <summary>
            Profile that defines the port connection geometry. It is placed inside the XY plane of the location, 
            given at the relating and (optionally) related distribution element. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcGridAxis.AxisTag">
            <summary>
              Optional. The tag or name for this grid axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcGridAxis.AxisCurve">
            <summary>
              Underlying curve which provides the geometry for this grid axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcGridAxis.SameSense">
            <summary>
              Defines whether the original sense of curve is used or whether it is reversed in the context of the grid axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcGridAxis.PartOfW">
            <summary>
              Inverse. If provided, the IfcGridAxis is part of the WAxes of IfcGrid.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcGridAxis.PartOfV">
            <summary>
              Inverse. If provided, the IfcGridAxis is part of the VAxes of IfcGrid.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcGridAxis.PartOfU">
            <summary>
              Inverse. If provided, the IfcGridAxis is part of the UAxes of IfcGrid.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcGridAxis.HasIntersections">
            <summary>
              The reference to a set of 's, that connect other grid axes to this grid axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcObjectPlacement.PlacesObject">
            <summary>
              Inverse. The IfcObjectPlacement shall be used to provide a placement and an object coordinate system for a single instance of IfcProduct.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcObjectPlacement.ReferencedByPlacements">
            <summary>
              Inverse. Placements that are given relative to this placement of an object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcGridPlacement.PlacementLocation">
            <summary>
              A constraint on one or both ends of the path for an ExtrudedSolid
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcGridPlacement.PlacementRefDirection">
            <summary>
              Reference to a second grid axis intersection, which defines the orientation of the grid placement
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricConstraintResource.IfcLocalPlacement">
            <summary>
              The IfcLocalPlacement defines the relative placement of a product in relation to the placement of another product or the absolute placement of a product within the geometric representation context of the project.
            </summary>
            <remarks>
              Definition from IFC: The IfcLocalPlacement defines the relative placement of a product in relation to the placement of another product or the absolute placement of a product within the geometric representation context of the project. 
              The IfcLocalPlacement allows that an IfcProduct can be placed by this IfcLocalPlacement (through the attributeObjectPlacement) within the local coordinate system of the object placement of another IfcProduct, which is referenced by the PlacementRelTo. Rules to prevent cyclic relative placements have to be introduced on the application level.
              If the PlacementRelTo is not given, then the IfcProduct is placed absolutely within the world coordinate system.
              HISTORY: New entity in IFC Release 1.0.
              Geometry use definitions:
              The following conventions shall apply as default relative positions if the relative placement is used. The conventions are given for all five direct subtypes of IfcProduct, the IfcSpatialStructureElement, IfcElement, IfcAnnotation, IfcGrid, IfcPort. More detailed placement information is given at the level of subtypes of those five types mentioned.
              For the subtypes of IfcSpatialStructureElement the following conventions apply 
              IfcSite shall be placed absolutely within the world coordinate system established by the geometric representation context of the IfcProject 
              IfcBuilding shall be placed relative to the local placement of IfcSite 
              IfcBuildingStorey shall be placed relative to the local placement of IfcBuilding 
              For IfcGrid and IfcAnnotation the convention applies that it shall be placed relative 
              to the local placement of its container (IfcSite, IfcBuilding, IfcBuildingStorey) 
              it should be the same container element that is referenced by the IfcRelContainedInSpatialStructure containment relationship, 
              For IfcPort the convention applies that it shall be placed relative 
              to the local placement of the element it belongs to (IfcElement) 
              it should be the same element that is referenced by the IfcRelConnectsPortToElement connection relationship, 
              For IfcElement the convention applies that it shall be placed relative: 
              to the local placement of its container (IfcSite, IfcBuilding, IfcBuildingStorey) 
              it should be the same container element that is referenced by the IfcRelContainedInSpatialStructure containment relationship, 
              to the local placement of the IfcElement to which it is tied by an element composition relationship 
              for features that are located relative to the main component (such as openings), as expressed by IfcRelVoidsElement and IfcRelProjectsElement, 
              for elements that fill an opening (such as doors or windows), as expressed byIfcRelFillsElement, 
              for coverings that cover the element, as expressed byIfcRelCoversBldgElements, 
              for sub components that are aggregated to the main component, as expressed by IIfcRelAggregates and IfcRelNests) 
              If the PlacementRelTo relationship is not given, then it defaults to an absolute placement within the world coordinate system established by the referenced geometric representation context within the project. 
              EXPRESS specification:
              Formal Propositions:
              WR21   :   Ensures that a 3D local placement can only be relative (if exists) to a 3D parent local placement (and not to a 2D parent local placement).
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcLocalPlacement.PlacementRelTo">
            <summary>
              Optional. Reference to Object that provides the relative placement by its local coordinate system. If it is omitted, then the local placement is given to the WCS, established by the geometric representation context.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcLocalPlacement.RelativePlacement">
            <summary>
              Geometric placement that defines the transformation from the related coordinate system into the relating. The placement can be either 2D or 3D, depending on the dimension count of the coordinate system.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricConstraintResource.IfcVirtualGridIntersection">
            <summary>
              The IfcVirtualGridIntersection defines the derived location of the intersection between two grid axes. Offset values may be given to set an offset distance to the grid axis for the calculation of the virtual grid intersection.
            </summary>
            <remarks>
              Definition from IAI: The IfcVirtualGridIntersection defines the derived location of the intersection between two grid axes. Offset values may be given to set an offset distance to the grid axis for the calculation of the virtual grid intersection.
              The two intersecting axes (IntersectingAxes) define the intersection point, which exact location (in terms of the Cartesian point representing the intersection) has to be calculated from the geometric representation of the two participating curves.
              Offset values may be given (OffsetDistances). If given, the position within the list of OffsetDistances corresponds with the position within the list of IntersectingAxes. Therefore:
              OffsetDistances[1] sets the offset to IntersectingAxes[1], 
              OffsetDistances[2] sets the offset to IntersectingAxes[2], and 
              OffsetDistances[3] sets the offset to the virtual intersection in direction of the orientation of the cross product of IntersectingAxes[1] and the orthogonal complement of the IntersectingAxes[1] (which is the positive or negative direction of the z axis of the design grid position). 
              HISTORY: New entity in IFC Release 1.5. The entity name was changed from IfcConstraintRelIntersection in IFC Release 2x.
              Geometry use definitions:
              The following figures explain the usage of the OffsetDistances and IntersectingAxes attributes.
              Two offset distances given, the virtual intersection is defined in the xy plane of the grid axis placement. 
              Three offset distances given, the virtual intersection is defined by an offset (in direction of the z-axis of the design grid placement) to the virtual intersection in the xy plane of the grid axis placement. 
              The distance of the offset curve (OffsetDistances[n]) is measured from the basis curve. The distance may be positive, negative or zero. A positive value of distance defines an offset in the direction which is normal to the curve in the sense of an anti-clockwise rotation through 90 degrees from the tangent vector T at the given point. (This is in the direction of orthogonal complement(T).) This can be reverted by the SameSense attribute at IfcGridAxis which may switch the sense of the AxisCurve.
              Illustration
              example of a negative offset 
              IntersectingAxes[1].AxisCurve is an IfcTrimmedCurve with an IfcCircle as BasisCurve and SenseAgreement = TRUE. 
              IntersectingAxes[1].SameSense = TRUE. 
              OffsetDistances[1] is a negative length measure 
              the figure
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcVirtualGridIntersection.IntersectingAxes">
            <summary>
              Two grid axes which intersects at exacty one intersection (see also informal proposition at IfcGrid). If attribute OffsetDistances is omited, the intersection defines the placement or ref direction of a grid placement directly. If OffsetDistances are given, the intersection is defined by the offset curves to the grid axes.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricConstraintResource.IfcVirtualGridIntersection.OffsetDistances">
            <summary>
              Offset distances to the grid axes. If given, it defines virtual offset curves to the grid axes. The intersection of the offset curves specify the virtual grid intersection.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcGeometricRepresentationItem">
            <summary>
              geometric representation item is a representation item that has the additional meaning of having geometric position or orientation or both.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-43:1992: An geometric representation item is a representation item that has the additional meaning of having geometric position or orientation or both. This meaning is present by virtue of: 
              being a Cartesian point or a direction 
              referencing directly a Cartesian point or direction 
              referencing indirectly a Cartesian point or direction 
              An indirect reference to a Cartesian point or direction means that a given geometric item references the Cartesian point or direction through one or more intervening geometry or topology items. 
              EXAMPLE: Consider a circle. It gains its geometric position and orientation by virtue of a reference to axis2_placement (IfcAxis2Placement) that is turn references a cartesian_point (IfcCartesianPoint) and several directions (IfcDirection). 
              EXAMPLE: Consider a manifold brep. A manifold_solid_brep (IfcManifoldSolidBrep) is a geometric_representation_item (IfcGeometricRepresentationItem) that through several layers of topological_representation_item's (IfcTopologicalRepresentationItem) references poly loops (IfcPolyLoop). Through additional intervening entities poly loops reference cartesian_point's (IfcCartesianPoint). 
              Definition from IAI: The derivation of the dimensionality of the IfcGeometricRepresentationItem is different to STEP, there is a specific derived attribute at each class that defines the dimensionality, whereas STEP does it for the representation_context and requires all geometric_representation_item's to have the same dimensionality therein. 
              The definition of swept area solids as goemteric representation items is different to STEP, it is based on a set of predefined profiles (or cross sections), i.e. a set of parameterized geometric primitives widely supported in the industry. Those profiles are used to create volumes through extrusion, revolution and cross section based sweep operations. This method was called attribute driven geometric representation and it was formerly known as implicit geometry in IFC. 
              NOTE: Corresponding STEP entity: geometric_representation_item. Please refer to ISO/IS 10303-42:1994, p. 22 for the final definition of the formal standard. The following changes have been made: It does not inherit from ISO/IS 10303-43:1994 entity representation_item. The derived attribute Dim is demoted to the appropriate subtypes. The WR1 has not been incorporated. Not all subtypes that are in ISO/IS 10303-42:1994 have been added to the current IFC Release . 
              HISTORY: New entity in IFC Release 1.5
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcRepresentationItem">
            <summary>
              A representation item is an element of product data that participates in one or more representations or contributes to the definition of another representation item.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-43:1992: A representation item is an element of product data that participates in one or more representations or contributes to the definition of another representation item. A representation item contributes to the definition of another representation item when it is referenced by that representation item.
              Definition from IAI  The IfcRepresentationItem is used within (and only within - directly or indirectly through other IfcRepresentationItem's or IfcShapeAspect's) an IfcRepresentation to represent an IfcProductRepresentation. Most commonly these IfcRepresentationItem's are geometric or topological representation items, that can (but not need to) have presentation style infomation assigned. 
              NOTE  Corresponding STEP entity: representation_item. Please refer to ISO/IS 10303-43:1994, for the final definition of the formal standard. The following changes have been made: The attribute 'name' and the WR1 have not been incorporated. 
              HISTORY  New entity in IFC Release 2x.
              IFC2x Edition 3 CHANGE  The inverse attributes StyledByItem and LayerAssignments have been added. Upward compatibility for file based exchange is guaranteed. 
              EXPRESS specification:
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcRepresentationItem.LayerAssignments">
            <summary>
              Inverse. Assignment of the representation item to a single or multiple layer(s). The LayerAssigments can override a LayerAssigments of the IfcRepresentation it is used within the list of Items.
            </summary>
            <remarks>
              NOTE  Implementation agreements can restrict the maximum number of layer assignments to 1.
              IFC2x Edition 3 CHANGE  The inverse attribute LayerAssignments has been add
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcRepresentationItem.StyledByItem">
            <summary>
              Inverse. Reference to the IfcStyledItem that provides presentation information to the representation, e.g. a curve style, including colour and thickness to a geometric curve.
            </summary>
            <remarks>
              IFC2x Edition 3 CHANGE  The inverse attribute StyledByItem has been added.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcCsgPrimitive3D.Position">
            <summary>
              Surface defining side of half space.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcBlock.XLength">
            <summary>
                Length attribute (measured along the edge parallel to the X Axis)
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcBlock.YLength">
            <summary>
                Width attribute (measured along the edge parallel to the Y Axis)
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcBlock.ZLength">
            <summary>
                Height attribute (measured along the edge parallel to the Z Axis).
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricModelResource.IfcBooleanResult">
            <summary>
              A Boolean result is the result of a regularized operation on two solids to create a new solid.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A Boolean result is the result of a regularized operation on two solids to create a new solid. Valid operations are regularized union, regularized intersection, and regularized difference. For purpose of Boolean operations, a solid is considered to be a regularized set of points. The final Boolean result depends upon the operation and the two operands. In the case of the difference operator the order of the operands is also significant. The operator can be either union, intersection or difference. The effect of these operators is described below: 
              Union on two solids is the new solid that is the regularization of the set of all points that are in either the first operand or the second operand or in both. 
              Intersection on two solids is the new solid that is the regularization of the set of all points that are in both the first operand and the second operand. 
              The result of the difference operation on two solids is the regularization of the set of all points which are in the first operand, but not in the second operand. 
              NOTE Corresponding STEP entity: boolean_result. The derived attribute Dim has been added at this level and was therefore demoted from the geometric_representation_item. Please refer to ISO/IS 10303-42:1994, p.175 for the final definition of the formal standard. 
              HISTORY: New class in IFC Release 1.5.1.
              Formal Propositions:
              WR1   :   The dimensionality of the first operand shall be the same as the dimensionality of the second operand.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcBooleanResult.Operator">
            <summary>
              The Boolean operator used in the operation to create the result.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcBooleanResult.FirstOperand">
            <summary>
              The first operand to be operated upon by the Boolean operation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcBooleanResult.SecondOperand">
            <summary>
              The second operand specified for the operation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcBooleanResult.Dim">
            <summary>
              Derived.   The space dimensionality of this entity. It is identical with the space dimensionality of the first operand. A where rule ensures that both operands have the same space dimensionality.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricModelResource.IfcBoundingBox">
            <summary>
              A box domain is an orthogonal box parallel to the axes of the geometric coordinate system which may be used to limit the domain of a half space solid.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A box domain is an orthogonal box parallel to the axes of the geometric coordinate system which may be used to limit the domain of a half space solid. A box domain is specified by the coordinates of the bottom left corner, and the lengths of the sides measured in the directions of the coordinate axes.
              Definition from IAI: Every semantic object having a physical extent might have a minimum default representation of a bounding box. The bounding box is therefore also used as minimal geometric representation for any geometrically represented object. Therefore the IfcBoundingBox is subtyped from IfcGeometricRepresentationItem. 
              NOTE: Corresponding STEP entity : box_domain, please refer to ISO/IS 10303-42:1994, p. 186 for the final definition of the formal standard. In IFC the bounding box can also be used outside of the context of an IfcBoxedHalfSpace.
              HISTORY: New entity in IFC Release 1.0 .
              Illustration: 
              The IfcBoundingBox is defined with an own location which can be used to place the IfcBoundingBox relative to the geometric coordinate system. The IfcBoundingBox is defined by the lower left corner (Corner) and the upper right corner (XDim, YDim, ZDim measured within the parent co-ordinate system). 
              EXPRESS specification:
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcBoundingBox.Corner">
            <summary>
              Location of the bottom left corner (having the minimum values).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcBoundingBox.XDim">
            <summary>
              Length attribute (measured along the edge parallel to the X Axis)
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcBoundingBox.YDim">
            <summary>
              Width attribute (measured along the edge parallel to the Y Axis)
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcBoundingBox.ZDim">
            <summary>
              Height attribute (measured along the edge parallel to the Z Axis).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcBoundingBox.Dim">
            <summary>
              Derived.   The space dimensionality of this class, it is always 3.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricModelResource.IfcBoxedHalfSpace">
            <summary>
              This entity is a subtype of the half space solid which is trimmed by a surrounding rectangular box.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: This entity is a subtype of the half space solid which is trimmed by a surrounding rectangular box. The box has its edges parallel to the coordinate axes of the geometric coordinate system. 
              NOTE: The purpose of the box is to facilitate CSG computations by producing a solid of finite size.
              Definition from IAI: The IfcBoxedHalfSpace (from ISO 10303-42:1994 boxed_half_space) is used (as its supertype IfcHalfSpaceSolid) only within Boolean operations. It divides the domain into exactly two subsets, where the domain in question is that of the attribute Enclosure. 
              NOTE: Corresponding STEP entity : boxed_half_space, please refer to ISO/IS 10303-42:1994, p. 185 for the final definition of the formal standard. The IFC class IfcBoundingBox is used for the definition of the enclosure, providing the same definition as box_domain. 
              HISTORY: New entity in IFC Release 1.5.1, improved documentation available in IFC Release 2x.
              Illustration:
              Purpose 
              The IfcBoundingBox (relating to ISO 10303-42:1994 box_domain) that provides the enclosure is given for the convenience of the receiving application to enable the use of size box comparison for efficiency (e.g., to check first whether size boxes intersect, if not no cAlculations has to be done to check whether the solids of the entities intersect).
              Parameter 
              The Enclosure therefore helps to prevent dealing with infinite-size related issues. The enclosure box is positioned within the positioning coordinate system of the unbounded surface, given by the attribute BaseSurface (see IfcElementarySurface.Position). The AgreementFlag defines whether the box is defined into the direction of the positive z axis (FALSE) or in the direction of the negative z axis (TRUE).
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricModelResource.IfcHalfSpaceSolid">
            <summary>
              A half space solid is defined by the half space which is the regular subset of the domain which lies on one side of an unbounded surface.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A half space solid is defined by the half space which is the regular subset of the domain which lies on one side of an unbounded surface. The side of the surface which is in the half space is determined by the surface normal and the agreement flag. If the agreement flag is TRUE, then the subset is the one the normal points away from. If the agreement flag is FALSE, then the subset is the one the normal points into. For a valid half space solid the surface shall divide the domain into exactly two subsets. Also, within the domain the surface shall be manifold and all surface normals shall point into the same subset. 
              NOTE A half space is not a subtype of solid model (IfcSolidModel), half space solids are only useful as operands in Boolean expressions.
              NOTE Corresponding STEP entity: half_space_solid. Please refer to ISO/IS 10303-42:1994, p. 185 for the final definition of the formal standard. The derived attribute Dim has been added at this level and was therefore demoted from the geometric_representation_item. 
              HISTORY New class in IFC Release 1.5 
              Informal propositions:
              The base surface shall divide the domain into exactly two subsets. If the half space solid is of subtype boxed half space (IfcBoxedHalfSpace), the domain in question is that of the attribute enclosure. In all other cases the domain is all of space and the base surface shall be unbounded. 
              The base surface shall be an unbounded surface (subtype of IfcElementarySurface). 
              Illustration:
              Definition of the IfcHalfSpaceSolid within a given coordinate system. The base surface is given by an unbounded
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcHalfSpaceSolid.BaseSurface">
            <summary>
              Surface defining side of half space.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcHalfSpaceSolid.AgreementFlag">
            <summary>
              The agreement flag is TRUE if the normal to the BaseSurface points away from the material of the IfcHalfSpaceSolid. Otherwise it is FALSE.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcHalfSpaceSolid.Dim">
            <summary>
              The space dimensionality of this class, it is always 3
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcBoxedHalfSpace.Enclosure">
            <summary>
              The box which bounds the half space for computational purposes only.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricModelResource.IfcSolidModel">
            <summary>
              A solid model is a complete representation of the nominal shape of a product such that all points in the interior are connected.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A solid model is a complete representation of the nominal shape of a product such that all points in the interior are connected. Any point can be classified as being inside, outside, or on the boundary of a solid. There are several different types of solid model representations. 
              NOTE: Corresponding STEP entity: solid_model, only three subtypes have been incorporated into the current IFC Release - subset of manifold_solid_brep (IfcManifoldSolidBrep, constraint to faceted B-rep), swept_area_solid (IfcSweptAreaSolid), the swept_disk_solid (IfcSweptDiskSolid) and subset of csg_solid (IfcCsgSolid). The derived attribute Dim has been added at this level and was therefore demoted from the geometric_representation_item. Please refer to ISO/IS 10303-42:1994, p. 170 for the final definition of the formal standard. 
              HISTORY: New entity in IFC Release 1.5
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcSolidModel.Dim">
            <summary>
              The space dimensionality of this class, it is always 3.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcCsgSolid.TreeRootExpression">
            <summary>
              Boolean expression of regularized operators describing the solid. The root of the tree of Boolean expressions is given explicitly 
              as an IfcBooleanResult (the only item in the Select IfcCsgSelect).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcSweptAreaSolid.SweptArea">
            <summary>
              The surface defining the area to be swept. It is given as a profile definition within the xy plane of the position coordinate system.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcSweptAreaSolid.Position">
            <summary>
              Position coordinate system for the swept area.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcFaceBasedSurfaceModel.FbsmFaces">
            <summary>
              The set of faces arcwise connected along common edges or vertices.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricModelResource.IfcFacetedBrep">
            <summary>
              A faceted brep is a simple form of boundary representation model in which all faces are planar and all edges are straight lines.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A faceted brep is a simple form of boundary representation model in which all faces are planar and all edges are straight lines. Unlike the B-rep model, edges and vertices are not represented explicitly in the model but are implicitly available through the poly loop entity. A faceted B-rep has to meet the same topological constraints as the manifold solid Brep. 
              NOTE: The faceted brep has been introduced in order to support the larger number of systems that allow boundary type solid representations with planar surfaces only.
              NOTE: Corresponding STEP entity: faceted_brep. Please refer to ISO/IS 10303-42:1994, p. 173 for the final definition of the formal standard. In the current IFC Release faceted B-rep with voids is represented by an own subtype and not defined via an implicit ANDOR supertype constraint as in ISO/IS 10303-42:1994. This change has been made due to the fact, that only ONEOF supertype constraint is allowed within the IFC object model. 
              HISTORY New class in IFC Release 1.0
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricModelResource.IfcManifoldSolidBrep">
            <summary>
              A manifold solid B-rep is a finite, arcwise connected volume bounded by one or more surfaces, each of which is a connected, oriented, finite, closed 2-manifold.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A manifold solid B-rep is a finite, arcwise connected volume bounded by one or more surfaces, each of which is a connected, oriented, finite, closed 2-manifold. There is no restriction on the genus of the volume, nor on the number of voids within the volume. 
              The Boundary Representation (B-rep) of a manifold solid utilizes a graph of edges and vertices embedded in a connected, oriented, finite, closed two manifold surface. The embedded graph divides the surface into arcwise connected areas known as faces. The edges and vertices, therefore, form the boundaries of the face and the domain of a face does not include its boundaries. The embedded graph may be disconnected and may be a pseudo graph. The graph is labeled; that is, each entity in the graph has a unique identity. The geometric surface definition used to specify the geometry of a face shall be 2-manifold embeddable in the plane within the domain of the face. In other words, it shall be connected, oriented, finite, non-self-intersecting, and of surface genus 0. 
              Faces do not intersect except along their boundaries. Each edge along the boundary of a face is shared by at most one other face in the assemblage. The assemblage of edges in the B-rep do not intersect except at their boundaries (i.e., vertices). The geometry curve definition used to specify the geometry of an edge shall be arcwise connected and shall not self intersect or overlap within the domain of the edge. The geometry of an edge shall be consistent with the geometry of the faces of which it forms a partial bound. The geometry used to define a vertex shall be consistent with the geometry of the faces and edges of which it forms a partial bound. 
              A B-rep is represented by one or more closed shells which shall be disjoint. One shell, the outer, shall completely enclose all the other shells and no other shell may enclose a shell. The facility to define a B-rep with one or more internal voids is provided by a subtype. The following version of the Euler formula shall be satisfied, where V, E, F, Ll and S are the numbers of unique vertices, edges, faces, loop uses and shells in the model and Gs is the sum of the genus of the shells. 
              Definition from IAI: In the current IFC Release all instances of type IfcManifoldSolidBrep shall be of type faceted B-rep, using only IfcPolyLoop for the bounds of IfcFaceBound. 
              NOTE: Corresponding STEP entity: manifold_solid_brep. Please refer to ISO/IS 10303-42:1994, p. 170 for the final definition of the formal standard. Since only faceted B-rep (with and without voids) is in scope of the current IFC Release the IfcManifoldSolidBrep is defined as ABSTRACT supertype to prevent it from direct instantiation. 
              HISTORY: New entity in IFC Release 1.0 
              Informal proposition:
              The dimensionality of a manifold solid brep shall be 3. 
              The extent of the manifold solid brep shall be finite and non-zero. 
              All elements of the manifold solid brep shall have defined associated geometry. 
              The shell normals shall agree with the B-rep normal and point away from the solid represented by the B-rep. 
              Each face shall be referenced only once by the shells of the manifold solid brep. 
              The Euler equation shall be satisfied for the boundary representation, where the genus term "shell term" us the sum of the genus values for the shells of the brep.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcManifoldSolidBrep.Outer">
            <summary>
              A closed shell defining the exterior boundary of the solid. The shell normal shall point away from the interior of the solid.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricModelResource.IfcFacetedBrepWithVoids">
            <summary>
              The IfcFacetedBrepWithVoids is a specialization of a faceted B-rep which contains one or more voids in its interior.
            </summary>
            <remarks>
              Definition from IAI: The IfcFacetedBrepWithVoids is a specialization of a faceted B-rep which contains one or more voids in its interior. The voids are represented as closed shells which are defined so that the shell normal point into the void. 
              NOTE: Corresponding STEP entity: brep_with_voids (see note above). Please refer to ISO/IS 10303-42:1994, p. 173 for the final definition of the formal standard. In IFC faceted B-rep with voids is represented by this subtype IfcFacetedBrepWithVoids and not defined via an implicit ANDOR supertype constraint as in ISO/IS 10303-42:1994 between an instance of faceted_brep AND brep_with_voids. This change has been made due to the fact, that only ONEOF supertype constraint is allowed within the IFC object model. 
              HISTORY: New entity in IFC Release 1.0 
              Informal propositions:
              Each void shell shall be disjoint from the outer shell and from every other void shell 
              Each void shell shall be enclosed within the outer shell but not within any other void shell. In particular the outer shell is not in the set of void shells 
              Each shell in the IfcManifoldSolidBrep shall be referenced only once. 
              All the bounding loops of all the faces of all the shells in the IfcFacetedBrep shall be of type IfcPolyLoop.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcFacetedBrepWithVoids.Voids">
            <summary>
              Set of closed shells defining voids within the solid.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricModelResource.IfcGeometricCurveSet">
            <summary>
              A geometric curve set is a collection of two or three dimensional points and curves.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A geometric curve set is a collection of two or three dimensional points and curves.
              Definition from IAI: The IfcGeometricCurveSet is used for the exchange of shape representations consisting of (2D or 3D) points and curves only.
              NOTE: Corresponding STEP entity: geometric_set. Please refer to ISO/IS 10303-42:1994, p. 190 for the final definition of the formal standard. 
              HISTORY: New entity in IFC Release2x Edition 2.
              No surface shall be included in this geometric set.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricModelResource.IfcGeometricSet">
            <summary>
              This entity is intended for the transfer of models when a topological structure is not available.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: This entity is intended for the transfer of models when a topological structure is not available.
              Definition from IAI: The IfcGeometricSet is used for the exchange of shape representations consisting of (2D or 3D) points, curves, and/or surfaces, which do not have a topological structure (such as connected face sets or shells) and are not solid models (such as swept solids, CSG or Brep)
              NOTE: Corresponding STEP entity: geometric_set. The derived attribute Dim has been added at this level and was therefore demoted from the geometric_representation_item. Please refer to ISO/IS 10303-42:1994, p. 190 for the final definition of the formal standard. 
              HISTORY: New entity in IFC Release 2x.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcGeometricSet.Elements">
            <summary>
              The geometric elements which make up the geometric set, these may be points, curves or surfaces; but are required to be of the same coordinate space dimensionality.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcGeometricSet.Dim">
            <summary>
              The space dimensionality of this class, it is identical to the first element in the set. A where rule ensures that all elements have the same dimensionality.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricModelResource.IfcPolygonalBoundedHalfSpace">
            <summary>
              The polygonal bounded half space is a special subtype of a half space solid, where the material of the half space used in Boolean expressions is bounded by a polygonal boundary.
            </summary>
            <remarks>
              Definition from IAI: The polygonal bounded half space is a special subtype of a half space solid, where the material of the half space used in Boolean expressions is bounded by a polygonal boundary. The base surface of the half space is positioned by its normal relativeto the object coordinate system (as defined at the supertype IfcHalfSpaceSolid), and its polygonal (with or without arc segments) boundary is defined in the XY plane of the position coordinate system established by the Position attribute, the subtraction body is extruded perpendicular to the XY plane of the position coordinate system, i.e. into the direction of the positive Z axis defined by the Position attribute.
              The boundary is defined by a 2 dimensional polyline (or 2 dimensional composite curve, consisting of straight segments and circular arc segments) within the XY plane of the position coordinate system. The side of the surface which is in the half space is determined by the surface normal and the agreement flag. If the agreement flag is TRUE, then the subset is the one the normal points away from. If the agreement flag is FALSE, then the subset is the one the normal points into. 
              NOTE  A polygonal bounded half space is not a subtype of IfcSolidModel, half space solids are only useful as operands in Boolean expressions.
              HISTORY  New class in IFC Release 2x 
              Informal propositions:
              The IfcPolyline or the IfcCompositeCurve providing the PolygonalBoundary shall be closed. 
              If the PolygonalBoundary is given by an IfcCompositeCurve, it shall only have IfcCompositeCurveSegment's of type IfcPolyline, or IfcTrimmedCurve (having a BasisCurve of type IfcLine, or IfcCircle) 
              Illustration:
              black coordinates
              Object coordinate system (usually provided by IfcLocalPlacement) 
              green coordinates
              Position coordinate system, the PolygonalBoundary is given within this coordinate system. It is provided by IfcPolygonalBoundedHalfSpace.Position. This coordinate system is relative to the object coordinate system. The extrusion direction of the subtraction body is the positve Z axis. 
              red coordinates
              Normal of the plane. It is provided by the BaseSurface, i.e.  IfcSurface.Positon. This normal is also relative to the object coordinate system. 
             
              Purpose
              The polygonal bounded half space is used to limit the volume of the half space in Boolean difference expressions. Only the part that is defined by a theoretical intersection between the half space solid and an extruded area solid, defined by extruding the polygonal boundary, is used for Boolean expressions.
              Parameter
              The PolygonalBoundary defines the 2D polyline which bounds the effectiveness of the half space in Boolean expressions. The BaseSurface is defined by a plane, and the normal of the plane together with the AgreementFlag defines the side of the material of the half space.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcPolygonalBoundedHalfSpace.PolygonalBoundary">
            <summary>
              Two-dimensional polyline bounded curve, defined in the xy plane of the position coordinate system.
            </summary>
            <remarks>
              WR41   :   The bounding polyline should have the dimensionality of 2.  
              WR42   :   Only bounded curves of type IfcCompositeCurve, or IfcPolyline are valid boundaries.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcRectangularPyramid.XLength">
            <summary>
              Length attribute (measured along the edge parallel to the X Axis)
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcRectangularPyramid.YLength">
            <summary>
              Width attribute (measured along the edge parallel to the Y Axis)
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcRectangularPyramid.Height">
            <summary>
              Height attribute (measured along the edge parallel to the Z Axis).
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometricModelResource.IfcRevolvedAreaSolid._Axis">
            <summary>
              Axis about which revolution will take place.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometricModelResource.IfcRevolvedAreaSolid._Angle">
            <summary>
              Angle through which the sweep will be made. This angle is measured from the plane of the sweep.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcRevolvedAreaSolid.AxisLine">
            <summary>
              The line of the axis of revolution.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcRightCircularCone.Height">
            <summary>
               Height of the Cone
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcRightCircularCone.BottomRadius">
            <summary>
               Radius of the Cone
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcRightCircularCylinder.Height">
            <summary>
               Height of the Cylinder
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcRightCircularCylinder.Radius">
            <summary>
               Radius of the Cylinder
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricModelResource.IfcSectionedSpine">
            <summary>
              A sectioned spine is a representation of the shape of a three dimensional object composed of a spine curve and a number of planar cross sections. The shape is defined between the first element of cross sections and the last element of this set. 
              NOTE A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross-sections is not defined.
              For the representation of a solid all cross-sections are closed curves.
              Definition from IAI: A sectioned spine (IfcSectionedSpine) is a representation of the shape of a three dimensional object composed by a 
              number of planar cross sections, and a spine curve.
              The shape is defined between the first element of cross sections and the last element of the cross sections. 
              A sectioned spine may be used to represent a surface or a solid but the interpolation of the shape between the cross sections is not defined. 
              For the representation of a solid all cross sections are areas. For representation of a surface all cross sections are curves. 
              The cross sections are defined as profiles, whereas the consecutive profiles may be derived by a transformation of the 
              start profile or the previous consecutive profile.
              The spine curve shall be of type IfcCompositeCurve, each of its segments (IfcCompositeCurveSegment) 
              shall correspond to the part between exactly two consecutive cross-sections.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricModelResource.IfcShellBasedSurfaceModel">
            <summary>
              A shell based surface model is described by a set of open or closed shells of dimensionality 2.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A shell based surface model is described by a set of open or closed shells of dimensionality 2. The shells shall not intersect except at edges and vertices. In particular, distinct faces may not intersect. A complete face of one shell may be shared with another shell. Coincident portions of shells shall both reference the same faces, edges and vertices defining the coincident region. There shall be at least one shell.
              A shell may exist independently of a surface model.
              NOTE Corresponding STEP entity: shell_based_surface_model. Please refer to ISO/IS 10303-42:1994, p. 187 for the final definition of the formal standard. 
              HISTORY: New entity in IFC Release 2x.
              Informal propositions
              The dimensionality of the shell based surface model is 2. 
              The shells shall not overlap or intersect except at common faces, edges or vertices.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcShellBasedSurfaceModel.Dim">
            <summary>
              Derived.   The space dimensionality of this class, it is always 3.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcSphere.Radius">
            <summary>
               Radius of the Sphere
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcSurfaceCurveSweptAreaSolid.Directrix">
            <summary>
            The curve used to define the sweeping operation. The solid is generated by sweeping the SELF\IfcSweptAreaSolid.SweptArea along the Directrix.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcSurfaceCurveSweptAreaSolid.StartParam">
            <summary>
            The parameter value on the Directrix at which the sweeping operation commences.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcSurfaceCurveSweptAreaSolid.EndParam">
            <summary>
            The parameter value on the Directrix at which the sweeping operation ends.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcSurfaceCurveSweptAreaSolid.ReferenceSurface">
            <summary>
            	 The parameter value on the Directrix at which the sweeping operation ends.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometricModelResource.IfcSweptDiskSolid">
            <summary>
              A swept disk solid is the solid produced by sweeping a circular disk along a three dimensional curve. 
              During the sweeping operation the normal to the plane of the circular disk is in the direction of the tangent to the 
              directrix curve and the center of the disk lies on the directrix. 
              The circular disk may, optionally, have a central hole, in this case the resulting solid has a through hole, 
              or, an internal void when the directrix forms a close curve.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcSweptDiskSolid.Directrix">
            <summary>
              The curve used to define the sweeping operation. The solid is generated by sweeping a circular disk along the directrix.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcSweptDiskSolid.Radius">
            <summary>
              The radius of the circular disk to be swept along the directrix.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcSweptDiskSolid.InnerRadius">
            <summary>
              This attribute is optional, if present it defines the radius of a circular hole in the centre of the disk.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcSweptDiskSolid.StartParam">
            <summary>
              The parameter value on the directrix at which the sweeping operation commences.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometricModelResource.IfcSweptDiskSolid.EndParam">
            <summary>
              The parameter value on the directrix at which the sweeping operation ends.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcBoundedSurface">
            <summary>
              A bounded surface is a surface of finite area with identifiable boundaries.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A bounded surface is a surface of finite area with identifiable boundaries.
              NOTE Corresponding STEP name: bounded_surface, only the following subtypes have been incorporated into IFC: rectangular_trimmed_surface as IfcRectangularTrimmedSurface. Please refer to ISO/IS 10303-42:1994, p.78 for the final definition of the formal standard. 
              HISTORY New class in IFC Release 2x 
              Informal propositions:
              A bounded surface has finite non-zero surface area. 
              A bounded surface has boundary curves.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcSurface">
            <summary>
              A surface can be envisioned as a set of connected points in 3-dimensional space which is always locally 2-dimensional, but need not be a manifold.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A surface can be envisioned as a set of connected points in 3-dimensional space which is always locally 2-dimensional, but need not be a manifold. 
              NOTE Corresponding STEP entity: surface, the following subtypes have been incorporated into IFC - elementary_surface (as IfcElementarySurface), swept_surface (as IfcSweptSurface) and bounded_surface (as IfcBoundedSurface). Please refer to ISO/IS 10303-42:1994, p. 68 for the final definition of the formal standard. 
              HISTORY New class in IFC Release 1.5 
              Informal proposition:
              A surface has non zero area. 
              A surface is arcwise connected.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IPlacement3D">
            <summary>
              If the object supports placement by Axis2Placement3D, this returns the placement
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcBoundedSurface.Dim">
            <summary>
              The space dimensionality of this class, derived from the dimensionality of the Position.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator">
            <summary>
              A Cartesian transformation operator defines a geometric transformation composed of translation, rotation, mirroring and uniform scaling.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A Cartesian transformation operator defines a geometric transformation composed of translation, rotation, mirroring and uniform scaling. 
              The list of normalised vectors u defines the columns of an orthogonal matrix T. 
              These vectors are computed, by the base axis function, from the direction attributes axis1, axis2 and, in Cartesian transformation operator 3d, axis3. If |T|= -1, 
              the transformation includes mirroring. The local origin point A, the scale value S and the matrix T together define a transformation. 
              The transformation for a point with position vector P is defined by 
              P -&gt; A + STP 
              The transformation for a direction d is defined by 
              d -&gt; Td 
              The transformation for a vector with orientation d and magnitude k is defined by
              d -&gt; Td, and 
              k -&gt; Sk 
              For those entities whose attributes include an axis2 placement, the transformation is applied, after the derivation, 
              to the derived attributes p defining the placement coordinate directions. 
              For a transformed surface, the direction of the surface normal at any point is obtained by transforming the normal, at the corresponding point, 
              to the original surface. For geometric entities with attributes (such as the radius of a circle) which have the dimensionality of length, 
              the values will be multiplied by S. 
              For curves on surface the p curve.reference to curve will be unaffected by any transformation. 
              The Cartesian transformation operator shall only be applied to geometry defined in a consistent system of units with the same units on each axis. 
              With all optional attributes omitted, the transformation defaults to the identity transformation. 
              The Cartesian transformation operator shall only be instantiated as one of its subtypes. 
              NOTE: Corresponding STEP entity : cartesian_transformation_operator, please refer to ISO/IS 10303-42:1994, p. 32 for the final definition of the formal standard. 
              HISTORY: New entity in IFC Release 2x.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator.Axis1">
            <summary>
              Optional.   The direction used to determine U[1], the derived X axis direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator.Axis2">
            <summary>
              Optional. The direction used to determine U[2], the derived Y axis direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator.LocalOrigin">
            <summary>
              The required translation, specified as a cartesian point. The actual translation included in the transformation is from the geometric origin to the local origin.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator.Scale">
            <summary>
              Optional. The scaling value specified for the transformation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator.Scl">
            <summary>
              Derived. The derived scale S of the transformation, equal to scale if that exists, or 1.0 otherwise.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator.Dim">
            <summary>
              Derived.   The space dimensionality of this class, determined by the space dimensionality of the local origin.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator2D">
            <summary>
              A Cartesian transformation operator 2d defines a geometric transformation in two-dimensional space composed of translation, rotation, mirroring and uniform scaling.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: 
              A Cartesian transformation operator 2d defines a geometric transformation in two-dimensional space composed of translation, rotation, mirroring and uniform scaling. 
              The list of normalised vectors u defines the columns of an orthogonal matrix T. 
              These vectors are computed from the direction attributes axis1 and axis2 by the base axis function. If |T|= -1, the transformation includes mirroring. 
              NOTE: Corresponding STEP entity : cartesian_transformation_operator_2d, please refer to ISO/IS 10303-42:1994, p. 36 for the final definition of the formal standard. 
              HISTORY: New entity in IFC Release 2x.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator2DnonUniform.Scale2">
            <summary>
              Optional.   The scaling value specified for the transformation along the axis 2. This is normally the y scale factor.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator2DnonUniform.Scl2">
            <summary>
              Derived. The derived scale S(2) of the transformation along the axis 2 (normally the y axis), equal to Scale2 if that exists, or equal to the derived Scl1 (normally the x axis scale factor) otherwise.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator3D">
            <summary>
              A Cartesian transformation operator 3d defines a geometric transformation in three-dimensional space composed of translation, rotation, mirroring and uniform scaling.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A Cartesian transformation operator 3d defines a geometric transformation in three-dimensional space composed of translation, rotation, mirroring and uniform scaling. The list of normalised vectors u defines the columns of an orthogonal matrix T. These vectors are computed from the direction attributes axis1, axis2 and axis3 by the base axis function. If |T|= -1, the transformation includes mirroring. 
              NOTE: Corresponding STEP entity : cartesian_transformation_operator_3d, please refer to ISO/IS 10303-42:1994, p. 33 for the final definition of the formal standard. 
              HISTORY: New entity in IFC Release 2x.
              Formal Propositions:
              WR1   :   The coordinate space dimensionality of this entity shall be 3.  
              WR2   :   The inherited Axis1 should have (if given) the dimensionality of 3.  
              WR3   :   The inherited Axis2 should have (if given) the dimensionality of 3.  
              WR4   :   The Axis3 should have (if given) the dimensionality of 3.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator3D.Axis3">
            <summary>
              Optional. The exact direction of U[3], the derived Z axis direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator3D.U">
            <summary>
              Derived. The list of mutually orthogonal, normalised vectors defining the transformation matrix T. 
              They are derived from the explicit attributes Axis3, Axis1, and Axis2 in that order.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator3DnonUniform.Scale2">
            <summary>
              The scaling value specified for the transformation along the axis 2. This is normally the y scale factor.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCartesianTransformationOperator3DnonUniform.Scale3">
            <summary>
              The scaling value specified for the transformation along the axis 3. This is normally the z scale factor.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCurve.Dim">
            <summary>
              Derived. The space dimensionality of this abstract class, defined differently for all subtypes, i.e. for IfcLine, IfcConic and IfcBoundedCurve.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcConic.Position">
            <summary>
              The location and orientation of the conic. Further details of the interpretation of this attribute are given for the individual subtypes.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCircle.Radius">
            <summary>
              The radius of the circle, which shall be greater than zero.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCurveBoundedPlane.BasisSurface">
            <summary>
              The surface to be bound.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCurveBoundedPlane.OuterBoundary">
            <summary>
              The outer boundary of the surface.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCurveBoundedPlane.InnerBoundaries">
            <summary>
              An optional set of inner boundaries. They shall not intersect each other or the outer boundary.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcEllipse.SemiAxis1">
            <summary>
              The first radius of the ellipse which shall be positive. Placement.Axes[1] gives the direction of the SemiAxis1.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcEllipse.SemiAxis2">
            <summary>
              The second radius of the ellipse which shall be positive.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcLine">
            <summary>
              A line is an unbounded curve with constant tangent direction.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A line is an unbounded curve with constant tangent direction. A line is defined by a point and a direction. The positive direction of the line is in the direction of the Dir vector. The line is parameterized as follows: 
              P = Pnt 
              V = Dir 
              l(u) = P + uV 
              and the parametric range is -¥ lt u lt ¥
              NOTE Corresponding STEP entity: line. Please refer to ISO/IS 10303-42:1994, p.37 for the final definition of the formal standard. The derived attribute Dim has been added at this level and was therefore demoted from the geometric_representation_item. 
              HISTORY New class in IFC Release 1.0
              Formal Propositions:
              WR1   :   The dimensionality of the location (IfcCartesianPoint) shall be the same as of the direction (IfcVector).
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcLine.Pnt">
            <summary>
              The location of the line.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcLine.Dir">
            <summary>
              The direction of the line, the magnitude and units of Dir affect the parameterization of the line.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcMappedItem">
            <summary>
              Definition from ISO/CD 10303-43:1992: A mapped item is the use of an existing representation (the mapping source - 
              mapped representation) as a representation item in a second representation. 
              NOTE: A mapped item is a subtype of representation item. 
              It enables a representation to be used as a representation item in one or more other representations. 
              The mapped item allows for the definition of a representation using other representations. 
              Definition from IAI: The IfcMappedItem is the inserted instance of a source definition (to be compared with a block / shared cell / macro definition). 
              The instance is inserted by applying a Cartesian transformation operator as the MappingTarget.
              EXAMPLE  An IfcMappedItem can reuse other mapped items (ako nested blocks), 
              doing so the IfcRepresentationMap is based on an IfcShapeRepresentation including one or more IfcMappedItem's.
              NOTE   Corresponding STEP entity: mapped_item. Please refer to ISO/IS 10303-43:1994, for the final definition of the formal standard. 
              The definition of mapping_target (MappingTarget) has been restricted to be of the type cartesian_transformation_operator (IfcCartesianTransformationOperator).
              HISTORY  New entity in IFC Release 2x. 
              Informal Propositions
              A mapped item shall not be self-defining by participating in the definition of the representation being mapped. 
              The dimensionality of the mapping source and the mapping target has to be the same, if the mapping source is a geometric representation item.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcMappedItem.MappingSource">
            <summary>
              A representation map that is the source of the mapped item. It can be seen as a block (or cell or macro) definition.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcMappedItem.MappingTarget">
            <summary>
              A representation item that is the target onto which the mapping source is mapped. 
              It is constraint to be a Cartesian transformation operator.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcOffsetCurve2D.BasisCurve">
            <summary>
              The curve that is being offset.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcOffsetCurve2D.Distance">
            <summary>
              The distance of the offset curve from the basis curve. distance may be positive, negative or zero. 
              A positive value of distance defnes an offset in the direction which is normal to the curve in the sense of an 
              anti-clockwise rotation through 90 degrees from the tangent vector T at the given point. 
              (This is in the direction of orthogonal complement(T).)
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcOffsetCurve2D.SelfIntersect">
            <summary>
              An indication of whether the offset curve self-intersects; this is for information only.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcOffsetCurve3D.BasisCurve">
            <summary>
              The curve that is being offset.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcOffsetCurve3D.Distance">
            <summary>
              The distance of the offset curve from the basis curve. The distance may be positive, negative or zero.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcOffsetCurve3D.SelfIntersect">
            <summary>
              An indication of whether the offset curve self-intersects, this is for information only.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcOffsetCurve3D.RefDirection">
            <summary>
              The direction used to define the direction of the offset curve 3d from the basis curve.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcPointOnCurve.BasisCurve">
            <summary>
              The curve to which point parameter relates.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcPointOnCurve.PointParameter">
            <summary>
              The parameter value of the point location.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcPointOnSurface.BasisSurface">
            <summary>
              The surface to which the parameter values relate.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcPointOnSurface.PointParameterU">
            <summary>
              The first parameter value of the point location.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcPointOnSurface.PointParameterV">
            <summary>
              The second parameter value of the point location.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcBezierCurve">
            <summary>
              This is a special type of curve which can be represented as a type of B-spline curve in which the knots are evenly spaced and have high multiplicities.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: This is a special type of curve which can be represented as a type of B-spline curve in which the knots are evenly spaced and have high multiplicities. Suitable default values for the knots and knot multiplicities are derived in this case.
              A B-spline curve is a piecewise Bezier curve if it is quasi-uniform except that the interior knots have multiplicity degree rather than having multiplicity one. In this subtype the knot spacing is 1.0, starting at 0.0. A piecewise Bezier curve which has only two knots, 0.0 and 1.0, each of multiplicity (degree+1), is a simple Bezier curve.
              NOTE: A simple Bezier curve can be defined as a B-spline curve with knots by the following data: 
              degree (d) 
              upper index on control points (equal to d)  
              control points (d + 1 cartesian points)  
              knot type (equal to quasi-uniform knots) 
              No other data are needed, except for a rational Bezier curve. In this case the weights data ((d + 1) REALs) shall be given. 
              NOTE: It should be noted that every piecewise Bezier curve has an equivalent representation as a B-spline curve but not every B-spline curve can be represented as a Bezier curve. 
              To define a piecewise Bezier curve as a B-spline:
              The first knot is 0.0 with multiplicity (d + 1). 
              The next knot is 1.0 with multiplicity d (we have now defined the knots for one segment, unless it is the last one). 
              The next knot is 2.0 with multiplicity d (we have now defined the knots for one segment, again unless the second is the last one). 
              Continue to the end of the last segment, call it the n-th segment, at the end of which a knot with value n, multiplicity (d + 1) is added. 
              EXAMPLE:
              A one-segment cubic Bezier curve would have knot sequence (0,1) with multiplicity sequence (4,4). 
              A two-segment cubic piecewise Bezier curve would have knot sequence (0,1,2) with multiplicity sequence (4,3,4). 
              For the piecewise Bezier case, if d is the degree, m is the number of knots with multiplicity d, and N is the total number of knots for the spline, then
              (d+2+k)   = N 
              = (d+1)+md+(d+1) 
              thus m   = (k-d)/d  
              So the knot sequence is (0; 1; ...;m; (m+ 1)) with multiplicities (d + 1; d; : : :; d; d+ 1).
              NOTE: Corresponding STEP entity: bezier_curve. Please refer to ISO/IS 10303-42:1994, p. 51 for the final definition of the formal standard. Due to the constraints in the IFC architecture to not include ANDOR subtype constraints, an explicit subtype IfcRationalBezierCurve is added which holds the same information as the complex entity b_spline_curve AND bezier_curve.
              HISTORY: New entity in Release IFC2x Edition 2.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurve">
            <summary>
              A B-spline curve is a piecewise parametric polynominal or rational curve described in terms of control points and basis functions.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A B-spline curve is a piecewise parametric polynominal or rational curve described in terms of control points and basis functions. The B-spline curve has been selected as the most stable format to represent all types of polynominal or rational parametric curves. With appropriate attribute values it is capable of representing single span or spline curves of explicit polynomial, rational, Bezier or B-spline type.
              Interpretation of the data is as follows:
              All weights shall be positive and the curve is given by
              k+1 = number of control points 
              Pi = control points 
              wi = weights 
              d = degree 
              The knot array is an array of (k+d+2) real numbers [u-d ... uk+1], such that for all indices j in [-d,k], uj = uj+1. This array is obtained from the knot data list by repeating each multiple knot according to the multiplicity. N di, the ith normalised B-spline basis function of degree d, is defined on the subset [ui-d, ... , ui+1] of this array.
              Let L denote the number of distinct values amongst the d+k+2 knots in the knot array; L will be referred to as the 'upper index on knots'. Let mj denote the multiplicity (i.e. number of repetitions) of the jth distinct knot. Then
             
              All knot multiplicities except the first and the last shall be in the range 1 ... degree; the first and last may have a maximum value of degree + 1. In evaluating the basis functions, a knot u of e.g. multiplicity 3 is interpreted as a string u, u, u, in the knot array. The B-spline curve has 3 special subtypes (IAI note: only 1, Bezier curve, included in this IFC release) where the knots and knot multiplicities are derived to provide simple default capabilities.
              Logical flag is provided to indicate whether the curve self intersects or not. 
              Illustration from ISO 10303-42:
             
              NOTE: Corresponding STEP entity: b_spline_curve. Please refer to ISO/IS 10303-42:1994, p. 45 for the final definition of the formal standard. 
              HISTORY: New entity in Release IFC2x Edition 2.
              Formal Propositions:
              WR41   :   All control points shall have the same dimensionality.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurve.Degree">
            <summary>
              The algebraic degree of the basis functions.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurve.ControlPointsList">
            <summary>
              The list of control points for the curve.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurve.CurveForm">
            <summary>
              Used to identify particular types of curve; it is for information only.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurve.ClosedCurve">
            <summary>
              Indication of whether the curve is closed; it is for information only.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurve.SelfIntersect">
            <summary>
              Indication whether the curve self-intersects or not; it is for information only.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurve.ControlPoints">
            <summary>
              The array of control points used to define the geometry of the curve. This is derived from the list of control points.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurve.UpperIndexOnControlPoints">
            <summary>
              The upper index on the array of control points; the lower index is 0. This value is derived from the control points list.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcRectangularTrimmedSurface.BasisSurface">
            <summary>
              Surface being trimmed.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcRectangularTrimmedSurface.U1">
            <summary>
              First u parametric value.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcRectangularTrimmedSurface.V1">
            <summary>
              First v parametric value.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcRectangularTrimmedSurface.U2">
            <summary>
              Second u parametric value.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcRectangularTrimmedSurface.V2">
            <summary>
              Second v parametric value.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcRectangularTrimmedSurface.USense">
            <summary>
              Flag to indicate whether the direction of the first parameter of the trimmed surface agrees with or opposes the sense of u in the basis surface.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcRectangularTrimmedSurface.VSense">
            <summary>
              Flag to indicate whether the direction of the second parameter of the trimmed surface agrees with or opposes the sense of v in the basis surface.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcTrimmedCurve.BasisCurve">
            <summary>
              The curve to be trimmed. For curves with multiple representations any parameter values given as Trim1 or Trim2 refer to the master representation of the BasisCurve only.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcTrimmedCurve.Trim1">
            <summary>
              The first trimming point which may be specified as a Cartesian point, as a real parameter or both. Only really used for Ifc compatibility
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcTrimmedCurve.Trim2">
            <summary>
              The second trimming point which may be specified as a Cartesian point, as a real parameter or both. Only really used for Ifc compatibility
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.GeometryResource.IfcVector.XbimVector3D">
            <summary>
              Converts an Ifc 3D vector to an Xbim Vector3D
            </summary>
            <returns></returns>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcVector.Orientation">
            <summary>
              The direction of the vector.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcVector.Magnitude">
            <summary>
              The magnitude of the vector. All vectors of Magnitude 0.0 are regarded as equal in value regardless of the orientation attribute.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcVector.Dim">
            <summary>
              Derived. The space dimensionality of this class, it is derived from Orientation
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.HVACDomain.IfcBoilerTypeEnum">
            <summary>
              Enumeration defining the typical types of boilers
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.HVACDomain.IfcChillerTypeEnum">
            <summary>
              Enumeration defining the typical types of Chillers classified by their method of heat rejection.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.HVACDomain.IfcCoilTypeEnum">
            <summary>
              Enumeration defining the typical types of coils.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcCoilTypeEnum.DXCOOLINGCOIL">
            <summary>
              Cooling coil using a refrigerant to cool the air stream directly
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcCoilTypeEnum.WATERCOOLINGCOIL">
            <summary>
              Cooling coil using chilled water to cool the air stream.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcCoilTypeEnum.STEAMHEATINGCOIL">
            <summary>
              Heating coil using steam as heating source.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcCoilTypeEnum.WATERHEATINGCOIL">
            <summary>
              Heating coil using hot water as a heating source.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcCoilTypeEnum.ELECTRICHEATINGCOIL">
            <summary>
              Heating coil using electricity as a heating source.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcCoilTypeEnum.GASHEATINGCOIL">
            <summary>
              Heating coil using gas as a heating source.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcCoilTypeEnum.USERDEFINED">
            <summary>
              User-defined coil type.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcCoilTypeEnum.NOTDEFINED">
            <summary>
              Undefined coil type.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.HVACDomain.IfcCompressorTypeEnum">
            <summary>
              Types of compressors.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.HVACDomain.IfcDuctFittingTypeEnum">
            <summary>
              This enumeration is used to identify the primary purpose of a duct fitting. 
              This is a very basic categorization mechanism to generically identify the duct fitting type. 
              Subcategories of duct fittings are not enumerated.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.HVACDomain.IfcDuctSilencerTypeEnum">
            <summary>
              Enumeration defining the typical types of duct silencers.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.HVACDomain.IfcEvaporatorTypeEnum">
            <summary>
              Enumeration defining the typical types of evaporators.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcEvaporatorTypeEnum.DIRECTEXPANSIONSHELLANDTUBE">
            <summary>
              Direct-expansion evaporator where a refrigerant evaporates inside a series of baffles that channel the fluid throughout the shell side.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcEvaporatorTypeEnum.DIRECTEXPANSIONTUBEINTUBE">
            <summary>
              Direct-expansion evaporator where a refrigerant evaporates inside one or more pairs of coaxial tubes.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcEvaporatorTypeEnum.DIRECTEXPANSIONBRAZEDPLATE">
            <summary>
              Direct-expansion evaporator where a refrigerant evaporates inside plates brazed or welded together to make up an assembly of separate channels.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcEvaporatorTypeEnum.FLOODEDSHELLANDTUBE">
            <summary>
              Evaporator in which refrigerant evaporates outside tubes.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcEvaporatorTypeEnum.SHELLANDCOIL">
            <summary>
              Evaporator in which refrigerant evaporates inside a simple coiled tube immersed in the fluid to be cooled.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcEvaporatorTypeEnum.USERDEFINED">
            <summary>
              User-defined evaporator type.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcEvaporatorTypeEnum.NOTDEFINED">
            <summary>
              Undefined evaporator type.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.HVACDomain.IfcPumpTypeEnum">
            <summary>
              Defines general types of pumps
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.HVACDomain.IfcSpaceHeaterTypeEnum">
            <summary>
              Enumeration defining the functional type of space heater.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcSpaceHeaterTypeEnum.SECTIONALRADIATOR">
            <summary>
              Sectional type radiator typically fabricated from welded sheet metal sections and resembling free standing cast-iron radiators.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcSpaceHeaterTypeEnum.PANELRADIATOR">
            <summary>
              Panel type radiator typically fabricated with flat panels, with or without an exposed extended fin surface attached to the rear for increased output.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcSpaceHeaterTypeEnum.TUBULARRADIATOR">
            <summary>
              Tubular type radiator consisting of supply and return headers with interconnecting parallel tubes in a wide variety of lengths and heights.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcSpaceHeaterTypeEnum.CONVECTOR">
            <summary>
              A heat-distributing unit that operates with gravity-circulated air.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcSpaceHeaterTypeEnum.BASEBOARDHEATER">
            <summary>
              Baseboard heater designed for installation along the bottom of walls in place of the conventional baseboard.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcSpaceHeaterTypeEnum.FINNEDTUBEUNIT">
            <summary>
              Fin-tube heater typically fabricated from metallic tubing, with metallic fins bonded to the tube.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcSpaceHeaterTypeEnum.UNITHEATER">
            <summary>
              An assembly typically consisting of a fan, a motor, and a heating element.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcSpaceHeaterTypeEnum.USERDEFINED">
            <summary>
              User-defined space heater type.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.HVACDomain.IfcSpaceHeaterTypeEnum.NOTDEFINED">
            <summary>
              Undefined space heater type.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.HVACDomain.IfcTankTypeEnum">
            <summary>
              Enumeration defining the typical types of tanks.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMaterialProperties.Material">
            <summary>
              Material that contains the Properties.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcFuelProperties.CombustionTemperature">
            <summary>
            Combustion temperature of the material when air is at 298 K and 100 kPa. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcFuelProperties.CarbonContent">
            <summary>
            The carbon content in the fuel. This is measured in weight of carbon per unit weight of fuel and is therefore unitless. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcFuelProperties.LowerHeatingValue">
            <summary>
            ower Heating Value is defined as the amount of energy released (MJ/kg) when a fuel is burned completely, and H2O is in vapor form in the combustion products. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcFuelProperties.HigherHeatingValue">
            <summary>
            Higher Heating Value is defined as the amount of energy released (MJ/kg) when a fuel is burned completely, and H2O is in liquid form in the combustion products. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialPropertyResource.IfcGeneralMaterialProperties">
            <summary>
            A container class with general material properties defined in IFC specification.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcGeneralMaterialProperties.MolecularWeight">
            <summary>
            Molecular weight of material (typically gas), measured in g/mole. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcGeneralMaterialProperties.Porosity">
            <summary>
            The void fraction of the total volume occupied by material (Vbr - Vnet)/Vbr [m3/m3]. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcGeneralMaterialProperties.MassDensity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcHygroscopicMaterialProperties.UpperVaporResistanceFactor">
            <summary>
            The vapor permeability relationship of air/material (typically value > 1), measured in high relative humidity (typically in 95/50 % RH). 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcHygroscopicMaterialProperties.LowerVaporResistanceFactor">
            <summary>
            The vapor permeability relationship of air/material (typically value > 1), measured in low relative humidity (typically in 0/50 % RH). 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcHygroscopicMaterialProperties.IsothermalMoistureCapacity">
            <summary>
            Based on water vapor density, usually measured in [m3/ kg]. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcHygroscopicMaterialProperties.VaporPermeability">
            <summary>
             	Usually measured in [kg/s m Pa]. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcHygroscopicMaterialProperties.MoistureDiffusivity">
            <summary>
            Usually measured in [m3/s]. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalConcreteMaterialProperties">
            <summary>
            Mechanical material properties for concrete.
            HISTORY: New entity in Release IFC2x Edition 2.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalMaterialProperties">
            <summary>
            This is a collection of mechanical material properties normally used for structural analysis purpose.
            It contains all properties which are independent of the actual material type.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalMaterialProperties.DynamicViscosity">
            <summary>
            A measure of the viscous resistance of the material. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalMaterialProperties.YoungModulus">
            <summary>
            A measure of the Young’s modulus of elasticity of the material. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalMaterialProperties.ShearModulus">
            <summary>
            A measure of the shear modulus of elasticity of the material. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalMaterialProperties.PoissonRatio">
            <summary>
            A measure of the lateral deformations in the elastic range. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalMaterialProperties.ThermalExpansionCoefficient">
            <summary>
            A measure of the expansion coefficient for warming up the material about one Kelvin.  
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalConcreteMaterialProperties.CompressiveStrength">
            <summary>
            The compressive strength of the concrete.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalConcreteMaterialProperties.MaxAggregateSize">
            <summary>
            The maximum aggregate size of the concrete.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalConcreteMaterialProperties.AdmixturesDescription">
            <summary>
            	 Description of the admixtures added to the concrete mix.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalConcreteMaterialProperties.Workability">
            <summary>
            	 Description of the workability of the fresh concrete defined according to local standards.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalConcreteMaterialProperties.ProtectivePoreRatio">
            <summary>
            The protective pore ratio indicating the frost-resistance of the concrete.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalConcreteMaterialProperties.WaterImpermeability">
            <summary>
            Description of the water impermeability denoting the water repelling properties.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcExtendedMaterialProperties.ExtendedProperties">
            <summary>
              The set of material properties defined by the user for this material
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcExtendedMaterialProperties.Description">
            <summary>
              Optional Description for the set of extended properties.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcExtendedMaterialProperties.Name">
            <summary>
              The name given to the set of extended properties.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalSteelMaterialProperties">
            <summary>
            This is a collection of mechanical properties related to steel (or other metallic and isotropic) materials. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalSteelMaterialProperties.YieldStress">
            <summary>
            A measure of the yield stress (or characteristic 0.2 percent proof stress) of the material. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalSteelMaterialProperties.UltimateStress">
            <summary>
            A measure of the ultimate stress of the material. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalSteelMaterialProperties.UltimateStrain">
            <summary>
            A measure of the (engineering) strain at the state of ultimate stress of the material. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalSteelMaterialProperties.HardeningModule">
            <summary>
            A measure of the hardening module of the material (slope of stress versus strain curve after yield range). 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalSteelMaterialProperties.ProportionalStress">
            <summary>
            A measure of the proportional stress of the material. It describes the stress before the first plastic 
            deformation occurs and is commonly measured at a deformation of 0.01%. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalSteelMaterialProperties.PlasticStrain">
            <summary>
            A measure of the permanent displacement, as in slip or twinning, which remains after the stress has been removed. 
            Currently applied to a strain of 0.2% proportional stress of the material. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcMechanicalSteelMaterialProperties.Relaxations">
            <summary>
            Measures of decrease in stress over long time intervals resulting from plastic flow. 
            Different relaxation values for different initial stress levels for a material may be given.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcOpticalMaterialProperties.VisibleTransmittance">
            <summary>
            Transmittance at normal incidence (visible). Defines the fraction of the visible spectrum of solar radiation that passes through per unit area, perpendicular to the surface. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcOpticalMaterialProperties.SolarTransmittance">
            <summary>
            Transmittance at normal incidence (solar). Defines the fraction of solar radiation that passes through per unit area, perpendicular to the surface. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcOpticalMaterialProperties.ThermalIrTransmittance">
            <summary>
            Thermal IR transmittance at normal incidence. Defines the fraction of thermal energy that passes through per unit area, perpendicular to the surface. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcOpticalMaterialProperties.ThermalIrEmissivityBack">
            <summary>
            Thermal IR emissivity: back side. Defines the fraction of thermal energy emitted per unit area to "blackbody" at the same temperature, through the "back" side of the material. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcOpticalMaterialProperties.ThermalIrEmissivityFront">
            <summary>
            Thermal IR emissivity: front side. Defines the fraction of thermal energy emitted per unit area to "blackbody" at the same temperature, through the "front" side of the material. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcOpticalMaterialProperties.VisibleReflectanceBack">
            <summary>
            Reflectance at normal incidence (visible): back side. Defines the fraction of the solar ray in the visible spectrum that is reflected and not transmitted when the ray passes from one medium into another, at the "back" side of the other material, perpendicular to the surface. Dependent on material and surface characteristics. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcOpticalMaterialProperties.VisibleReflectanceFront">
            <summary>
            Reflectance at normal incidence (visible): front side. Defines the fraction of the solar ray in the visible spectrum that is reflected and not transmitted when the ray passes from one medium into another, at the "front" side of the other material, perpendicular to the surface. Dependent on material and surface characteristics. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcOpticalMaterialProperties.SolarReflectanceFront">
            <summary>
            Reflectance at normal incidence (solar): front side. Defines the fraction of the solar ray that is reflected and not transmitted when the ray passes from one medium into another, at the "front" side of the other material, perpendicular to the surface. Dependent on material and surface characteristics. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcOpticalMaterialProperties.SolarReflectanceBack">
            <summary>
            Reflectance at normal incidence (solar): back side. Defines the fraction of the solar ray that is reflected and not transmitted when the ray passes from one medium into another, at the "back" side of the other material, perpendicular to the surface. Dependent on material and surface characteristics. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialPropertyResource.IfcProductsOfCombustionProperties">
            <summary>
            Common definition to capture the properties of products of combustion generated by elements typically used within the context of building services and flow distribution systems.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcProductsOfCombustionProperties.SpecificHeatCapacity">
            <summary>
             Specific heat of the products of combustion: heat energy absorbed per temperature unit. Usually measured in [J/kg K]. 
             </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcProductsOfCombustionProperties.N20Content">
            <summary>
             	Nitrous Oxide (N2O) content of the products of combustion. This is measured in weight of N2O per unit weight and is therefore unitless. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcProductsOfCombustionProperties.COContent">
            <summary>
            Carbon monoxide (CO) content of the products of combustion.This is measured in weight of CO per unit weight and is therefore unitless. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcProductsOfCombustionProperties.CO2Content">
            <summary>
            Carbon Dioxide (CO2) content of the products of combustion. This is measured in weight of CO2 per unit weight and is therefore unitless.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialPropertyResource.IfcRelaxation">
            <summary>
            Measure of the decrease in stress over long time interval resulting from plastic flow. 
            It describes the time dependent relative relaxation value for a given initial stress level at constant strain
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcRelaxation.RelaxationValue">
            <summary>
             Time dependent loss of stress, relative to initial stress and therefore dimensionless.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcRelaxation.InitialStress">
            <summary>
             Stress at the beginning. Given as relative to the yield stress of the material and is therefore dimensionless.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialPropertyResource.IfcThermalMaterialProperties">
            <summary>
            A container class with material thermal properties defined in IFC specification. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcThermalMaterialProperties.SpecificHeatCapacity">
            <summary>
            Defines the specific heat of the material: heat energy absorbed per temperature unit. Usually measured in [J/kg K]. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcThermalMaterialProperties.BoilingPoint">
            <summary>
            The boiling point of the material (fluid). Usually measured in Kelvin. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcThermalMaterialProperties.FreezingPoint">
            <summary>
            The freezing point of the material (fluid). Usually measured in Kelvin. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcThermalMaterialProperties.ThermalConductivity">
            <summary>
            The rate at which thermal energy is transmitted through the material.Usually in [W/m K]. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialPropertyResource.IfcWaterProperties">
            <summary>
            Common definition to capture the properties of water typically used within the context of building services and flow distribution systems.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcWaterProperties.IsPotable">
            <summary>
             If TRUE, then the water is considered potable. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcWaterProperties.Hardness">
            <summary>
            Water hardness as positive, multivalent ion concentration in the water (usually concentrations of calcium and magnesium ions in terms of calcium carbonate). 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcWaterProperties.AlkalinityConcentration">
            <summary>
            Maximum alkalinity concentration (maximum sum of concentrations of each of the negative ions substances measured as CaCO3). 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcWaterProperties.AcidityConcentration">
            <summary>
            Maximum CaCO3 equivalent that would neutralize the acid. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcWaterProperties.ImpuritiesContent">
            <summary>
            Fraction of impurities such as dust to the total amount of water. This is measured in weight of impurities per weight of water and is therefore unitless. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcWaterProperties.PHLevel">
            <summary>
            Maximum water ph in a range from 0-14. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialPropertyResource.IfcWaterProperties.DissolvedSolidsContent">
            <summary>
            Fraction of the dissolved solids to the total amount of water. This is measured in weight of dissolved solids per weight of water and is therefore unitless. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcMonetaryUnit.Currency">
            <summary>
              The international enumeration name of the currency
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcNamedUnit.Dimensions">
            <summary>
              The dimensional exponents of the SI base units by which the named unit is defined.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcNamedUnit.UnitType">
            <summary>
              The type of the unit
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationAppearanceResource.IfcBlobTexture">
            <summary>
            An IfcBlobTexture provides a 2-dimensional distribution of the lighting parameters 
            of a surface onto which it is mapped. The texture itself is given as a single binary, 
            representing the content of a pixel format. The file format of the pixel file is given by 
            the RasterFormat attribute and allowable formats are guided by where rule WR41.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceTexture">
            <summary>
              Definition from IAI: An IfcSurfaceTexture provides a 2-dimensional image-based texture map. 
              It can either be given by referencing an external image file through an URL reference (IfcImageTexture), or by explicitly including an array of pixels (IfcPixelTexture).
              The following additional definitions from ISO/IEC FCD 19775:200x, the Extensible 3D (X3D) specification, apply:
              Texture: An image used in a texture map to create visual appearance effects when applied to geometry nodes. 
              Texture map: A texture plus the general parameters necessary for mapping the texture to geometry. 
              Texture maps are defined by 2D images that contain an array of colour values describing the texture. 
              The texture map values are interpreted differently depending on the number of components in the texture map and the specifics of the image format.
              In general, texture maps may be described using one of the following forms: 
            
              Intensity textures (one-component) 
              Intensity plus alpha opacity textures (two-component) 
              Full RGB textures (three-component) 
              Full RGB plus alpha opacity textures (four-component) 
            
              NOTE: Most image formats specify an alpha opacity, not transparency (where alpha = 1 - transparency).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceTexture.RepeatS">
            <summary>
              The RepeatS field specifies how the texture wraps in the S direction. 
              If RepeatS is TRUE (the default), the texture map is repeated outside the [0.0, 1.0] texture coordinate range in the S direction so that it fills the shape. 
              If repeatS is FALSE, the texture coordinates are clamped in the S direction to lie within the [0.0, 1.0] range.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceTexture.RepeatT">
            <summary>
              The RepeatT field specifies how the texture wraps in the T direction. 
              If RepeatT is TRUE (the default), the texture map is repeated outside the [0.0, 1.0] texture coordinate range in the T direction so that it fills the shape. 
              If repeatT is FALSE, the texture coordinates are clamped in the T direction to lie within the [0.0, 1.0] range.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceTexture.TextureType">
            <summary>
              Identifies the predefined types of image map from which the type required may be set.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceTexture.TextureTransform">
            <summary>
              These parameters support changes to the size, orientation, and position of textures on shapes. 
              Note that these operations appear reversed when viewed on the surface of geometry. 
              For example, a scale value of (2 2) will scale the texture coordinates and have the net effect of 
              shrinking the texture size by a factor of 2 (texture coordinates are twice as large and thus cause the texture to repeat). 
              A translation of (0.5 0.0) translates the texture coordinates +.5 units along the S-axis and has the net effect of translating the texture -0.5 along the S-axis 
              on the geometry's surface. A rotation of PI/2 of the texture coordinates results in a -PI/2 rotation of the texture on the geometry.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcBlobTexture.RasterFormat">
            <summary>
            The format of the RasterCode often using a compression. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcBlobTexture.RasterCode">
            <summary>
            Blob, given as a single binary, to capture the texture within one popular file (compression) format. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationAppearanceResource.IfcExternallyDefinedHatchStyle">
            <summary>
            The externally defined hatch style is an entity which makes an external reference to a hatching style.
            
            NOTE: The allowable values for the name source and item reference, by which the externally defined hatch style is 
            identified, need to be determined by implementer agreements.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcExternallyDefinedHatchStyle.Location">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcExternallyDefinedHatchStyle.ItemReference">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcExternallyDefinedHatchStyle.Name">
            <summary>
            
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationAppearanceResource.IfcFillAreaStyleTiles">
            <summary>
            The fill area style tiles defines a two dimensional tile to be used for the filling of annotation fill areas 
            or other closed regions. The content of a tile is defined by the tile set, and the placement of each tile 
            determined by the filling pattern which indicates how to place tiles next to each other. Tiles or parts of 
            tiles outside of the annotation fill area or closed region shall be clipped at the boundaries of the area or region.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcFillAreaStyleTiles.TilingPattern">
            <summary>
            A two direction repeat factor defining the shape and relative positioning of the tiles. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcFillAreaStyleTiles.Tiles">
            <summary>
             	A set of constituents of the tile. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcFillAreaStyleTiles.TilingScale">
            <summary>
            The scale factor applied to each tile as it is placed in the annotation fill area. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationAppearanceResource.IfcImageTexture">
            <summary>
             An IfcImageTexture provides a 2-dimensional distribution of the lighting parameters of a surface onto which it is mapped.
            
            The following additional definitions from ISO/IEC FCD 19775:200x, the Extensible 3D (X3D) specification, apply:
            
                The ImageTexture node defines a texture map by specifying an image file and general parameters for mapping to geometry. Texture maps are defined in a 2D coordinate system (s, t) that ranges from [0.0, 1.0] in both directions. The bottom edge of the image corresponds to the S-axis of the texture map, and left edge of the image corresponds to the T-axis of the texture map. The lower-left pixel of the image corresponds to s=0, t=0, and the top-right pixel of the image corresponds to s=1, t=1.
                The texture is read from the URL specified by the url [reference attribute]. When the url field contains no values ([]), texturing is disabled. Browsers shall support the JPEG and PNG image file formats. Support for the GIF format is also recommended (including transparency).
            
            The following general recommendations for image file format support from ISO/IEC FCD 19775:200x, the Extensible 3D (X3D) specification, also apply:
            
            Texture nodes that require support for the PNG image format shall interpret the PNG pixel formats in the following way:
            
                Greyscale pixels without alpha or simple transparency are treated as intensity textures.
                Greyscale pixels with alpha or simple transparency are treated as intensity plus alpha textures.
                RGB pixels without alpha channel or simple transparency are treated as full RGB textures.
                RGB pixels with alpha channel or simple transparency are treated as full RGB plus alpha textures.
            
            If the image specifies colours as indexed-colour (i.e., palettes or colourmaps), the following semantics should be used (note that `greyscale' refers to a palette entry with equal red, green, and blue values):
            
                If all the colours in the palette are greyscale and there is no transparency chunk, it is treated as an intensity texture.
                If all the colours in the palette are greyscale and there is a transparency chunk, it is treated as an intensity plus opacity texture.
                If any colour in the palette is not grey and there is no transparency chunk, it is treated as a full RGB texture.
                If any colour in the palette is not grey and there is a transparency chunk, it is treated as a full RGB plus alpha texture.
            
            Texture nodes that require support for JPEG files shall interpret JPEG files as follows:
            
                Greyscale files (number of components equals 1) are treated as intensity textures.
                YCbCr files are treated as full RGB textures.
                No other JPEG file types are required. It is recommended that other JPEG files are treated as a full RGB textures.
            
            Texture nodes that recommend support for GIF files shall follow the applicable semantics described above for the PNG format.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcImageTexture.UrlReference">
            <summary>
            
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationAppearanceResource.IfcPixelTexture">
            <summary>
             An IfcPixelTexture provides a 2D image-based texture map as an explicit array of pixel values (image field). In contrary to the IfcImageTexture the IfcPixelTexture holds a 2 dimensional list of pixel color (and opacity) directly, instead of referencing to an URL.
            
            The following additional definitions from ISO/IEC FCD 19775:200x, the Extensible 3D (X3D) specification, apply:
            
                The PixelTexture node defines a 2D image-based texture map as an explicit array of pixel values (image field) and parameters controlling tiling repetition of the texture onto geometry. Texture maps are defined in a 2D coordinate system (s, t) that ranges from 0.0 to 1.0 in both directions. The bottom edge of the pixel image corresponds to the S-axis of the texture map, and left edge of the pixel image corresponds to the T-axis of the texture map. The lower-left pixel of the pixel image corresponds to s=0.0, t=0.0, and the top-right pixel of the image corresponds to s = 1.0, t = 1.0.
            
            The following general recommendations for explicit image array format support from ISO/IEC FCD 19775:200x, the Extensible 3D (X3D) specification, also apply:
            
                The Image field specifies a single uncompressed 2-dimensional pixel image. Image fields contain three integers representing the width, height and number of components in the image, followed by width×height hexadecimal values representing the pixels in the image. Pixel values are limited to 256 levels of intensity (i.e., 0x00-0xFF hexadecimal).
            
                    A one-component image specifies one-byte hexadecimal value representing the intensity of the image. For example, 0xFF is full intensity in hexadecimal (255 in decimal), 0x00 is no intensity (0 in decimal).
                    A two-component image specifies the intensity in the first (high) byte and the alpha opacity in the second (low) byte.
                    Pixels in a three-component image specify the red component in the first (high) byte, followed by the green and blue components (e.g., 0xFF0000 is red, 0x00FF00 is green, 0x0000FF is blue).
                    Four-component images specify the alpha opacity byte after red/green/blue (e.g., 0x0000FF80 is semi-transparent blue). A value of 00 is completely transparent, FF is completely opaque, 80 is semi-transparent.
            
                Note that alpha equals (1.0 -transparency), if alpha and transparency each range from 0.0 to 1.0.
            
                Each pixel is read as a single unsigned number. For example, a 3-component pixel with value 0x0000FF may also be written as 0xFF (hexadecimal). Pixels are specified from left to right, bottom to top. The first hexadecimal value is the lower left pixel and the last value is the upper right pixel.
            
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcPixelTexture.Width">
            <summary>
             The number of pixels in width (S) direction. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcPixelTexture.Height">
            <summary>
            The number of pixels in height (T) direction. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcPixelTexture.ColourComponents">
            <summary>
            Indication whether the pixel values contain a 1, 2, 3, or 4 colour component. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcPixelTexture.Pixel">
            <summary>
            Flat list of hexadecimal values, each describing one pixel by 1, 2, 3, or 4 components. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationAppearanceResource.IfcPresentationStyleAssignment">
            <summary>
              The presentation style assignment is a set of styles which are assigned to styled items for the purpose of presenting these styled items.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-46:1992: The presentation style assignment is a set of styles which are assigned to styled items for the purpose of presenting these styled items.
              NOTE Corresponding STEP name: presentation_style_assignment. Please refer to ISO/IS 10303-46:1994 for the final definition of the formal standard. 
              HISTORY New entity in Release IFC2x 2nd Edition.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcPresentationStyleAssignment.Styles">
            <summary>
              A set of presentation styles that are assigned to styled items.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSymbolStyle">
            <summary>
            The symbol style is the presentation style that indicates the presentation of annotation symbols.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSymbolStyle.StyleOfSymbol">
            <summary>
            The style applied to the symbol for its visual appearance. 
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.PresentationAppearanceResource.IfcTextAlignment.#ctor(System.String)">
            <summary>
              Ensures only string type is used
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.PresentationAppearanceResource.IfcTextDecoration.#ctor(System.String)">
            <summary>
              Ensures only string type is used
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationAppearanceResource.IfcTextStyleWithBoxCharacteristics">
            <summary>
            The text style with box characteristics allows the presentation of annotated text by specifying the characteristics of the character boxes of the text and the spacing between the character boxes.
            
                NOTE  The IfcTextStyleWithBoxCharacteristics is an entity that had been adopted from ISO 10303, Industrial automation systems and integration—Product data representation and exchange, Part 46: Integrated generic resources: Visual presentation. 
            
            The IfcTextStyleWithBoxCharacteristics is mainly used to provide some compatibility with ISO10303. Its usage is restricted to monospace text fonts (having uniform character boxes) and simple vector based text fonts. For true text fonts however the use of IfcTextStyleTextModel is required.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcTextStyleWithBoxCharacteristics.BoxHeight">
            <summary>
            It is the height scaling factor in the definition of a character glyph. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcTextStyleWithBoxCharacteristics.BoxWidth">
            <summary>
            It is the width scaling factor in the definition of a character glyph. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcTextStyleWithBoxCharacteristics.BoxSlantAngle">
            <summary>
            It indicated that the box of a character glyph shall be represented as a parallelogram, with the angle being between the character up line and an axis perpendicular to the character base line. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcTextStyleWithBoxCharacteristics.BoxRotateAngle">
            <summary>
            It indicated that the box of a character glyph shall be presented at an angle to the base line of a text string within which the glyph occurs, the angle being that between the base line of the glyph and an axis perpendicular to the baseline of the text string. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcTextStyleWithBoxCharacteristics.CharacterSpacing">
            <summary>
             The distance between the character boxes of adjacent characters. 
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.PresentationAppearanceResource.IfcTextTransformation.#ctor(System.String)">
            <summary>
              Ensures only string type is used
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationAppearanceResource.IfcStyledItem">
            <summary>
              The styled item is an assignment of style for presentation to a geometric representation item as it is used in a representation.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-46:1992: The styled item is an assignment of style for presentation to a geometric representation item as it is used in a representation.
              Definition from IAI: The IfcStyledItem holds presentation style information for products, either explicitly for an IfcGeometricRepresentationItem being part of an IfcShapeRepresentation assigned to a product, or by assigning presentation information to IfcMaterial being assigned as other representation for a product.
              NOTE  Corresponding STEP name: styled_item. Please refer to ISO/IS 10303-46:1994 for the final definition of the formal standard. 
              HISTORY  New entity in Release IFC2x Edition 2. 
              IFC2x Edition 2 Addendum 1 CHANGE  The entity IfcStyledItem has been made non abstract and the attribute Name has been promoted from subtype IfcAnnotationOccurrence. Upward compatibility for file based exchange is guaranteed.
              IFC2x Edition 3 CHANGE  The attribute Item has been made optional, upward compatibility for file based exchange is guaranteed.
              Formal Propositions:
              WR11   :   Restricts the number of styles to 1 (the datatype SET remains for compatibility reasons with ISO 10303-46).  
              WR12   :   A styled item cannot be styled by another styled item.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcStyledItem.Item">
            <summary>
              Optional.   A geometric representation item to which the style is assigned.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcStyledItem.Styles">
            <summary>
              Representation style assignments which are assigned to an item. NOTE: In current IFC release only one presentation style assignment shall be assigned.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcStyledItem.Name">
            <summary>
              Optional.   The word, or group of words, by which the styled item is referred to.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcAnnotationFillAreaOccurrence.FillStyleTarget">
            <summary>
              The point that specifies the starting location for the fill area style assigned to the annotation fill area occurrence.
              Depending on the attribute GlobalOrLocal the point is either given within the world coordinate system of the project 
              or within the object coordinate system of the element or annotation. If the FillStyleTarget is not given, it defaults to 0.,0.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcAnnotationFillAreaOccurrence.GlobalOrLocal">
            <summary>
              The coordinate system in which the FillStyleTarget point is given. Depending on the attribute GlobalOrLocal the point 
              is either given within the world coordinate system of the project or within the object coordinate system of the element 
              or annotation. If not given, the hatch style is directly applied to the parameterization of the geometric representation item,
              e.g. to the surface coordinate sytem, defined by the surface normal. 
              ///
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDefinitionResource.IfcAnnotationSurface">
            <summary>
            An IfcAnnotationSurface is a surface or solid with texture coordinates assigned.
            It provides the capabilities to assign
            
                surface shading information,
                surface rendering information
                surface lighting information
                surface textures
            
            to a surface, or all surfaces of a face based surface model, a shell based surface model, 
            or a solid model. If the assigned IfcSurfaceStyle defines textures by including an instance 
            of IfcSurfaceStyleWithTextures, the attribute TextureCoordinates determines the mapping of the 
            texture to the surface(s) of the Item. In case of vertex based geometry, texture maps may be 
            used to define the texture coordinates for each face. 
            
            The style information is linked by using the IfcStyledItem to the IfcAnnotationSurface instance.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcAnnotationSurface.Item">
            <summary>
            Geometric representation item, providing the geometric definition
            of the annotated surface. It is further restricted to be a surface, 
            surface model, or solid model. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcAnnotationSurface.TextureCoordinates">
            <summary>
             Texture coordinates, such as a texture map, that are associated 
             with the textures for the surface style. It should only be given, 
             if the IfcSurfaceStyle associated to the IfcAnnotationSurfaceOccurrence 
             contains an IfcSurfaceStyleWithTextures. 
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.PresentationDefinitionResource.IfcBoxAlignment.#ctor(System.String)">
            <summary>
              Ensures BoxAlignment does not exceed 255 chars
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDefinitionResource.IfcTextureCoordinate">
            <summary>
            The IfcTextureCoordinate a an abstract supertype of the different kinds 
            to apply texture coordinates to geometries. For vertex based geometries
            an explicit assignment of 2D texture vertices to the 3D geometry vertices 
            is supported, in addition there can be a procedural description of texture
            coordinates. For parametrically described base geometry types a default 
            mapping procedure is given.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDefinitionResource.IfcTextureCoordinateGenerator">
            <summary>
            The IfcTextureCoordinateGenerator describes a procedurally defined mapping function with input parameter to map 2D texture coordinates to 3D geometry vertices. The allowable Mode values and input Parameter need to be agreed upon in implementer agreements.
            
            The following additional definitions from ISO/IEC FCD 19775:200x, the Extensible 3D (X3D) specification, apply:
            
            TextureCoordinateGenerator supports the automatic generation of texture coodinates for geometric shapes. This node can be used to set the texture coordinates. The mode field describes the algorithm used to compute texture coordinates, the following modes are foreseen in X3D:
            SPHERE, CAMERASPACENORMAL, CAMERASPACEPOSITION, CAMERASPACEREFLECTIONVECTOR, SPHERE-LOCAL, COORD, COORD-EYE, NOISE, NOISE-EYE, SPHERE-REFLECT, SPHERE-REFLECT-LOCAL
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcTextureCoordinateGenerator.Mode">
            <summary>
            The mode describes the algorithm used to compute texture coordinates. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcTextureCoordinateGenerator.Parameter">
            <summary>
            The parameter used by the function as specified by Mode. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDefinitionResource.IfcTextureMap">
            <summary>
            An IfcTextureMap provides the mapping of the 2-dimensional texture coordinates to the surface onto which it is mapped. It is used for mapping the texture to vertex based geometry models, such as
            
                IfcFacetedBrep
                IfcFacetedBrepWithVoids
                IfcFaceBasedSurfaceModel
                IfcShellBasedSurfaceModel
            
            The IfcTextureMap provides a set of TextureMaps, each IfcVertexBasedTextureMap holds a corresponding pair of lists:
            
                a list of TexturePoints, currently of type IfcCartesianPoint, and
                a list of TexturesVertices of type IfcTextureVertex.
            
            Each IfcTextureVertex (given as S, T coordinates of 2 dimension) corresponds to the geometric coordinates of the IfcCartesianPoint (given as X, Y, and Z coordinates of 3 dimensions). 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcTextureMap.TextureMaps">
            <summary>
            Reference to a list of texture vertex assignment to coordinates within a vertex based geometry. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDefinitionResource.IfcTextureVertex">
            <summary>
            An IfcTextureVertex is a list of 2 (S, T) texture coordinates.
            
            The following additional definitions from ISO/IEC FCD 19775:200x, the Extensible 3D (X3D) specification, apply:
            
                Each vertex-based geometry node uses a set of 2D texture coordinates that map textures to vertices. Texture map values ( ImageTexture, PixelTexture) range from [0.0, 1.0] along the S-axis and T-axis. However, texture coordinate values may be in the range (-?,?). Texture coordinates identify a location (and thus a colour value) in the texture map. The horizontal coordinate S is specified first, followed by the vertical coordinate T. If the texture map is repeated in a given direction (S-axis or T-axis), a texture coordinate C (s or t) is mapped into a texture map that has N pixels in the given direction as follows:
            
                    Texture map location = (C - floor(C)) × N
                    			 
            
                If the texture map is not repeated, the texture coordinates are clamped to the 0.0 to 1.0 range as follows:
            
                    Texture map location = N,     if C &gt; 1.0,
                                         = 0.0,   if C &lt; 0.0,
                                         = C × N, if 0.0 greater or equal to C greater or equal to 1.0.
            
                        
            
                Texture coordinates may be transformed (scaled, rotated, translated) by supplying a TextureTransform as a component of the texture's definition.
            
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcTextureVertex.Coordinates">
            <summary>
            The first coordinate[1] is the S, the second coordinate[2] is the T parameter value. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDefinitionResource.IfcVertexBasedTextureMap">
             <summary>
             An IfcVertexBasedTextureMap provides the mapping of the 2-dimensional texture coordinates (S, T) to the vertices of a single surface onto which it is mapped. For each vertex coordinates, provided by IfcCartesianPoin, a set of 2 (S, T) texture coordinates are given.
             
             The IfcVertexBasedTextureMap provides two corresponding lists:
             
                 a list of TexturePoints, given by min. of 3 IfcCartesianPoint's.
                 a list of TextureVertices, given by min. of 3 IfcTextureVertex's.
             
             These corresponding lists are:
             
                 TextureVertices -- LIST [3:?] --o IfcTextureVertex  -- LIST [2:2] --o IfcParameterValue
                 TexturePoints   -- LIST [3:?] --o IfcCartesianPoint -- LIST [3:3] --o IfcLengthMeasure
             
             Each texture vertex (given as S, T coordinates of 2 dimension) corresponds to the geometric coordinates (given as X, Y, and Z coordinates of 3 dimensions) of the Cartesian point, All Cartesian points within the list of shall lie within a plane. 
             
             Informal propositions:
            
                The list of TextureVertices shall correspond to the list of TexturePoints.
                All Cartesian points of the list of TexturePoints shall lie in one plane
                The references points shall be part of the vertex based geometry to which the annotation surface with textures is assigned.
            
             </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcVertexBasedTextureMap.TextureVertices">
            <summary>
            List of texture vertex coordinates, each texture vertex refers to the Cartesian point within the polyloop (corresponding lists). The first coordinate[1] is the S, the second coordinate[2] is the T parameter value. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcVertexBasedTextureMap.TexturePoints">
            <summary>
             Reference to a list of polyloop's defining a face bound of a face within a vertex based geometry. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDimensioningResource.IfcDraughtingCallout">
             <summary>
             A draughting callout is a collection of annotated curves, symbols and text that presents some 
             product shape or definition properties within a drawing.
            
            EXAMPLE: Draughting callout are e.g., dimensioning and leader directed notes.
            
            NOTE: The IfcDraughtingCallout is an entity that had been adopted from ISO 10303, 
            Industrial automation systems and integration—Product data representation and exchange,
            Part 101: Integrated application resources: Draughting.
            
            NOTE Corresponding STEP name: draughting_callout. Please refer to ISO/IS 10303-101:1994 
            page 20 for the final definition of the formal standard.
             </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDimensioningResource.IfcDraughtingCallout.Contents">
            <summary>
            The annotation curves, symbols, or text comprising the presentation of information. 
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.PresentationDimensioningResource.IfcDimensionCurveDirectedCallout.WhereRule">
             <summary>
             Definition from IAI: The dimension curve directed callout is a dimension callout, which includes a dimension line. It normally presents an extent and/or direction of the product shape. Subtypes are introduced to declare specific forms of dimension curve directed callouts, such as:
            
                linear dimension
                radius dimension
                diameter dimension
                angular dimension
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDimensioningResource.IfcDiameterDimension">
            <summary>
            The diameter dimension is a draughting callout that presents the diameter extent of a conic element. It consists of a 
            dimension curve and may have projection curves (but is often defined without projection curves).
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDimensioningResource.IfcDraughtingCalloutRelationship">
             <summary>
             Definition from IAI: The draughting callout relationship establishes a logical relationship between two draughting callouts. The meaning of this relationship is given at the subtypes of this entity.
            
             NOTE: The IfcDraughtingCalloutRelationship is an entity that had been adopted from ISO 10303, Industrial automation systems and integration—Product data representation and exchange, Part 101: Integrated application resources: Draughting.
             
             NOTE Corresponding STEP name: draughting_callout_relationship. Please refer to ISO/IS 10303-101:1994 page 21 for the final definition of the formal standard. 
             </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDimensioningResource.IfcDraughtingCalloutRelationship.Name">
            <summary>
            The word or group of words by which the relationship is referred to. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDimensioningResource.IfcDraughtingCalloutRelationship.Description">
            <summary>
            Additional informal description of the relationship. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDimensioningResource.IfcDraughtingCalloutRelationship.RelatingDraughtingCallout">
            <summary>
            One of the draughting callouts which is a part of the relationship. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDimensioningResource.IfcDraughtingCalloutRelationship.RelatedDraughtingCallout">
            <summary>
            The other of the draughting callouts which is a part of the relationship. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDimensioningResource.IfcDimensionCurve">
             <summary>
             Definition from IAI: A dimension curve is an annotated curve within a dimension that 
             has the dimension text and may have terminator symbols assigned. It is used to 
             present the extent and the direction of the dimension.
            
             NOTE: The dimension text is not directly associated to the IfcDimensionCurve. 
             It is associated as IfcStructuredDimensionCallout via the IfcDimensionCalloutRelationship 
             to the dimension (one of IfcAngularDimension, IfcDiameterDimension, IfcLinearDimension, or IfcRadiusDimension).
             
             NOTE: The IfcDimensionCurve is an entity that had been adopted from ISO 10303, 
             Industrial automation systems and integration—Product data representation and exchange, 
             Part 101: Integrated application resources: Draughting.
             </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDimensioningResource.IfcDimensionCurve.AnnotatedBySymbols">
            <summary>
             	Reference to the terminator symbols that may be assigned to the dimension curve. 
             	There shall be either zero, one or two terminator symbols assigned.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDimensioningResource.IfcDimensionCurveTerminator">
            <summary>
            Definition from IAI: A dimension curve terminator is an annotated symbol,
            which is used at a dimension curve. It normally indicates the origin or 
            target of the dimension curve.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDimensioningResource.IfcTerminatorSymbol">
            <summary>
            Definition from IAI: A terminator symbol is a special type of an annotated symbol which is assigned to a curve to indicate a direction, origin, target, or any other associated meaning.
            
            NOTE: The IfcTerminatorSymbol is an entity that had been adopted from ISO 10303, Industrial automation systems and integration—Product data representation and exchange, Part 101: Integrated application resources: Draughting.
            
            NOTE Corresponding STEP name: terminator_symbol. Please refer to ISO/IS 10303-101:1994 page 19 for the final definition of the formal standard.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDimensioningResource.IfcTerminatorSymbol.AnnotatedCurve">
            <summary>
            The curve being annotated by the terminator symbol. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDimensioningResource.IfcDimensionCurveTerminator.Role">
            <summary>
            Role of the dimension curve terminator within a dimension curve (being either an origin or target). 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDimensioningResource.IfcLinearDimension">
            <summary>
            The linear dimension is a draughting callout that presents the length (or distance) between two points along a linear curve. It consists of a dimension curve and optionally one or two projection curves.
            
            NOTE: The dimension text is handled through the IfcStructuredDimensionCallout and associated via the IfcDimensionCalloutRelationship.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDimensioningResource.IfcPreDefinedDimensionSymbol">
            <summary>
            The pre defined dimension symbol is a pre defined symbol for the purpose to identify a dimension symbol by name. Allowable names are:
            
            'arc length',
            'conical taper',
            'counterbore',
            'countersink',
            'depth',
            'diameter',
            'plus minus',
            'slope',
            'spherical diameter',
            'spherical radius',
            'square'
            
            NOTE: The IfcPreDefinedDimensionSymbol is an entity that had been adopted from ISO 10303, Industrial automation systems and integration—Product data representation and exchange, Part 202: Application protocol: Associative draughting.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDimensioningResource.IfcProjectionCurve">
            <summary>
            A projection curve is an annotated curve within a dimension that points to a point of the product shape that is measured.
            
            NOTE: The IfcProjectionCurve is an entity that had been adopted from ISO 10303, 
            Industrial automation systems and integration—Product data representation and exchange, 
            Part 101: Integrated application resources: Draughting.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDimensioningResource.IfcRadiusDimension">
            <summary>
            The radial dimension is a draughting callout that presents the radial length of a conic element. It consists of a dimension curve and may have projection curves (but is often defined without projection curves).
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightDistributionData">
            <summary>
            The IfcLightDistributionData defines the luminous intensity of a light source given at a 
            particular main plane angle. It is based on some standardized light distribution curves,
            the MainPlaneAngle is either the
            
                A angle; if the IfcLightDistributionCurveEnum is set to TYPE_A
                B angle; if the IfcLightDistributionCurveEnum is set to TYPE_B
                C angle; if the IfcLightDistributionCurveEnum is set to TYPE_C
            
            For each MainPlaneAngle (considered as being the row of a table) a list of SecondaryPlaneAngle's 
            are given (considered to be the columns of a table). They are either the:
            
                α angle; if the IfcLightDistributionCurveEnum is set to TYPE_A
                β angle; if the IfcLightDistributionCurveEnum is set to TYPE_B
                γ angle; if the IfcLightDistributionCurveEnum is set to TYPE_C
            
            For each pair of MainPlaneAngle and SecondaryPlaneAngle the LuminousIntensity is provides 
            (the unit is given by the IfcUnitAssignment referring to the LuminousIntensityDistributionUnit, normally cd/klm).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightDistributionData.MainPlaneAngle">
            <summary>
            The main plane angle (A, B or C angles, according to the light distribution curve chosen). 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightDistributionData.SecondaryPlaneAngle">
            <summary>
            The list of secondary plane angles (the α, β or γ angles) according 
            to the light distribution curve chosen. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightDistributionData.LuminousIntensity">
            <summary>
            The luminous intensity distribution measure for this pair of main and secondary 
            plane angles according to the light distribution curve chosen. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightIntensityDistribution">
            <summary>
            The IfcLightIntensityDistribution defines the the luminous intensity
            of a light source that changes according to the direction of the ray. 
            It is based on some standardized light distribution curves, which are 
            defined by the LightDistributionCurve attribute.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightIntensityDistribution.LightDistributionCurve">
            <summary>
            Standardized light distribution curve used to define the luminous intensity of the light in all directions. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightIntensityDistribution.DistributionData">
            <summary>
            Light distribution data applied to the light source. It is defined by a list of 
            main plane angles (B or C according to the light distribution curve chosen) that
            includes (for each B or C angle) a second list of secondary plane angles (the β or γ angles)
            and the according luminous intensity distribution measures. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSource">
            <summary>
            The light source entity is determined by the reflectance specified in the surface style rendering. 
            Lighting is applied on a surface by surface basis: no interactions between surfaces such as shadows or reflections are defined.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSource.Name">
            <summary>
            The name given to the light source in presentation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSource.LightColour">
            <summary>
            Definition from ISO/CD 10303-46:1992: Based on the current lighting model, the colour of the light to be used for shading.
            Definition from VRML97 - ISO/IEC 14772-1:1997: The color field specifies the spectral color properties of both the direct and ambient light 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSource.AmbientIntensity">
            <summary>
            Definition from VRML97 - ISO/IEC 14772-1:1997: The ambientIntensity specifies the intensity of the ambient emission from the light. 
            Light intensity may range from 0.0 (no light emission) to 1.0 (full intensity). 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSource.Intensity">
            <summary>
            Definition from VRML97 - ISO/IEC 14772-1:1997: The intensity field specifies the brightness of the direct emission from the ligth. 
            Light intensity may range from 0.0 (no light emission) to 1.0 (full intensity).
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceAmbient">
            <summary>
            The light source ambient entity is a subtype of light source. It lights a surface independent of the surface's orientation and position.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceDirectional">
            <summary>
            Definition from ISO/CD 10303-46:1992: The light source directional is a subtype of light source. 
            This entity has a light source direction. With a conceptual origin at infinity, all the rays of the light 
            are parallel to this direction. This kind of light source lights a surface based on the surface's orientation,
            but not position.
            
            Definition from ISO/IEC 14772-1:1997: The directional light node defines a directional light source that
            illuminates along rays parallel to a given 3-dimensional vector. Directional light nodes do not attenuate with distance.
            Directional light nodes are specified in the local coordinate system and are affected by ancestor transformations.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceDirectional.Orientation">
            <summary>
            Definition from ISO/CD 10303-46:1992: This direction is the direction of the light source.
            Definition from VRML97 - ISO/IEC 14772-1:1997: The direction field specifies the direction vector of the 
            illumination emanating from the light source in the local coordinate system. Light is emitted along parallel 
            rays from an infinite distance away. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceGoniometric">
            <summary>
            The IfcLightSourceGoniometric defines a light source for which exact lighting data is available. 
            It specifies the type of a light emitter, defines the position and orientation of a light distribution curve 
            and the data concerning lamp and photometric information.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceGoniometric.Position">
            <summary>
             	The position of the light source. It is used to orientate the light distribution curves.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceGoniometric.ColourAppearance">
            <summary>
            Artificial light sources are classified in terms of their color appearance. To the human eye they all appear to be white; the difference can only be detected by direct comparison. Visual performance is not directly affected by differences in color appearance.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceGoniometric.ColourTemperature">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceGoniometric.LuminousFlux">
            <summary>
            Luminous flux is a photometric measure of radiant flux, i.e. the volume of light emitted from a light source. Luminous flux is measured either for the interior as a whole or for a part of the interior (partial luminous flux for a solid angle). All other photometric parameters are derivatives of luminous flux. Luminous flux is measured in lumens (lm). The luminous flux is given as a nominal value for each lamp.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceGoniometric.LightEmissionSource">
            <summary>
              	Identifies the types of light emitter from which the type required may be set.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceGoniometric.LightDistributionDataSource">
            <summary>
            The data source from which light distribution data is obtained.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourcePositional">
            <summary>
            Definition from ISO/CD 10303-46:1992: The light source positional entity is a subtype of light source. This entity has a light source position and attenuation coefficients. A positional light source affects a surface based on the surface's orientation and position.
            
            Definition from ISO/IEC 14772-1:1997: The Point light node specifies a point light source at a 3D location in the local coordinate system. A point light source emits light equally in all directions; that is, it is omnidirectional. Point light nodes are specified in the local coordinate system and are affected by ancestor transformations.
            
            Point light node's illumination falls off with distance as specified by three attenuation coefficients. The attenuation factor is
            
                1/max(attenuation[0] + attenuation[1] × r + attenuation[2] × r 2 , 1), 
            
            where r is the distance from the light to the surface being illuminated. The default is no attenuation. An attenuation value of (0, 0, 0) is identical to (1, 0, 0). Attenuation values shall be greater than or equal to zero. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourcePositional.Position">
            <summary>
            Definition from ISO/CD 10303-46:1992: The Cartesian point indicates the position of the light source.
            Definition from VRML97 - ISO/IEC 14772-1:1997: A Point light node illuminates geometry within radius of its location.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourcePositional.Radius">
            <summary>
            Definition from IAI: The maximum distance from the light source for a surface still to be illuminated.
            Definition from VRML97 - ISO/IEC 14772-1:1997: A Point light node illuminates geometry within radius of its location.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourcePositional.ConstantAttenuation">
            <summary>
            Definition from ISO/CD 10303-46:1992: This real indicates the value of the attenuation in the lighting equation that is constant.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourcePositional.DistanceAttenuation">
            <summary>
            Definition from ISO/CD 10303-46:1992: This real indicates the value of the attenuation in the lighting equation that proportional to the distance from the light source.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourcePositional.QuadricAttenuation">
            <summary>
            Definition from the IAI: This real indicates the value of the attenuation in the lighting equation that proportional to the square value of the distance from the light source.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceSpot">
            <summary>
            Definition from ISO/CD 10303-46:1992: The light source spot entity is a subtype of light source. Spot light source entities have a light source colour, position, direction, attenuation coefficients, concentration exponent, and spread angle. If a point lies outside the cone of influence of a light source of this type as determined by the light source position, direction and spread angle its colour is not affected by that light source.
            
                NOTE: The IfcLightSourceSpot adds the BeamWidthAngle which defines the inner cone in which the light source emits light at uniform full intensity. The light source's emission intensity drops off from the inner solid angle (BeamWidthAngle) to the outer solid angle (SpreadAngle).
            
            Definition from ISO/IEC 14772-1:1997: The Spot light node defines a light source that emits light from a specific point along a specific direction vector and constrained within a solid angle. Spot lights may illuminate geometry nodes that respond to light sources and intersect the solid angle defined by the Spot light. Spot light nodes are specified in the local coordinate system and are affected by ancestors' transformations.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceSpot.Orientation">
            <summary>
            Definition from ISO/CD 10303-46:1992: This is the direction of the axis of the cone of the light source specified in the coordinate space of the representation being projected..
            Definition from VRML97 - ISO/IEC 14772-1:1997: The direction field specifies the direction vector of the light's central axis defined in the local coordinate system.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceSpot.ConcentrationExponent">
            <summary>
            Definition from ISO/CD 10303-46:1992: This real is the exponent on the cosine of the angle between the line that starts at the position of the spot light source and is in the direction of the orientation of the spot light source and a line that starts at the position of the spot light source and goes through a point on the surface being shaded.
            NOTE: This attribute does not exists in ISO/IEC 14772-1:1997. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceSpot.SpreadAngle">
            <summary>
            Definition from ISO/CD 10303-46:1992: This planar angle measure is the angle between the line that starts at the position of the spot light source and is in the direction of the spot light source and any line on the boundary of the cone of influence.
            Definition from VRML97 - ISO/IEC 14772-1:1997: The cutOffAngle (name of spread angle in VRML) field specifies the outer bound of the solid angle. The light source does not emit light outside of this solid angle.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcLightSourceSpot.BeamWidthAngle">
            <summary>
            Definition from VRML97 - ISO/IEC 14772-1:1997: The beamWidth field specifies an inner solid angle in which the light source emits light at uniform full intensity. The light source's emission intensity drops off from the inner solid angle (beamWidthAngle) to the outer solid angle (spreadAngle).
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationResource.IfcDraughtingPreDefinedTextFont">
            <summary>
            The draughting pre defined text font is a pre defined text font for the purpose to identify a font by name. 
            Allowable names are:
            
                'ISO 3098-1 font A',
                'ISO 3098-1 font B',
            
            The ISO 3098-1 font A is the text font as denoted as Letterng A in clause 3 of ISO 3098-1, the ISO 3098-1 font 
            B is the text font as denoted as Letterng B in clause 3 of ISO 3098-1.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ExternalReferenceResource.IfcExternalReference">
            <summary>
              An IfcExternalReference is the identification of information that is not explicitly represented in the current model or in the project database 
              (as an implementation of the current model).
            </summary>
            <remarks>
              Definition from IAI: An IfcExternalReference is the identification of information that is not explicitly represented in the current model 
              or in the project database (as an implementation of the current model). Such information may be contained in classifications, documents or libraries. 
              Only the Location (e.g. as an URL) is given to describe the place where the information can be found. 
              Also an optional ItemReference as a key to allow more specific references (as to sections or tables) is provided. 
              The ItemReference defines a system interpretable method to identify the relevant part of information at the data source (given by Location). 
              In addition a human interpretable Name can be assigned to identify the information subject (e.g. classification code).
              IfcExternalReference is an abstract supertype of all external reference classes.
              HISTORY: New Class in IFC Release 2x to generalize means of referencing available in IFC Release 2.0. 
              Formal Propositions:
              WR1   :   One of the attributes of IfcExternalReference should have a value assigned.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcExternalReference.Location">
            <summary>
              Optional. Location, where the external source (classification, document or library). 
              This can be either human readable or computer interpretable. 
              For electronic location normally given as an URL location string, however other ways of accessing external references may be established in an application scenario.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcExternalReference.ItemReference">
            <summary>
              Optional. Identifier for the referenced item in the external source (classification, document or library). 
              The internal reference can provide a computer interpretable pointer into electronic source.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcExternalReference.Name">
            <summary>
              Optional. Optional name to further specify the reference. 
              It can provide a human readable identifier (which does not necessarily need to have a counterpart in the internal structure of the document).
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.PresentationResource.IfcFontStyle.#ctor(System.String)">
            <summary>
              Ensures only string type is used
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.PresentationResource.IfcFontVariant.#ctor(System.String)">
            <summary>
              Ensures only string type is used
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.PresentationResource.IfcFontWeight.#ctor(System.String)">
            <summary>
              Ensures only string type is used
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationResource.IfcPlanarBox">
            <summary>
            A planar box specifies an arbitrary rectangular box and its location in a two dimensional Cartesian coordinate system.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationResource.IfcPlanarExtent.SizeInX">
            <summary>
              The extent in the direction of the x-axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationResource.IfcPlanarExtent.SizeInY">
            <summary>
              The extent in the direction of the y-axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationResource.IfcPlanarBox.Position">
            <summary>
             The IfcAxis2Placement positions a local coordinate system for the definition of the rectangle. The origin of this local coordinate system serves as the lower left corner of the rectangular box
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.PresentationResource.IfcPresentableText.#ctor(System.String)">
            <summary>
              Ensures only string type is used
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.PresentationResource.IfcTextFontName.#ctor(System.String)">
            <summary>
              Ensures only string type is used
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelAssignsToControl">
            <summary>
              This objectified relationship (IfcRelAssignsToControl) handles the assignment of a control (subtype of IfcControl) to other objects (subtypes of IfcObject, with the exception of controls). 
              For example: The assignment of a cost (as subtype of IfcControl) to a building element (as subtype of IfcObject) is an application of this generic relationship.
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.Kernel.IfcRelAssigns.AddRelatedObject(Xbim.Ifc2x3.Kernel.IfcObjectDefinition)">
            <summary>
              Adds a Related object if it's type obeys the constraint set by RelatedObjectType or no constraint has been set
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelAssigns.RelatedObjects">
            <summary>
              Related objects, which are assigned to a single object. The type of the single (or relating) object is defined 
              in the subtypes of IfcRelAssigns.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelAssigns.RelatedObjectsType">
            <summary>
              Particular type of the assignment relationship. It can constrain the applicable object types, used within the role of RelatedObjects.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelAssignsToControl.RelatingControl">
            <summary>
              Reference to group that finally contains all assigned group members.
            </summary>
            <remarks>
              WR1   :   The instance to with the relation points shall not be contained in the List of RelatedObjects.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcRelAssignsTasks.TimeForTask">
            <summary>
              An identifying designation given to a task.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl">
             <summary>
             The IfcScheduleTimeControl captures the time-related information about a process including the different types 
             (i.e. actual, or scheduled) of starting and ending times, duration, float times, etc.
             </summary>
             <remarks>
             Scheduled and actual durations of a task and all float times should be derived within an application from relevant start and 
             finish times that are also attributes of this class. Note that they are not directly derived within the IFC specification at 
             this stage due to the differences in data type between time measures date/time selections.
            
             The critical nature of an IfcScheduleTimeControl may also be derived within an application by comparing relevant start and 
             finish date/time selections but is not derived within the IFC specification at this stage.
             </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.ActualStart">
            <summary>
              The date on which a task is actually started. 
            </summary>
            <remarks>NOTE: The scheduled start date must be greater than or equal to the earliest start date. 
            No constraint is applied to the actual start date with respect to the scheduled start date since a task
            may be started earlier than had originally been scheduled if circumstances allow.</remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.EarlyStart">
            <summary>
            The earliest date on which a task can be started.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.LateStart">
            <summary>
            The latest date on which a task can be started.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.ScheduleStart">
            <summary>
            The date on which a task is scheduled to be started.
            </summary>
            <remarks>NOTE: The scheduled start date must be greater than or equal to the earliest start date.</remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.ActualFinish">
            <summary>
            The date on which a task is actually finished.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.EarlyFinish">
            <summary>
            The earliest date on which a task can be finished.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.LateFinish">
            <summary>
            The latest date on which a task can be finished.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.ScheduleFinish">
            <summary>
            The date on which a task is scheduled to be finished. 
            </summary>
            <remarks>NOTE: The scheduled finish date must be greater than or equal to the earliest finish date.</remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.ScheduleDuration">
            <summary>
            The amount of time which is scheduled for completion of a task. 
            </summary>
            <remarks>NOTE: Scheduled Duration may be calculated as the time from scheduled start date to scheduled finish date.</remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.ActualDuration">
            <summary>
            The actual duration of the task.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.RemainingTime">
            <summary>
            The amount of time remaining to complete a task. 
            </summary>
            <remarks>NOTE: The time remaining in which to complete a task may be determined both for tasks which have 
            not yet started and those which have. Remaining time for a task not yet started has the same value as the 
            scheduled duration.  For a task already started, remaining time is calculated as the difference between 
            the scheduled finish and the point of analysis.</remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.FreeFloat">
            <summary>
            The amount of time during which the start or finish of a task may be varied without any effect on the overall programme of work.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.TotalFloat">
            <summary>
            The difference between the duration available to carry out a task and the scheduled duration of the task. 
            </summary>
            <remarks>NOTE: Total Float time may be calculated as being the difference between the scheduled duration 
            of a task and the available duration from earliest start to latest finish. Float time may be either positive, 
            zero or negative. Where it is zero or negative, the task becomes critical.</remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.IsCritical">
            <summary>
            	 A flag which identifies whether a scheduled task is a critical item within the programme. 
            </summary>
            <remarks>NOTE: A task becomes critical when the float time becomes zero or negative.</remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.StatusTime">
            <summary>
            The date or time at which the status of the tasks within the schedule is analyzed.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.StartFloat">
            <summary>
            The difference between the late start and early start of a task. Start float measures how long an task's start 
            can be delayed and still not have an impact on the overall duration of a schedule.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.FinishFloat">
            <summary>
            The difference between the late finish and early finish of a task. Finish float measures how long a task's 
            finish can be delayed and still not have an impact on the overall duration of a schedule.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.Completion">
            <summary>
            	 The extent of completion expressed as a ratio or percentage.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcScheduleTimeControl.ScheduleTimeControlAssigned">
            <summary>
              The assigned schedule time control in the relationship.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControl">
            <summary>
            An IfcWorkControl is an abstract supertype which captures information that is common to both IfcWorkPlan and IfcWorkSchedule
            </summary>
            <remarks>
            Use Definitions
            A work control may have resources assigned to it, this is handled by the IfcRelAssignsToControl relationship. The assignment of tasks 
            to the work control is handled by the IfcRelAssignsTasks relationship.
            The inherited attributes have the following meaning:
                IfcControl.Controls - references to the IfcRelAssignsTasks, that assign instances of IfcTask including time schedule controls.
                IfcObject.HasAssignments - references to the IfcRelAssignsToResources, that assigns an instance of IfcResource to the IfcWorkControl.
            The attribute IfcWorkControl.Purpose is used to define the purpose of either a work schedule or a work plan. In the case of IfcWorkPlan, 
            the purpose attribute can be used to determine if the work plan is for cost estimating, task scheduling or some other defined purpose.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControl.Identifier">
            <summary>
              Identifier of the work plan, given by user.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControl.CreationDate">
            <summary>
              The date that the plan is created
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControl.Creators">
            <summary>
              The authors of the work plan.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControl.Purpose">
            <summary>
              A description of the purpose of the work schedule.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControl.Duration">
            <summary>
            The total duration of the entire work schedule.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControl.TotalFloat">
            <summary>
            The total time float of the entire work schedule.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControl.StartTime">
            <summary>
            The start time of the schedule.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControl.FinishTime">
            <summary>
            The finish time of the schedule.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControl.WorkControlType">
            <summary>
            The finish time of the schedule.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControl.UserDefinedControlType">
            <summary>
            The finish time of the schedule.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControlTypeEnum">
            <summary>
            An IfcWorkControlTypeEnum is an enumeration data type that specifies the types of work control 
            from which the relevant control can be selected.
            </summary>
            <remarks>Definition from IAI: An IfcWorkControlTypeEnum is an enumeration data type that specifies the types of work control 
            from which the relevant control can be selected. HISTORY: New type in IFC Release 2.0
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControlTypeEnum.ACTUAL">
            <summary>
            A control in which actual items undertaken are indicated.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControlTypeEnum.BASELINE">
            <summary>
            A control that is a baseline from which changes that are made later can be recognized.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControlTypeEnum.PLANNED">
            <summary>
            A control showing planned items.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControlTypeEnum.USERDEFINED">
            <summary>
              A user defined specification is given...
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProcessExtensions.IfcWorkControlTypeEnum.NOTDEFINED">
            <summary>
              No specification given.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProcessExtensions.IfcWorkPlan">
            <summary>
            An IfcWorkPlan represents work plans in a construction or a facilities management project.
            </summary>
            <remarks>
            A work plan contains a set of work schedules for different purposes (including construction and facilities management). 
            Through inheritance from IfcWorkControl, it also have references to all the activities (i.e. IfcTask) and resources used in the 
            work schedules.
            
            A work plan has information such as start date, finish date, total free float, and so on. IfcWorkPlan can also refer to the 
            construction project represented by the single IfcProject instance.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProcessExtensions.IfcWorkSchedule">
             <summary>
             An IfcWorkSchedule represents a task schedule in a work plan, which in turn can contain a set of schedules for different purposes.
             </summary>
             <remarks>
             An IfcWorkSchedule includes a set of elements (created through relating schedule time controls to tasks) with references to the 
             resources used for the tasks included in the work schedule. Additionally, through the IfcWorkControl abstract supertype, 
             the actors creating the schedule can be specified and schedule time information such as start time, finish time, and total 
             float of the schedule can also be specified.
            
             IfcWorkSchedule can reference a project (i.e. the single IfcProject instance). The documents of the IfcWorkSchedule can be 
             referenced by the IfcRelAssociatesDocuments relationship. Moreover, a work schedule can include other work schedules as sub-items
             through IfcRelNests relationship.
             </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcTransportElementType.PredefinedType">
            <summary>
              Predefined types to define the particular type of the transport element. 
              There may be property set definitions available for each predefined type
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcProfileProperties.ProfileName">
            <summary>
              Standardized profile name as published in a profile table. All profile properties are applicable to this standardized profile name.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcProfileProperties.ProfileDefinition">
            <summary>
              Optional reference to an instance of IfcProfileDef, which contains a further geometrical definition.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcGeneralProfileProperties.PhysicalWeight">
            <summary>
              Weight of an imaginary steel beam per length, as for example given by the national standards for this profile. Usually measured in [kg/m].
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcGeneralProfileProperties.Perimeter">
            <summary>
              Perimeter of the profile for calculating the surface area. Usually measured in [mm].
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcGeneralProfileProperties.MinimumPlateThickness">
            <summary>
              This value is needed for stress analysis and to handle buckling problems. 
              It can also be derived from the given profile geometry and therefore it is only an optional feature allowing for an explicit description. 
              Usually measured in [mm].
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcGeneralProfileProperties.MaximumPlateThickness">
            <summary>
              RThis value is needed for stress analysis and to handle buckling problems. 
              It can also be derived from the given profile geometry and therefore it is only an optional feature allowing for an explicit description. 
              Usually measured in [mm].
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcGeneralProfileProperties.CrossSectionArea">
            <summary>
              Cross sectional area of profile. Usually measured in [mm2].
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcReinforcementBarProperties.TotalCrossSectionArea">
            <summary>
              The total effective cross-section area of the reinforcement of a specific steel grade.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcReinforcementBarProperties.SteelGrade">
            <summary>
              The nominal steel grade defined according to local standards.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcReinforcementBarProperties.BarSurface">
            <summary>
              Indicator for whether the bar surface is plain or textured.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcReinforcementBarProperties.EffectiveDepth">
            <summary>
              The effective depth, i.e. the distance of the specific reinforcement cross section area or reinforcement configuration in a row, counted from a common specific reference point. Usually 
              the reference point is the upper surface (for beams and slabs) or a similar projection in a plane (for columns).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcReinforcementBarProperties.NominalBarDiameter">
            <summary>
              The nominal diameter defining the cross-section size of the reinforcing bar. 
              The bar diameter should be identical for all bars included in the specific reinforcement configuration.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProfilePropertyResource.IfcReinforcingBarSurfaceEnum.PLAIN">
            <summary>
              The reinforcing bar surface is plain.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProfilePropertyResource.IfcReinforcingBarSurfaceEnum.TEXTURED">
            <summary>
              The reinforcing bar surface is textured (ribbed).
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProfilePropertyResource.IfcRibPlateProfileProperties">
            <summary>
            Instances of the entity IfcRibPlateProfileProperties shall be used for a parameterized definition of rib plates.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcRibPlateProfileProperties.Thickness">
            <summary>
            Defines the thickness of the structural face member. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcRibPlateProfileProperties.RibHeight">
            <summary>
            Height of the ribs. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcRibPlateProfileProperties.RibWidth">
            <summary>
            Width of the ribs. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcRibPlateProfileProperties.RibSpacing">
            <summary>
             Spacing between the axes of the ribs. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcRibPlateProfileProperties.Direction">
            <summary>
             Defines the direction of profile definition as described on figure above. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcSectionReinforcementProperties.LongitudinalStartPosition">
            <summary>
              The start position in longitudinal direction for the section reinforcement properties.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcSectionReinforcementProperties.LongitudinalEndPosition">
            <summary>
              The end position in longitudinal direction for the section reinforcement properties.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcSectionReinforcementProperties.TransversePosition">
            <summary>
              The position for the section reinforcement properties in transverse direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcSectionReinforcementProperties.ReinforcementRole">
            <summary>
              The role, purpose or usage of the reinforcement, i.e. the kind of loads and stresses it is intended to carry, defined for the section reinforcement properties.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfilePropertyResource.IfcSectionReinforcementProperties.CrossSectionArea">
            <summary>
              Definition of the cross section profile and longitudinal section type.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgServiceElements.IfcSoundProperties.IsAttenuating">
            <summary>
              If TRUE, values represent sound attenuation. If FALSE, values represent sound generation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgServiceElements.IfcSoundProperties.SoundScale">
            <summary>
              Reference sound scale
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgServiceElements.IfcSoundProperties.SoundValues">
            <summary>
              Sound values at a specific frequency. There may be cases where less than eight values are specified.
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.MeasureResource.IfcDescriptiveMeasure.#ctor(System.String)">
            <summary>
              Ensures label does not exceed 255 chars
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.MeasureResource.IfcIdentifier.#ctor(System.String)">
            <summary>
              Ensures label does not exceed 255 chars
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.MeasureResource.LabelCollection.ToString(System.String,System.IFormatProvider)">
            <summary>
              Special format method for the properties of a Label collection
            </summary>
            <remarks>
              Format strings as a delimited list, use {D} followed by any sequence of characters to act as the delimiter
            </remarks>
            <param name = "format">
              use {D} followed by any sequence of characters to act as the delimiter
            </param>
            <param name = "formatProvider">
            </param>
            <returns>String with the formatted result.</returns>
        </member>
        <member name="M:Xbim.Ifc2x3.MeasureResource.IfcLabel.#ctor(System.String)">
            <summary>
              Ensures label does not exceed 255 chars
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.MeasureResource.IfcText.#ctor(System.String)">
            <summary>
              Ensures only string type is used
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcTextStyleFontModel.FontFamily">
            <summary>
              The value is a prioritized list of font family names and/or generic family names. 
              The first list entry has the highest priority, if this font fails, the next list item shall be used. 
              The last list item should (if possible) be a generic family.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcTextStyleFontModel.FontStyle">
            <summary>
              The font style property selects between normal (sometimes referred to as "roman" or "upright"), italic and oblique faces within a font family.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcTextStyleFontModel.FontVariant">
            <summary>
              The font variant property selects between normal and small-caps
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcTextStyleFontModel.FontWeight">
            <summary>
              The font weight property selects the weight of the font.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcTextStyleFontModel.FontSize">
            <summary>
              The font size provides the size or height of the text font
              NOTE  The following values are allowed, LengthMeasure, with positive values, the length unit is globally defined at IfcUnitAssignment
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcTextLiteral.Literal">
            <summary>
              The text literal to be presented.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcTextLiteral.Placement">
            <summary>
              An IfcAxis2Placement that determines the placement and orientation of the presented string. 
              When used with a text style based on TextStyleWithBoxCharacteristics then the y-axis is taken as the reference 
              direction for the box rotation angle and the box slant angle.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcTextLiteral.Path">
            <summary>
              The writing direction of the text literal.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcTextLiteralWithExtent.BoxAlignment">
            <summary>
              The writing direction of the text literal.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcPort">
            <summary>
              An IfcPort provides the means for an element to connect to other elements.
            </summary>
            <remarks>
              Definition from IAI: An IfcPort provides the means for an element to connect to other elements.
              An IfcPort is associated with an IfcElement, it belongs to, through the objectified relationship IfcRelConnectsPortToElement. Exactly two ports, belonging to two different elements, are connected with each other through the objectified relationship IfcRelConnectsPorts.
              HISTORY: New entity in Release IFC2x Edition 2.
              Use Definitions
              An instance of IfcElement may have one or more points at which it connects to other instances of IfcElement. An instance of IfcPort is located at a point where a connection can occur. The location of the port is determined in the context of the local coordinate system of the element to which it belongs.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcPort.ContainedIn">
            <summary>
              Inverse. Reference to the element to port connection relationship. The relationship then refers to the element in which this port is contained.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcPort.ConnectedFrom">
            <summary>
              Inverse. Reference to a port that is connected by the objectified relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcPort.ConnectedTo">
            <summary>
              Inverse. Reference to the port connection relationship. The relationship then refers to the other port to which this port is connected.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgServiceElements.IfcRelFlowControlElements.RelatedControlElements">
            <summary>
              References control elements which may be used to impart control on the Distribution Element.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgServiceElements.IfcRelFlowControlElements.RelatingFlowElement">
            <summary>
              Relationship to a distribution flow element
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.HVACDomain.IfcUnitaryEquipmentTypeEnum">
            <summary>
              Enumeration defining the functional type of unitary equipment.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgServiceElements.IfcThermalLoadTypeEnum">
            <summary>
              This enumeration defines the type of thermal load for spaces or zones, as derived from various use cases:
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgServiceElements.IfcThermalLoadTypeEnum.SENSIBLE">
            <summary>
              Energy added or removed from air that affects its temperature.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgServiceElements.IfcThermalLoadTypeEnum.LATENT">
            <summary>
              Energy added or removed from air that affects its humidity or concentration of water vapor.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgServiceElements.IfcThermalLoadTypeEnum.RADIANT">
            <summary>
              Electromagnetic energy added or removed by emmission or absorption.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgServiceElements.IfcThermalLoadTypeEnum.NOTDEFINED">
            <summary>
              Undefined thermal load type.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedComponentElements.IfcChamferEdgeFeature">
            <summary>
            An edge feature with a chamfered cross section shape. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedComponentElements.IfcEdgeFeature">
            <summary>
            A feature describing the edge shape of an building element. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcFeatureElementSubtraction">
            <summary>
              A specialization of the general feature element, that represents an existence dependent elements which modify the shape and appearance of the associated master element.
            </summary>
            <remarks>
              Definition from IAI: A specialization of the general feature element, that represents an existence dependent elements which modify the shape and appearance of the associated master element. The IfcFeatureElementSubtraction offers the ability to handle shape modifiers as semantic objects within the IFC object model that subtract from the shape of the master element. 
              HISTORY: New entity in Release IFC2x Edition 2.
              NOTE: The entity is introduced as an upward compatible extension of the IFC2x platform. It is an intermediate abstract supertype without defining its own explicit attributes. The existing IfcOpeningElement is subtyped from it.
              Geometry Use Definitions
              The geometric representation of IfcFeatureElementSubtraction is given by the IfcProductDefinitionShape, allowing multiple geometric representations. 
              Local Placement
              The local placement for IfcFeatureElementSubtraction is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. The local placement is always defined in relation to the local placement of the building element from which the feature element substration is substracted: 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcElement, which is used in the VoidsElements.RelatingElement inverse attribute. 
              Shape Representation
              The geometry use definitions for the shape representation of the IfcFeatureElementSubtraction is given at the level of its subtypes.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcFeatureElement">
            <summary>
              Generalization of all existence dependent elements which modify the shape and appearance of the associated master element.
            </summary>
            <remarks>
              Definition from IAI: Generalization of all existence dependent elements which modify the shape and appearance of the associated master element. The IfcFeatureElement offers the ability to handle shape modifiers as semantic objects within the IFC object model.
              NOTE: The term "feature" has a predefined meaning in a context of "feature-based modeling" and within steel construction work. It is introduced here in a broad sense to cover all existence dependent, but semantically described, modifiers of an element's shape and appearance. It is envisioned that future releases enhance the feature-based capabilities of the IFC model.
              HISTORY: New entity in Release IFC2x Edition 2.
              NOTE: The entity is introduced as an upward compatible extension of the IFC2x platform. It is an intermediate abstract supertype without defining its own explicit attributes. 
              Geometry Use Definitions:
              The geometric representation of IfcFeatureElement is given by the IfcProductDefinitionShape, allowing multiple geometric representation. 
              Local Placement
              The local placement for IfcFeatureElement is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the master IfcElement (its relevant subtypes), which is associated to the IfcFeatureElement by the appropriate relationship object. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Shape Representation
              The geometry use definitions for the shape representation of the IfcFeatureElement is given at the level of its subtypes.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcFeatureElementSubtraction.VoidsElements">
            <summary>
              Inverse. Reference to the Voids Relationship that uses this Opening Element to create a void within an Element. 
              The Opening Element can only be used to create a single void within a single Element.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedComponentElements.IfcEdgeFeature.FeatureLength">
            <summary>
            The length of the feature in orthogonal direction from the feature cross section. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedComponentElements.IfcChamferEdgeFeature.Width">
            <summary>
            The width of the feature chamfer cross section. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedComponentElements.IfcChamferEdgeFeature.Height">
            <summary>
            The height of the feature chamfer cross section. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedComponentElements.IfcMechanicalFastener.NominalDiameter">
            <summary>
            The nominal diameter describing the cross-section size of the fastener.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedComponentElements.IfcMechanicalFastener.NominalLength">
            <summary>
            The nominal length describing the longitudinal dimensions of the fastener.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedComponentElements.IfcRoundedEdgeFeature.Radius">
            <summary>
             The radius of the feature cross section. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcAsset.AssetID">
            <summary>
            A unique identification assigned to an asset that enables its differentiation from other assets.
            NOTE: The asset identifier is unique within the asset register. It differs from the globally unique
            id assigned to the instance of an entity 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcAsset.OriginalValue">
            <summary>
            The cost value of the asset at the time of purchase. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcAsset.CurrentValue">
            <summary>
            The current cost value of the asset. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcAsset.TotalReplacementCost">
            <summary>
            The total cost of replacement of the asset. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcAsset.Owner">
            <summary>
            The name of the person or organization that 'owns' the asset. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcAsset.User">
            <summary>
            The name of the person or organization that 'uses' the asset. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcAsset.ResponsiblePerson">
            <summary>
            The person designated to be responsible for the asset.
            NOTE: In (e.g.) UK Law (Health and Safety at Work Act, Electricity at Work 
            Regulations, and others), management of assets must have a person identified as 
            being responsible and to whom regulatory, insurance and other organizations communicate. 
            In places where there is not a legal requirement, the responsible person would be the asset 
            manager but would not have a legal status. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcAsset.IncorporationDate">
            <summary>
            The date on which an asset was incorporated into the works, installed, constructed, erected or completed.
            NOTE: This is the date on which an asset is considered to start depreciating. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcAsset.DepreciatedValue">
            <summary>
            The current value of an asset within the accounting rules and procedures of an organization. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcFurnishingElementType">
            <summary>
              The element type (IfcFurnishingElementType) defines a list of commonly shared property set definitions of an element and an optional set of product representations.
            </summary>
            <remarks>
              Definition from IAI: The element type (IfcFurnishingElementType) defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (i.e. the specific product information, that is common to all occurrences of that product type).
              NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem. 
              A furnishing element type is used to define the common properties of a certain type of a furnishing element that may be applied to many instances of that feature type to assign a specific style. Furnishing element types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.
              The occurrences of the IfcFurnishingElementType are represented by instances of IfcFurnishingElement (or its subtypes).
              HISTORY New entity in Release IFC2x Edition 2.
              IFC2x Edition 3 CHANGE  The entity has been made non-abstract
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcInventory.InventoryType">
            <summary>
             	A list of the types of inventories from which that required may be selected.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcInventory.Jurisdiction">
            <summary>
            The organizational unit to which the inventory is applicable. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcInventory.ResponsiblePersons">
            <summary>
            Persons who are responsible for the inventory. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcInventory.LastUpdateDate">
            <summary>
            The date on which the last update of the inventory was carried out. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcInventory.CurrentValue">
            <summary>
            An estimate of the current cost value of the inventory. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcInventory.OriginalValue">
            <summary>
            An estimate of the original cost value of the inventory. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedFacilitiesElements.IfcOccupant">
            <summary>
            AnIfcOccupant is a type of actor that defines the form of occupancy of a property.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcActor">
            <summary>
              The IfcActor defines all actors or human agents involved in a project during its full life cycle. 
              It facilitates the use of person and organization definitions in the resource part of the IFC object model.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcActor.TheActor">
            <summary>
              Reference to the relationship that associates the actor to an object. Can be an Organization, Person or PersonOrganization
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcActor.IsActingUpon">
            <summary>
              Information about the actor.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcActor.TheActorAsPerson">
            <summary>
              Returns the Actor as a Person, if it is a Person else null
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcActor.TheActorAsPersonAndOrganization">
            <summary>
              Returns the Actor as a PersonAndOrganization, if it is a PersonAndOrganization else null
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcActor.TheActorAsOrganization">
            <summary>
              Returns the Actor as a PersonAndOrganization, if it is a PersonAndOrganization else null
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedFacilitiesElements.IfcOccupantTypeEnum">
            <summary>
            IfcOccupantTypeEnum defines the types of occupant from which the type required can be selected.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedFacilitiesElements.IfcOccupantTypeEnum.ASSIGNEE">
            <summary>
            Actor receiving the assignment of a property agreement from an assignor
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedFacilitiesElements.IfcOccupantTypeEnum.ASSIGNOR">
            <summary>
            Actor assigning a property agreement to an assignor
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedFacilitiesElements.IfcOccupantTypeEnum.LESSEE">
            <summary>
            Actor receiving the lease of a property from a lessor
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedFacilitiesElements.IfcOccupantTypeEnum.LESSOR">
            <summary>
            Actor leasing a property to a lessee
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedFacilitiesElements.IfcOccupantTypeEnum.LETTINGAGENT">
            <summary>
            Actor participating in a property agreement on behalf of an owner, lessor or assignor
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedFacilitiesElements.IfcOccupantTypeEnum.OWNER">
            <summary>
            Actor that owns a property
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedFacilitiesElements.IfcOccupantTypeEnum.TENANT">
            <summary>
            Actor renting the use of a property for a period of time
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedFacilitiesElements.IfcOccupantTypeEnum.USERDEFINED">
            <summary>
            Actor is user defined
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedFacilitiesElements.IfcOccupantTypeEnum.NOTDEFINED">
            <summary>
            Actor is not defined
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedFacilitiesElements.IfcRelOccupiesSpaces">
            <summary>
            IfcRelOccupiesSpaces is a relationship class that further constrains the parent relationship IfcRelAssignsToActor 
            to a relationship between occupants (IfcOccupant) and either a space (IfcSpace), a collection of spaces (IfcZone), 
            a building storey (IfcBuildingStorey), or a building (IfcBuilding).
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelAssignsToActor">
            <summary>
              This objectified relationship (IfcRelAssignsToActor) handles the assignment of objects (subtypes of IfcObject) to an actor (subtypes of IfcActor).
              The IfcRelAssignsToActor objectified relationship defines a relationship between an IfcActor and one or many objects. 
              A particular role of the actor played in that relationship can be associated. If specified, it takes priority over the role that may be directly assigned to the person or organization.
              Example: An occupant (as an actor) may rent (as a special association type) a flat (as a collection of spaces or a zone). This would be an application of this generic relationship.
              Reference to the objects (or single object) on which the actor acts upon in a certain role (if given) is specified in the inherited RelatedObjects attribute.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelAssignsToActor.RelatingActor">
            <summary>
              Reference to the information about the actor. It comprises the information about the person or organization and its addresses.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelAssignsToActor.ActingRole">
            <summary>
              Role of the actor played within the context of the assignment to the object(s).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcServiceLife.ServiceLifeType">
            <summary>
            Predefined service life types from which that required may be set. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcServiceLife.ServiceLifeDuration">
            <summary>
            The length or duration of a service life. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedFacilitiesElements.IfcServiceLifeFactor">
            <summary>
            An IfcServiceLifeFactor captures the various factors that impact upon the expected service life of an artefact.
            
                HISTORY: New entity in IFC 2x2
            
            Use Definitions
            
            Note that each instance of IfcServiceLifeFactor may have a name that describes the form of impact that the factor has on the service life. Because there is a significant list of such potential impacts, they are not explicitly collected together into an enumeration. In order to name an instance of IfcServiceLifeFactor, the inherited Name attribute should be used.
            
            Within the IFC specification, any number of service life factors may be allowed to impact upon the service life of an artefact. In many cases, it is probable that the ISO standard that specifies good practice for service life consideration will be applied.
            
            Within the ISO standard, there are seven defined (named) service life factors that may be applied to an IfcServiceLife. These are captured in the IfcServiceLifeFactorEnum (together with a user defined capability). Each factor can have three values that define an upper, lower and most used (or median) value.
            
            One or more instances of IfcServiceLifeFactor can be related to an IfcServiceLife through the IfcRelDefinesByProperties relationship class.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcServiceLifeFactor.PredefinedType">
            <summary>
            Predefined service life factor types from which that required may be set. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcServiceLifeFactor.UpperValue">
            <summary>
            Upper of the three values assigned to the service life factor. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcServiceLifeFactor.MostUsedValue">
            <summary>
            Most used of the three values assigned to the service life factor. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedFacilitiesElements.IfcServiceLifeFactor.LowerValue">
            <summary>
            Lower of the three values assigned to the service life factor. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedMgmtElements.IfcCostItem">
            <summary>
            An IfcCostItem describes a cost or financial value together with descriptive information that describes its context in a form that enables it to be used within a cost schedule.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedMgmtElements.IfcCostSchedule">
            <summary>
            An IfcCostSchedule brings together instances of IfcCostItem either for the purpose of identifying purely cost information as in an estimate for constructions costs, bill of quantities etc. or for including cost information within another presentation form such as an order (of whatever type)
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedMgmtElements.IfcCostSchedule.SubmittedBy">
            <summary>
            The identity of the person or organization submitting the cost schedule.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedMgmtElements.IfcCostSchedule.PreparedBy">
            <summary>
            The identity of the person or organization preparing the cost schedule.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedMgmtElements.IfcCostSchedule.SubmittedOn">
            <summary>
            The date on which the cost schedule was submitted.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedMgmtElements.IfcCostSchedule.Status">
            <summary>
            The current status of a cost schedule. Examples of status values that might be used for a cost schedule status include: - PLANNED - APPROVED - AGREED - ISSUED - STARTED 
            /// </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedMgmtElements.IfcCostSchedule.TargetUsers">
            <summary>
            The actors for whom the cost schedule was prepared.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedMgmtElements.IfcCostSchedule.UpdateDate">
            <summary>
            The date that this cost schedule is updated; this allows tracking the schedule history.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedMgmtElements.IfcCostSchedule.ID">
            <summary>
            A unique identification assigned to a cost schedule that enables its differentiation from other cost schedules.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedMgmtElements.IfcCostSchedule.PredefinedType">
            <summary>
            Predefined types of cost schedule from which that required may be selected.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedMgmtElements.IfcCostScheduleTypeEnum">
            <summary>
            An IfcCostScheduleTypeEnum is a list of the available types of cost schedule from which that required may be selected.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcCostScheduleTypeEnum.BUDGET">
            <summary>
            An allocation of money for a particular purpose.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcCostScheduleTypeEnum.COSTPLAN">
            <summary>
            An assessment of the amount of money needing to be expended for a defined purpose based on incomplete information about the goods and services required for a construction or installation.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcCostScheduleTypeEnum.ESTIMATE">
            <summary>
            An assessment of the amount of money needing to be expended for a defined purpose based on actual information about the goods and services required for a construction or installation.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcCostScheduleTypeEnum.TENDER">
            <summary>
            An offer to provide goods and services.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcCostScheduleTypeEnum.PRICEDBILLOFQUANTITIES">
            <summary>
            A complete listing of all work items forming construction or installation works in which costs have been allocated to work items.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcCostScheduleTypeEnum.UNPRICEDBILLOFQUANTITIES">
            <summary>
            A complete listing of all work items forming construction or installation works in which costs have not yet been allocated to work items.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcCostScheduleTypeEnum.SCHEDULEOFRATES">
            <summary>
            A listing of each type of goods forming construction or installation works with the cost of purchase, construction/installation, overheads and profit assigned so that additional items of that type can be costed.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrder">
            <summary>
            An IfcProjectOrder sets common properties for project orders issued in a construction or facilities management project.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrder.ID">
            <summary>
            A unique identification assigned to a project order that enables its differentiation from other project orders.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrder.PredefinedType">
            <summary>
            The type of project order.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrder.Status">
            <summary>
            The current status of a project order.Examples of status values that might be used for a project order status include: - PLANNED - REQUESTED - APPROVED - ISSUED - STARTED - DELAYED - DONE         
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderRecord">
            <summary>
            An IfcProjectOrderRecord records information in sequence about the incidence of each order that is connected with one or a set of objects.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderRecord.Records">
            <summary>
            Records in the sequence of occurrence the incident of a project order and the objects that are related to that project order. For instance, a maintenance incident will connect a work order with the objects (elements or assets) that are subject to the provisions of the work order
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderRecord.PredefinedType">
            <summary>
            Identifies the type of project incident.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderRecordTypeEnum">
            <summary>
            An IfcProjectOrderRecordTypeEnum is a designation of the type of event being recorded.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderRecordTypeEnum.CHANGE">
            <summary>
            A record of instructions to bring about a change to a construction or installation.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderRecordTypeEnum.MAINTENANCE">
            <summary>
            A record of instructions to carry out maintenance work on one or more assets or components.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderRecordTypeEnum.MOVE">
            <summary>
            A record of instructions to move actors and/or artefacts.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderRecordTypeEnum.PURCHASE">
            <summary>
            A record of instructions to purchase goods or services.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderRecordTypeEnum.WORK">
            <summary>
            A record of instructions to carry out work generally.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderTypeEnum">
            <summary>
            An IfcProjectOrderTypeEnum is a list of the types of project order that may be identified.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderTypeEnum.CHANGEORDER">
            <summary>
            An instruction to make a change to a product or work being undertaken and a description of the work that is to be performed.	
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderTypeEnum.MAINTENANCEWORKORDER">
            <summary>
            An instruction to carry out maintenance work and a description of the work that is to be performed.	
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderTypeEnum.MOVEORDER">
            <summary>
            An instruction to move persons and artefacts and a description of the move locations, objects to be moved, etc.	
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderTypeEnum.PURCHASEORDER">
            <summary>
            An instruction to purchase goods and/or services and a description of the goods and/or services to be purchased that is to be performed.	
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedMgmtElements.IfcProjectOrderTypeEnum.WORKORDER">
            <summary>
            A general instruction to carry out work and a description of the work to be done. Note the difference between a work order generally and a maintenance work order.	
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedMgmtElements.IfcRelAssociatesAppliedValue">
            <summary>
             An IfcRelAssociatesAppliedValue is a subtype of IfcRelAssociates that enables the association of an instance of IfcAppliedValue with one or more instances of IfcObject.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedMgmtElements.IfcRelAssociatesAppliedValue.RelatingAppliedValue">
            <summary>
            Note that IfcRelAssociatesAppliedValue, when used for costing purposes, should be used only for relating specific cost values to objects and not for relating cost schedule items to cost schedule (for which purpose IfcRelSchedulesCostItems should be used).
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedMgmtElements.IfcRelSchedulesCostItems">
            <summary>
            An IfcRelSchedulesCostItems is a subtype of IfcRelAssignsToControl that enables one or many instances of IfcCostItem to be assigned to an instance of IfcCostSchedule.
            HISTORY: New Entity in IFC Release 2.0. Modified in IFC 2x2
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcRelAssociatesProfileProperties">
            <summary>
              The IfcRelAssociatesProfileProperties is an objectified relationship between non geometric profile properties (subtypes of IfcProfileProperties) and elements to which these properties apply, e.g. building elements and building element types as used within the structural 
              engineering domain for steel, timber or concrete structures.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcRelAssociatesProfileProperties.RelatingProfileProperties">
            <summary>
              Profile property definition assigned to the instances.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcRelAssociatesProfileProperties.ProfileSectionLocation">
            <summary>
              Reference to a shape aspect with a single member of the ShapeRepresentations list. This member holds the location at which the profile properties apply.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcRelAssociatesProfileProperties.ProfileOrientation">
            <summary>
              The provision of an plane angle or a direction as the measure to orient the profile definition within the elements coordinate system. 
              For IfcStructuralCurveMember the IfcPlaneAngleMeasure defines the β angle, for columns the derivation from the structural x axis 
              and for beams the derivation from the structural z axis. The IfcDirection precisely defines the orientation of the profile's 
              structural z axis within the structural coordinate system of the analysis model.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcRelConnectsStructuralMember.RelatingStructuralMember">
            <summary>
              Reference to an instance of IfcStructuralMember (or its subclasses) which is connected to the specified structural connection.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcRelConnectsStructuralMember.RelatedStructuralConnection">
            <summary>
              Reference to an instance of IfcStructuralConnection (or its subclasses) which is connected to the specified structural member.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcRelConnectsStructuralMember.AppliedCondition">
            <summary>
              Reference to an instance of IfcBoundaryCondition which is used to define the connections properties.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcRelConnectsStructuralMember.AdditionalConditions">
            <summary>
              Reference to instances describing additional connection properties.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcRelConnectsStructuralMember.SupportedLength">
            <summary>
              Defines the 'supported length' of this structural connection.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcRelConnectsStructuralMember.ConditionCoordinateSystem">
            <summary>
              Defines a new coordinate system used for the description of the connection properties.
              The usage of this coordinate system is described more detailed in the definition of the subtypes of this entity definition.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralAction.DestabilizingLoad">
            <summary>
              Indicates if this action may cause a stability problem. If it is 'FALSE', no further investigations regarding stability problems are necessary.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralAction.CausedBy">
            <summary>
              Optional reference to an instance of IfcStructuralReaction representing a result of another structural analysis model which creates this action upon the considered structural analysis model.
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralAnalysisModel.SetLoadedBy(Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralLoadGroup[])">
            <summary>
            Adds the load groups to the LoadedBy Property
            </summary>
            <param name="loads"></param>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralItem">
            <summary>
              The abstract entity IfcStructuralItem covers structural members and structural connections. It defines the relation needed to associate structural actions to structural members and connections.
            </summary>
            <remarks>
              Definition from IAI: The abstract entity IfcStructuralItem covers structural members and structural connections. It defines the relation needed to associate structural actions to structural members and connections.
              Topology Use Definition
              Instances of IfcStructuralCurveMember shall have a topology representation. It includes a placement and a product representation. The IfcProductRepresentation shall be given by an item of Representations being of type "IfcTopologyRepresentation".
              Local Placement
              The preferred placement for topological representations is the placement within the world coordinate system of the project. This is provided by leaving the ObjectPlacement attribute with a NIL value. If the ObjectPlacement however is provided, all geometric entities underneath the topological representation (such as IfcVertexPoint, IfcEdgeCurve, or IfcFaceSurface) are founded within the object coordinate system established by ObjectPlacement.
              HISTORY: New entity in Release IFC2x Edition 2.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralItem.AssignedStructuralActivity">
            <summary>
              Inverse. Inverse relationship to all structural activities (i.e. to actions or reactions) which are assigned to this structural member.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralCurveMember">
            <summary>
              Instances of the entity IfcStructuralCurveMember shall be used to describe linear structural elements. Profile and material properties are defined by using objectified relationships:
              The material properties are defined by IfcMechanicalMaterialProperties (and subtypes), they are connected through
              IfcMaterial and IfcRelAssociatesMaterial and are accessible via the inherited inverse relationship HasAssociations. 
              The profile properties are defined by IfcMechanicalProfileProperties (and subtypes), they are connected through 
              IfcRelAssociatesProfileProperties and are accessible via the inherited inverse relationship HasAssociations.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralMember">
            <summary>
              The abstract entity IfcStructuralMember is the superclass of all structural elements representing the structural behaviour of building elements.
            </summary>
            <remarks>
              Definition from IAI: The abstract entity IfcStructuralMember is the superclass of all structural elements representing the structural behaviour of building elements. A further differentiation is made for structural curve members and structural face members (see IfcStructuralCurveMember and IfcStructuralFaceMember). Structural members can have 
              a material definition, using IfcStructuralMember o-- IfcRelAssociatesMaterial --o IfcMaterial 
              a profile definition, using IfcStructuralMember o-- IRelAssociatesProfileProperties --o IfcProfileProperties 
              a parent analysis model, using IfcStructuralMember o-- IfcRelAssignsToGroup --o IfcStructuralAnalysisModel 
              NOTE: Currently only the subtypes IfcStructuralCurveMember and IfcStructuralFaceMember are defined. However, for dynamic calculations, an extension for 'point members' will be necessary and might be added in future releases.
              HISTORY: New entity in Release IFC2x Edition 2. 
              Use Definition
              Assignment of Material 
              The relationship to a specific material definition is provided by the entity class IfcRelAssociatesMaterial. The instance of IfcStructuralMember is used to represent collectively its subclasses IfcStructuralCurveMember and IfcStructuralFaceMember.
              Depending on the material, there are material specific subtypes of IfcMechanicalMaterialProperties, such as IfcMechanicalSteelMaterialProperties, or IfcMechanicalConcreteMaterialProperties.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralMember.ReferencesElement">
            <summary>
              Inverse link to the relationship object, that connects a physical element to this structural member 
              (the element of which this structural member is the analytical idealisation).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralMember.ConnectedBy">
            <summary>
              Inverse relationship to all structural connections (i.e. to supports or connecting elements) which are defined for this structural member.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralCurveMember.PredefinedType">
            <summary>
              Defines the load carrying behavior of the member, as far as it is taken into account in the analysis.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralCurveMemberVarying">
            <summary>
              Instances of the entity IfcStructuralCurveMemberVarying shall be used to describe linear structural elements with varying profile properties.
              The varying profile properties are assigned through the IfcRelAssociatesProfileProperties with an additional link to the IfcShapeAspect, 
              which relates the profile properties to the different vertices of the structural curve member.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralLinearAction.ProjectedOrTrue">
            <summary>
              Defines if the load values are given by using the length of the member on which they act (true length) or by using the projected length resulting from 
              the loaded member and the global project coordinate system. It is only considered if the global project coordinate system is used, and if 
              the action is of type IfcStructuralLinearAction or IfcStructuralPlanarAction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralLinearActionVarying.VaryingAppliedLoadLocation">
            <summary>
              A shape aspect, containing a list of shape representations, each defining either one Cartesian point or one 
              point on curve (by parameter values) which are needed to provide the positions of the VaryingAppliedLoads. 
              The values contained in the list of IfcShapeAspect.ShapeRepresentations correspond to the values at the same position in the list VaryingAppliedLoads.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralLinearActionVarying.SubsequentAppliedLoads">
            <summary>
              A list containing load values which are assigned to the position defined through the shape aspect. 
              The first load is already defined by the inherited attribute AppliedLoad and shall not be contained in this list.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralLinearActionVarying.VaryingAppliedLoads">
            <summary>
              Derived list of all varying applied loads by pushing the inherited AppliedLoad value to 
              he beginning of the list of SubsequentAppliedLoads.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralLoadGroup">
            <summary>
              The entity IfcStructuralLoadGroup is used to structure the physical impacts. 
              By using the grouping features inherited from IfcGroup, instances of IfcStructuralAction (or its subclasses) 
              and of IfcStructuralLoadGroup can be used to define load groups, load cases and load combinations. 
              An optional coefficient can be provided to represent safety factors known from several codes of practice. 
              (see also IfcLoadGroupTypeEnum)
              NOTE: Important functionality for the description of a load-bearing system is derived from the existing IFC entity IfcGroup. 
              This class provides, via the relationship class IfcRelAssignsToGroup, the needed grouping mechanism. 
              In this way, instances of IfcStructuralAction belonging to a specific load group can be unambiguously determined.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralLoadGroup.PredefinedType">
            <summary>
              Selects a predefined type for the load group. It can be differentiated between load groups, load cases, load combination groups 
              (a necessary construct for the description of load combinations) and load combinations.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralLoadGroup.ActionType">
            <summary>
              Type of actions in the group. Normally needed if 'PredefinedType' specifies a LOAD_COMBINATION_GROUP.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralLoadGroup.ActionSource">
            <summary>
              Source of actions in the group. Normally needed if 'PredefinedType' specifies a LOAD_CASE.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralLoadGroup.Coefficient">
            <summary>
              Load factor. If omitted, a factor is not yet known or not specified. A load factor of 1.0 shall be explicitly exported as Coefficient = 1.0.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralLoadGroup.Purpose">
            <summary>
              Description of the purpose of this instance. Among else, possible values of the Purpose of load combinations are 'SLS', 'ULS', 'ALS' to 
              indicate serviceability, ultimate, or accidental limit state.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralLoadGroup.SourceOfResultGroup">
            <summary>
              Results which were computed using this load group.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralLoadGroup.LoadGroupFor">
            <summary>
              Analysis models in which this load group is used.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralPlanarAction.ProjectedOrTrue">
            <summary>
              Defines if the load values are given by using the length of the member on which they act (true length) or by using the projected length resulting from 
              the loaded member and the global project coordinate system. It is only considered if the global project coordinate system is used, and if 
              the action is of type IfcStructuralLinearAction or IfcStructuralPlanarAction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralPlanarActionVarying.VaryingAppliedLoadLocation">
            <summary>
              A shape aspect, containing a list of shape representations, each defining either one Cartesian point or one 
              point on curve (by parameter values) which are needed to provide the positions of the VaryingAppliedLoads. 
              The values contained in the list of IfcShapeAspect.ShapeRepresentations correspond to the values at the same position in the list VaryingAppliedLoads.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralPlanarActionVarying.SubsequentAppliedLoads">
            <summary>
              A list containing load values which are assigned to the position defined through the shape aspect. 
              The first load is already defined by the inherited attribute AppliedLoad and shall not be contained in this list.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralPlanarActionVarying.VaryingAppliedLoads">
            <summary>
              Derived list of all varying applied loads by pushing the inherited AppliedLoad value to 
              he beginning of the list of SubsequentAppliedLoads.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralPointReaction">
            <summary>
              Instances of the entity IfcStructuralPointAction are used to define point actions. 
              Structural loads applicable to point actions are IfcStructuralLoadSingleForce (and subtype), and IfcStructuralLoadSingleDisplacement (and subtype). 
              The structural load, defining the point action is given by the attribute AppliedLoad at the supertype IfcStructuralActivitiy. 
              The coordinate system, in which the AppliedLoad is defined is given by the attribute ObjectPlacement at the supertype IfcProduct.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralReaction">
            <summary>
              A structural reaction is a structural activity that results from a structural action imposed to a structural item or building element.
              A support is an example for a structural reaction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralReaction.Causes">
            <summary>
              Optional reference to instances of IfcStructuralAction which directly depend on this reaction. 
              This reference is only needed if dependencies between structural analysis models must be captured.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralResultGroup">
            <summary>
              Instances of the entity IfcStructuralResultGroup are used to group results of structural analysis calculations 
              and to capture the connection to the underlying basic load group. 
              The basic functionality for grouping inherited from IfcGroup is used to collect instances from IfcStructuralReaction or 
              its respective subclasses.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralResultGroup.TheoryType">
            <summary>
              Specifies the analysis theory used to obtain the respective results.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralResultGroup.ResultForLoadGroup">
            <summary>
              Reference to an instance of IfcStructuralLoadGroup for which this instance represents the result.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralResultGroup.IsLinear">
            <summary>
              This Boolean value allows to easily recognize if a linear analysis has been applied (allowing the superposition of analysis results), or vice versa.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralResultGroup.ResultGroupFor">
            <summary>
              Reference to an instance of IfcStructuralAnalysisModel for which this instance captures a result
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralSurfaceMember">
            <summary>
              Instances of the entity IfcStructuralSurfaceMember shall be used to describe planar structural elements. 
              The material properties are defined by IfcMechanicalMaterialProperties (and subtypes) and they are connected
              through IfcMaterial and IfcRelAssociatesMaterial and are accessible via the inherited inverse relationship HasAssociations.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralSurfaceMember.PredefinedType">
            <summary>
              Defines the load carrying behavior of the member, as far as it is taken into account in the analysis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralSurfaceMember.Thickness">
            <summary>
              Defines the typically understood thickness of the structural face member, i.e. the smallest spatial dimension of the element.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralSurfaceMemberVarying.VaryingThickness">
            <summary>
              Derived list of all varying thickness values by pushing the inherited starting thickness to the beginning of the list of SubsequentThickness.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcStructuralSurfaceTypeEnum">
            <summary>
              This type definition shall be used to distinguish between different types of structural surface members, 
              such as the typical mechanical function of walls, slabs and shells.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralElementsDomain.IfcFooting">
            <summary>
              The geometric representation of IfcFooting is given by the IfcProductDefinitionShape, allowing multiple geometric representations. Included are: 
              Local Placement
              The local placement for IfcFooting is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement, which is used in the ContainedInStructure inverse attribute, or to a spatial structure element at a higher level, referenced by that. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Standard Geometric Representation
              Provided that it is possible the standard geometric representation of IfcFooting is defined using the swept solid representation. The RepresentationType attribute of IfcShapeRepresentation should have the value 'SweptSolid'. The following constraints apply to the standard representation: 
              Solid: IfcExtrudedAreaSolid shall be supported 
              Profile: All applicable profile types shall be supported 
              Extrusion: All extrusion directions shall be supported. 
              If it is impossible to define the geometry using the swept solid representation the representations defined in its supertype IfcBuildingElement may be used.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcBuildingElement">
            <summary>
              Major functional part of a building, examples are foundation, floor, roof, wall.
            </summary>
            <remarks>
              Definition from ISO 6707-1:1989: Major functional part of a building, examples are foundation, floor, roof, wall.
              Definition from IAI: The building element comprises all elements that are primarily part of the construction of a building, i.e., its structural and space separating system. 
              EXAMPLEs of building elements are walls, beams, or doors, they are all physically existent and tangible things. 
              They are separated from other elements, since they are dealt with in separate AEC processes. The IfcBuildingElement utilizes the following capabilities mainly through inverse referenced to objectified relationships:
              Grouping - being part of a logical group of objects 
              Classification - assigned reference to an external classification 
              Documentation - assigned reference to an external documentation 
              Type - reference to the product type information for the element occurrence 
              Properties - reference to all attached properties, including quantities 
              Cost control - reference to cost elements associated with this building element 
              Work processes - reference to work tasks, in which this building element is used 
              Aggregation - aggregated together with other elements to form an aggregate 
              Connection - connectivity to other elements, including the definition of the joint 
              Ports - information, whether the building element has ports for system connections 
              Realization - information, whether the building element is used to realize a connection 
              Assignment to spatial structure - hierarchical assignment to the right level within the spatial structure 
              Material - assignment of material used by this building element 
              Boundary - provision of space boundaries through this building element 
              Opening - information, whether the building element includes openings 
              Projection - information, whether the building element has projections 
              Filling - information whether the building element is used to fill openings 
              HISTORY New entity in IFC Release 1.0 
              Quantity Use Definition:
              The quantities relating to the IfcBuildingElement are defined by the IfcElementQuantity and attached by the IfcRelDefinesByProperties. A detailed specification for individual quantities is introduced at the level of subtypes of IfcBuildingElement.
              Geometry Use Definitions
              The geometric representation of any IfcBuildingElement is given by the IfcProductDefinitionShape and IfcLocalPlacement allowing multiple geometric representations. 
              Local Placement
              The local placement for any IfcBuildingElement is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. Further constraints are defined at the level of its subtypes.
              Geometric Representations
              Bounding Box Representation
              Any IfcBuildingElement may be represented as a bounding box, which shows the maximum extend of the body within the coordinated system established by the IfcLocalPlacement. The bounding box representation is the simplest geometric representation available. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'BoundingBox' 
              The bounding box representation is given by an IfcShapeRepresentation, which includes a single item, an IfcBoundingBox.
             
              SurfaceModel Representation
              Any IfcBuildingElement (so far no further constraints are defined at the level of its subtypes) may be represented as a single or multiple surface models, based on either shell or face based models. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used: 
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'SurfaceModel' 
              In some cases it may be useful to also expose a simple representation as a bounding box representation of the same complex shape.
              The surface model representation is given by an IfcShapeRepresentation, which includes a single item, which is either: 
              IfcShellBasedSurfaceModel, or 
              IfcFaceBasedSurfaceModel. 
             
              Brep Representation
              Any IfcBuildingElement (so far no further constraints are defined at the level of its subtypes) may be represented as a single or multiple Boundary Representation elements (which are restricted to faceted Brep with or without voids). The Brep representation allows for the representation of complex element shape. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'Brep' 
              In some cases it may be useful to also expose a simple representation as a bounding box representation of the same complex shape.
              TheBrep representation is given by an IfcShapeRepresentation, which includes one or more items, all of type IfcManifoldSolidBrep. 
              MappedRepresentation
              Any IfcBuildingElement (so far no further constraints are defined at the level of its subtypes) may be represented using the MappedRepresentation. This shall be supported as it allows for reusing the geometry definition of a type at all occurrences of the same type. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'MappedRepresentation' 
              The same constraints, as given for the 'SurfaceModel' and the 'Brep' geometric representation, shall apply to the MappedRepresentation of the IfcRepresentationMap.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralElementsDomain.IfcFooting.PredefinedType">
            <summary>
              Predefined shape types for a stair that are specified in an Enum.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralElementsDomain.IfcPile.PredefinedType">
            <summary>
              Predefined shape types for a stair that are specified in an Enum.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralElementsDomain.IfcPile.ConstructionType">
            <summary>
              General designator for how the pile is constructed.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralElementsDomain.IfcReinforcementDefinitionProperties.DefinitionType">
            <summary>
              Descriptive type name applied to reinforcement definition properties.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralElementsDomain.IfcReinforcementDefinitionProperties.ReinforcementSectionDefinitions">
            <summary>
              The list of section reinforcement properties attached to the reinforcement definition properties.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralElementsDomain.IfcReinforcingElement">
            <summary>
              Bars, wires, strands, and other slender members embedded in concrete in such a manner that the reinforcement and the concrete act together in resisting forces.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralElementsDomain.IfcReinforcingElement.SteelGrade">
            <summary>
              The nominal steel grade defined according to local standards.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryCondition">
            <summary>
              The abstract entity IfcBoundaryCondition is the supertype of all boundary conditions that can be applied to structural connection definitions, 
              either directly for the connection (e.g. the joint) or for the relation between a structural member and the connection.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryEdgeCondition.RotationalStiffnessByLengthByLengthX">
            <summary>
              Linear stiffness value in x-direction of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryEdgeCondition.RotationalStiffnessByLengthByLengthY">
            <summary>
              Linear stiffness value in y-direction of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryEdgeCondition.RotationalStiffnessByLengthByLengthZ">
            <summary>
              Linear stiffness value in z-direction of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryEdgeCondition.RotationalStiffnessByLengthX">
            <summary>
              Rotational stiffness value about the x-axis of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryEdgeCondition.RotationalStiffnessByLengthY">
            <summary>
              Rotational stiffness value about the y-axis of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryEdgeCondition.RotationalStiffnessByLengthZ">
            <summary>
              Rotational stiffness value about the z-axis of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryFaceCondition.LinearStiffnessByAreaX">
            <summary>
              Linear stiffness value in x-direction of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryFaceCondition.LinearStiffnessByAreaY">
            <summary>
              Linear stiffness value in y-direction of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryFaceCondition.LinearStiffnessByAreaZ">
            <summary>
              Linear stiffness value in z-direction of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryNodeCondition">
            <summary>
              The entity IfcBoundaryNodeCondition describes boundary conditions that can be applied to structural point connections, 
              either directly for the connection (e.g. the joint) or for the relation between a structural member and the connection. 
              The following conventions to the values of the LinearStiffness[X,Y,Z] and RotationalStiffness[X,Y,Z] apply:
              value (-1.) represents an infinitive large value – or a fixed connectivity with infinitive stiffness 
              value zero (0.), represents no stiffness or a free connectivity 
              any other value represents a finitive stiffness or spring connectivity in that direction or rotation 
              value NIL ($) represents an unknown connectivity condition 
              NOTE: Instances of the entity IfcBoundaryNodeCondition are used e.g., to define the boundary condition for instances of 
              IfcStructuralPointConnection or IfcRelConnectsStructuralMember pointing to a structural node connection.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryNodeCondition.LinearStiffnessX">
            <summary>
              Linear stiffness value in x-direction of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryNodeCondition.LinearStiffnessY">
            <summary>
              Linear stiffness value in y-direction of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryNodeCondition.LinearStiffnessZ">
            <summary>
              Linear stiffness value in z-direction of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryNodeCondition.RotationalStiffnessX">
            <summary>
              Rotational stiffness value about the x-axis of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryNodeCondition.RotationalStiffnessY">
            <summary>
              Rotational stiffness value about the y-axis of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryNodeCondition.RotationalStiffnessZ">
            <summary>
              Rotational stiffness value about the z-axis of the coordinate system defined by the instance which uses this resource object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcBoundaryNodeConditionWarping.WarpingStiffness">
            <summary>
              The warping moment at the point load.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralConnectionCondition.Name">
            <summary>
              Optionally defines a name for this connection condition.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcFailureConnectionCondition.TensionFailureX">
            <summary>
              Tension force in x-direction leading to failure of the connection.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcFailureConnectionCondition.TensionFailureY">
            <summary>
              Tension force in y-direction leading to failure of the connection.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcFailureConnectionCondition.TensionFailureZ">
            <summary>
              Tension force in z-direction leading to failure of the connection.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcFailureConnectionCondition.CompressionFailureX">
            <summary>
              Compression force in x-direction leading to failure of the connection.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcFailureConnectionCondition.CompressionFailureY">
            <summary>
              Compression force in y-direction leading to failure of the connection.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcFailureConnectionCondition.CompressionFailureZ">
            <summary>
              Compression force in z-direction leading to failure of the connection.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcSlippageConnectionCondition.SlippageX">
            <summary>
              Slippage of that connection. Defines the maximum displacement in x-direction without any loading applied.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcSlippageConnectionCondition.SlippageY">
            <summary>
              Slippage of that connection. Defines the maximum displacement in y-direction without any loading applied.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcSlippageConnectionCondition.SlippageZ">
            <summary>
              Slippage of that connection. Defines the maximum displacement in z-direction without any loading applied.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadLinearForce.LinearForceX">
            <summary>
              LinearForce value in x-direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadLinearForce.LinearForceY">
            <summary>
              LinearForce value in y-direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadLinearForce.LinearForceZ">
            <summary>
              LinearForce value in z-direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadLinearForce.LinearMomentX">
            <summary>
              LinearMoment about the x-axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadLinearForce.LinearMomentY">
            <summary>
              LinearMoment about the y-axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadLinearForce.LinearMomentZ">
            <summary>
              LinearMoment about the z-axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadPlanarForce.PlanarForceX">
            <summary>
              Force value in x-direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadPlanarForce.PlanarForceY">
            <summary>
              Force value in y-direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadPlanarForce.PlanarForceZ">
            <summary>
              Force value in z-direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleDisplacement.DisplacementX">
            <summary>
              Displacement value in x-direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleDisplacement.DisplacementY">
            <summary>
              Displacement value in y-direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleDisplacement.DisplacementZ">
            <summary>
              Displacement value in z-direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleDisplacement.RotationalDisplacementRX">
            <summary>
              RotationalDisplacementR about the x-axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleDisplacement.RotationalDisplacementRY">
            <summary>
              RotationalDisplacementR about the y-axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleDisplacement.RotationalDisplacementRZ">
            <summary>
              RotationalDisplacementR about the z-axis.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleDisplacementDistortion">
            <summary>
              Instances of the entity IfcStructuralLoadSingleForceWarping, as a subtype of IfcStructuralLoadSingleForce, 
              shall be used to define an action opertion on a single point. In addition to forces and moments defined by its supertype 
              a warping moment can be defined. 
              All values are given within the chosen coordinate system of the 'activity element' (subtypes of IfcStructuralActivity), 
              either the local coordinate system of the activity element or the global project coordinate system which is referenced 
              by the activity element as its geometric representation context. The units of the displacement and rotation values are 
              given within the global unit assignment (IfcUnitAssignment).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleDisplacementDistortion.Distortion">
            <summary>
              The distortion curvature given to the displacement load.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleForce.ForceX">
            <summary>
              Force value in x-direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleForce.ForceY">
            <summary>
              Force value in y-direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleForce.ForceZ">
            <summary>
              Force value in z-direction.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleForce.MomentX">
            <summary>
              Moment about the x-axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleForce.MomentY">
            <summary>
              Moment about the y-axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleForce.MomentZ">
            <summary>
              Moment about the z-axis.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleForceWarping">
            <summary>
              Instances of the entity IfcStructuralLoadSingleForceWarping, as a subtype of IfcStructuralLoadSingleForce, 
              shall be used to define an action opertion on a single point. In addition to forces and moments defined by its supertype a warping moment can be defined. 
              All values are given within the chosen coordinate system of the 'activity element' (subtypes of IfcStructuralActivity), 
              either the local coordinate system of the activity element or the global project coordinate system which is referenced by the 
              activity element as its geometric representation context. The units of the force and moment values are 
              given within the global unit assignment (IfcUnitAssignment).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadSingleForceWarping.WarpingMoment">
            <summary>
              The warping moment at the point load.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadTemperature.DeltaT_Constant">
            <summary>
              Temperature change which is applied to the complete section of the structural member. A positive value describes an increase in temperature.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadTemperature.DeltaT_Y">
            <summary>
              Temperature change which is applied to the outer fiber of the positive Y-direction. A positive value describes an increase in temperature.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralLoadResource.IfcStructuralLoadTemperature.DeltaT_Z">
            <summary>
              Temperature change which is applied to the outer fiber of the positive Z-direction. A positive value describes an increase in temperature.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TimeSeriesResource.IfcTimeSeries.Name">
            <summary>
              A unique name for the time series.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TimeSeriesResource.IfcTimeSeries.Description">
            <summary>
              text description of the data that the series represents.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TimeSeriesResource.IfcTimeSeries.StartTime">
            <summary>
              The start time of a time series.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TimeSeriesResource.IfcTimeSeries.EndTime">
            <summary>
              The end time of a time series.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TimeSeriesResource.IfcTimeSeries.TimeSeriesDataType">
            <summary>
              The time series data type.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TimeSeriesResource.IfcTimeSeries.DataOrigin">
            <summary>
              The orgin of a time series data.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TimeSeriesResource.IfcTimeSeries.UserDefinedDataOrigin">
            <summary>
              Optional. Value of the data origin if DataOrigin attribute is USERDEFINED.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TimeSeriesResource.IfcTimeSeries.Unit">
            <summary>
              Optional. The unit to be assigned to all values within the time series. Note that mixing units is not allowed. If the value is not given, the global unit for the type of IfcValue, as defined at IfcProject.UnitsInContext is used.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.TimeSeriesResource.IfcTimeSeriesValue">
            <summary>
              A time series value is a list of values that comprise the time series. At least one value must be supplied. 
              Applications are expected to normalize values by applying the following three rules: 
              All time (universal, local, daylight savings, and solar) is normalized against the ISO 8601 standard GMT/UTC (Universal Coordinated Time). 
              Any rollover is handled by the application providing the data. Rollover occurs, for example, 
              when the measurement device resets itself while measuring and the recording data do not include the data measured before the reset. 
              The normalized data refer to the preceding time unit. 
              The time series example shown in the figure below contains four time points: Time "a" indicates the beginning of the time 
              series and the associated datum has no relevance. Data at time points "b," "c" and "d" are associated with values 1, 2 and 3, respectively.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TimeSeriesResource.IfcTimeSeriesValue.ListValues">
            <summary>
              A list of time-series values. At least one value is required.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcCurveStyle.CurveFont">
            <summary>
              A curve style font which is used to present a curve. It can either be a predefined curve font, or an explicitly defined curve font. 
              Both may be scaled. If not given, then the curve font should be taken from the layer assignment with style, 
              if that is not given either, then the default curve font applies.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcCurveStyle.CurveWidth">
            <summary>
              A positive length measure in units of the presentation area for the width of a presented curve. 
              If not given, then the style should be taken from the layer assignment with style, if that is not given either, then the default style applies.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcCurveStyle.CurveColour">
            <summary>
              The colour of the visible part of the curve. 
              If not given, then the colour should be taken from the layer assignment with style, if that is not given either, then the default colour applies.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcCurveStyleFontAndScaling.Name">
            <summary>
              Name that may be assigned with the scaling of a curve font.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcCurveStyleFontAndScaling.CurveFont">
            <summary>
              The curve font to be scaled.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcFillAreaStyleHatching.HatchLineAppearance">
            <summary>
              The curve style of the hatching lines. Any curve style pattern shall start at the origin of each hatch line.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcFillAreaStyleHatching.StartOfNextHatchLine">
            <summary>
              A repetition factor that determines the distance between adjacent hatch lines.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcFillAreaStyleHatching.PointOfReferenceHatchLine">
            <summary>
              A Cartesian point which defines the offset of the reference hatch line from the origin of the (virtual) hatching coordinate system. 
              The origin is used for mapping the fill area style hatching onto an annotation fill area or surface. 
              The reference hatch line would then appear with this offset from the fill style target point.
              If not given the reference hatch lines goes through the origin of the (virtual) hatching coordinate system.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcFillAreaStyleHatching.PatternStart">
            <summary>
              A distance along the reference hatch line which is the start point for the curve style font pattern of the reference hatch line.
              If not given, the start point of the curve style font pattern is at the (virtual) hatching coordinate system.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcFillAreaStyleHatching.HatchLineAngle">
            <summary>
              A plane angle measure determining the direction of the parallel hatching lines.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceSide">
            <summary>
              Denotion of whether negative, positive or both sides of a surface are being referenced.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceStyleLighting.DiffuseTransmissionColour">
            <summary>
              The degree of diffusion of the transmitted light. In the case of completely transparent materials there is no diffusion. 
              The greater the diffusing power, the smaller the direct component of the transmitted light, up to the point where only diffuse light is produced.
              A value of 1 means totally diffuse for that colour part of the light.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceStyleLighting.DiffuseReflectionColour">
            <summary>
              The degree of diffusion of the reflected light. In the case of specular surfaces there is no diffusion. 
              The greater the diffusing power of the reflecting surface, the smaller the specular component of the reflected light,
              up to the point where only diffuse light is produced. 
              A value of 1 means totally diffuse for that colour part of the light.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceStyleLighting.TransmissionColour">
            <summary>
              Describes how the light falling on a body is totally or partially transmitted.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceStyleLighting.ReflectanceColour">
            <summary>
              A coefficient that determines the extent that the light falling onto a surface is fully or partially reflected.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceStyleRefraction.RefractionIndex">
            <summary>
              The index of refraction for all wave lengths of light. 
              The refraction index is the ratio between the speed of light in a vacuum and the speed of light in the medium. 
              E.g. glass has a refraction index of 1.5, whereas water has an index of 1.33
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceStyleRefraction.DispersionFactor">
            <summary>
              The Abbe constant given as a fixed ratio between the refractive indices of the material at different wavelengths. 
              A low Abbe number means a high dispersive power. 
              In general this translates to a greater angular spread of the emergent spectrum.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceStyleShading.SurfaceColour">
            <summary>
              The colour used to render the surface. The surface colour for visualisation is defined by specifying the intensity of red, green and blue.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceStyleWithTextures.Textures">
            <summary>
              The textures applied to the surface. Only one image map with the same image map type shall be applied.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceTextureEnum.BUMP">
            <summary>
              Shows the amplitude of the microstructure of a surface. Example: the waves on a watersurface.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceTextureEnum.OPACITY">
            <summary>
              Shows where a transparent surface is less transparent.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceTextureEnum.REFLECTION">
            <summary>
              Shows the extent of reflection on a reflecting surface.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceTextureEnum.SELFILLUMINATION">
            <summary>
              Shows the map with self illumination, white parts have maximum illumination, black part none.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceTextureEnum.SHININESS">
            <summary>
              Shows where a surface is more or less 'shiny'.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceTextureEnum.SPECULAR">
            <summary>
              Shows the specular highlights are on a surface.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceTextureEnum.TEXTURE">
            <summary>
              Shows for each pixel an own color value.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.PresentationAppearanceResource.IfcSurfaceTextureEnum.TRANSPARENCYMAP">
            <summary>
              Shows where a transparent surface is more transparent. The opposite of opacity map.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDefinitionResource.IfcDefinedSymbol">
            <summary>
              A defined symbol is a symbolic representation that gets its shape information by an established convention, 
              either through a predefined symbol, or an externally defined symbol.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcDefinedSymbol.Definition">
            <summary>
              An implicit description of the symbol, either predefined or externally defined. 
              An exception is throw if the type is not PreDefinedSymbol or ExternallyDefinedSymbol
              Use ValidDefinition to check for correct type
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationDefinitionResource.IfcDefinedSymbol.Target">
            <summary>
              A description of the placement, orientation and (uniform or non-uniform) scaling of the defined symbol.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationDefinitionResource.IfcTextPath">
            <summary>
              The text path determines the direction of the text characters in respect to each other.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PresentationOrganizationResource.IfcPresentationLayerWithStyle">
            <summary>
              An IfcPresentationLayerAssignmentWithStyle extends the presentation layer assignment with capabilities to define visibility control, 
              access control and common style information.
              The visibility control allows to define a layer to be either 'on' or 'off', and/or 'frozen' or 'not frozen'. 
              The access control allows to block graphical entities from manipulations by setting a layer to be either 'blocked' or 'not blocked'. 
              Common style information can be given to the layer.
            
              NOTE  Style information assigned to layers is often restricted to 'layer colour', 'curve font', and/or 'curve width'. 
              These styles are assigned by using the IfcCurveStyle within the LayerStyles.
            
              NOTE: If a styled item is assigned to a layer using the IfcPresentationLayerAssignmentWithStyle, it inherits the style information from the layer. 
              In this case, it should omit its own style information. If the styled item has style information assigned 
              (e.g. by IfcCurveStyle, IfcFillAreaStyle, IfcTextStyle, IfcSurfaceStyle, IfcSymbolStyle),  
              then it overrides the style provided by the IfcPresentationLayerAssignmentWithStyle.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcPresentationLayerAssignment.Name">
            <summary>
              Name of the layer.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcPresentationLayerAssignment.Description">
            <summary>
              Optional. Additional description of the layer.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcPresentationLayerAssignment.AssignedItems">
            <summary>
              The set of layered items, which are assigned to this layer.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcPresentationLayerAssignment.Identifier">
            <summary>
              Optional. An (internal) identifier assigned to the layer.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcPresentationLayerWithStyle.LayerOn">
            <summary>
              A logical setting, TRUE indicates that the layer is set to 'On', FALSE that the layer is set to 'Off', UNKNOWN that such information is not available.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcPresentationLayerWithStyle.LayerFrozen">
            <summary>
              A logical setting, TRUE indicates that the layer is set to 'Frozen', FALSE that the layer is set to 'Not frozen', UNKNOWN that such information is not available.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcPresentationLayerWithStyle.LayerBlocked">
            <summary>
              A logical setting, TRUE indicates that the layer is set to 'Blocked', FALSE that the layer is set to 'Not blocked', UNKNOWN that such information is not available.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationOrganizationResource.IfcPresentationLayerWithStyle.LayerStyles">
            <summary>
              A logical setting, TRUE indicates that the layer is set to 'Blocked', FALSE that the layer is set to 'Not blocked', UNKNOWN that such information is not available.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PresentationResource.IfcDraughtingPreDefinedColour.Name">
            <summary>
              Valid names for draughting colours are "black","red","green","blue","yellow", "magenta","cyan","white","by layer"
            </summary>
            
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcStairFlight.NumberOfRiser">
            <summary>
              Number of the risers included in the stair flight.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcStairFlight.NumberOfTreads">
            <summary>
              Number of treads included in the stair flight.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcStairFlight.RiserHeight">
            <summary>
              Vertical distance from tread to tread. The riser height is supposed to be equal for all stairs in a stair flight.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcStairFlight.TreadLength">
            <summary>
              Horizontal distance from the front to the back of the tread. The tread length is supposed to be equal for all steps of the stair flight.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProfileResource.IfcProfileDef">
            <summary>
              The IfcProfileDef is the supertype of all definitions of standard and arbitrary profiles within IFC.
            </summary>
            <remarks>
              Definition from IAI: The IfcProfileDef is the supertype of all definitions of standard and arbitrary profiles within IFC. It is used to define a standard set of commonly used profiles by their parameters or by their explicit curve geometry. Those profile definitions are used within the geometry and geometric model resource to create either swept surfaces, swept area solids, or sectioned spines. 
              The purpose of the profile definition within the swept surfaces or swept area solids is to define a uniform cross section being swept:
              along a line (extrusion) using IfcSurfaceOfLinearExtrusion or IfcExtrudedAreaSolid 
              along a circular arc (revolution) using IfcSurfaceOfRevolution or IfcRevolvedAreaSolid 
              along a directrix lying on a reference surface using IfcSurfaceCurveSweptAreaSolid 
              The purpose fo the profile definition within the sectioned spine is to define a varying cross sections at several positions along a spine curve. The subtype IfcDerivedProfileDef is particularly suited to provide the consecutive profiles to be based on transformations of the start profile and thus maintaining the identity of vertices and edges. 
              NOTE: Subtypes of the IfcProfileDef contain parameterized profiles (as subtypes of IfcParameterizedProfileDef) which establish their own 2D position coordinate system, profiles given by explicit curve geometry (either open or closed profiles) and two special types for composite profiles and derived profiles, based on a 2D Cartesian transformation. 
              Parameterized profiles are 2D primitives, which are used within the industry to describe cross sections by a description of its parameters. 
              Arbitrary profiles are cross sections defined by an outer boundary as bounded curve, which may also include holes, defined by inner boundaries. 
              Derived profiles, based on a transformation of a parent profile, are also part of the profile definitions available. 
              In addition composite profiles can be defined, which include two or more profile definitions to define the resulting profile. 
              An IfcProfileDef is treated as bounded area if it is used within swept area solids. In this case, the inside of the profile is part of the profile. The attribute ProfileType is set to AREA. An IfcProfileDef is treated as a curve if it is used within swept surfaces. In this case, the inside of the profile (if the curve is closed) is not part of the profile. The attribute ProfileType is set to CURVE. The optional attribute ProfileName can be used to designate a standard profile type as e.g. given in profile tables for steel profiles.
              HISTORY: New class in IFC Release 1.5, the capabilities have been extended in IFC Release 2x. Profiles can now support swept surfaces and swept area solids with inner boundaries. It had been renamed from IfcAttDrivenProfileDef.
              Illustration:
              Position 
              The IfcProfileDef is defined within the underlying coordinate system taht is defined by the swept surface or swept area solid that uses the profile definition. It is the xy plane of either: 
              IfcSweptSurface.Position 
              IfcSweptAreaSolid.Position 
              or in case of sectioned spines the xy plane of each list member of IfcSectionedSpine.CrossSectionPositions 
              Note: The parameterized profile definition defines a 2D position coordinate system, relative to the underlying coordinate system of the IfcProfileDef.
             
              Sweeping
              In the later use of the IfcProfileDef within the swept surface or swept area solid,  e.g. the IfcExtrudedAreaSolid (here used as an example), the profile boundaries (here based on the 2D position coordinate system of IfcParameterizedProfileDef) are placed within the xy plane of the 3D position coordinate system of the swept surface or swept area solid. 
              The profile is inserted into the underlying coordinate system either:
              directly in case of using IfcArbitraryClosedProfileDef and IfcArbitraryOpenProfileDef, 
              through an intermediate position coordinate system in case of using IfcParameterizedProfileDef. 
              through an 2D Cartesian transformation operator (applied directly to the curve position when using arbitrary profile definitions, or applied to the position coordinate system when using parameterized profile definitions) in case of using IfcDerivedProfileDef. 
              when using IfcCompositeProfileDef the insertion depends on the subtype of the included sub-profiles.
             
              Table: Use of parameterized profiles within the swept area solid 
              Use cases: 
              Results of the different usage of the ProfileType attribute are demonstrated here. The ProfileType defines whether the inside (the bounded area) is part of the profile definition (Area) or not (Curve). 
              ProfileType = AREA 
              ProfileType = CURVE  
              Table: Resulting area or curve depending on ProfileType
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcProfileDef.ProfileType">
            <summary>
              Defines the type of geometry into which this profile definition shall be resolved, either a curve or a surface area. In case of curve the profile should be referenced by a swept surface, in case of area the profile should be referenced by a swept area solid.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcProfileDef.ProfileName">
            <summary>
              Optional. Name of the profile type according to some standard profile table.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProfileResource.IfcParameterizedProfileDef">
            <summary>
              The parameterized profile definition defines a 2D position coordinate system to which the parameters of the different profiles relate to.
            </summary>
            <remarks>
              Definition from IAI: The parameterized profile definition defines a 2D position coordinate system to which the parameters of the different profiles relate to. All profiles are defined centric to the origin of the position coordinate system, or more specific, the origin [0.,0.] shall be in the center of the bounding box gravity of the profile.
              The Position attribute of the IfcParameterizedProfileDef is used to position the profile within the XY plane of the underlying coordinate system of the swept surface geometry, the swept area solid or the sectioned spine. It can be used to position the profile at any cardinal point that becomes the origin [0.,0.,0.] of the extruded or rotated surface or solid.
              HISTORY  New entity in Release IFC2x Edition 2.
              IFC2x Platform CHANGE  The IfcParameterizedProfileDef is introduced as an intermediate new abstract entity that unifies the definition and usage of the position coordinate system for all parameterized profiles. The Position attribute has been removed at all subtypes (like IfcRectangleProfileDef, IfcCircleProfileDef, etc.).
              IFC2x Edition 3 CHANGE  All profile origins are now in the center of the bounding box.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcParameterizedProfileDef.Position">
            <summary>
              Position coordinate system of the parameterized profile definition.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCircleProfileDef.Radius">
            <summary>
              Position coordinate system of the parameterized profile definition.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCompositeProfileDef.Profiles">
            <summary>
              The profiles which are used to define the composite profile.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailAShapeProfileDef.OverallHeight">
            <summary>
              Total extent of the height, defined parallel to the y axis of the position coordinate system. See illustration above (= h1).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailAShapeProfileDef.BaseWidth2">
            <summary>
              Total extent of the width of the base, defined parallel to the x axis of the position coordinate system. See illustration above (= b2).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailAShapeProfileDef.Radius">
            <summary>
              Edge radius according the above illustration (= r1).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailAShapeProfileDef.HeadWidth">
            <summary>
              Total extent of the width of the head, defined parallel to the x axis of the position coordinate system. See illustration above (= b1).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailAShapeProfileDef.HeadDepth2">
            <summary>
              Head depth of the A shape crane rail, see illustration above (= h2).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailAShapeProfileDef.HeadDepth3">
            <summary>
              Head depth of the A shape crane rail, see illustration above (= h3).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailAShapeProfileDef.WebThickness">
            <summary>
              Thickness of the web of the A shape crane rail. See illustration above (= b3).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailAShapeProfileDef.BaseWidth4">
            <summary>
              Width of the base where thickness changes, defined parallel to the x axis of the position coordinate system. See illustration above (= b4).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailAShapeProfileDef.BaseDepth1">
            <summary>
              Base depth of the A shape crane rail, see illustration above (= s1).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailAShapeProfileDef.BaseDepth2">
            <summary>
              Base depth of the A shape crane rail, see illustration above (= s2).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailAShapeProfileDef.BaseDepth3">
            <summary>
              Depth of the base where thickness changes, see illustration above (= s3).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailAShapeProfileDef.CentreOfGravityInY">
            <summary>
              Location of centre of gravity along the y axis measured from the center of the bounding box.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailFShapeProfileDef.OverallHeight">
            <summary>
              Total extent of the height, defined parallel to the y axis of the position coordinate system. See illustration above (= h1).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailFShapeProfileDef.HeadWidth">
            <summary>
              Total extent of the width of the head, defined parallel to the x axis of the position coordinate system. See illustration above (= b1).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailFShapeProfileDef.Radius">
            <summary>
              Edge radius according the above illustration (= r1).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailFShapeProfileDef.HeadDepth2">
            <summary>
              Head depth of the A shape crane rail, see illustration above (= h2).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailFShapeProfileDef.HeadDepth3">
            <summary>
              Head depth of the A shape crane rail, see illustration above (= h3).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailFShapeProfileDef.WebThickness">
            <summary>
              Thickness of the web of the A shape crane rail. See illustration above (= b3).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailFShapeProfileDef.BaseDepth1">
            <summary>
              Base depth of the A shape crane rail, see illustration above (= s1).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailFShapeProfileDef.BaseDepth2">
            <summary>
              Base depth of the A shape crane rail, see illustration above (= s2).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcCraneRailFShapeProfileDef.CentreOfGravityInY">
            <summary>
              Location of centre of gravity along the y axis measured from the center of the bounding box.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcDerivedProfileDef.ParentProfile">
            <summary>
              The parent profile provides the origin of the transformation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcDerivedProfileDef.Operator">
            <summary>
              Transformation operator applied to the parent profile.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcLShapeProfileDef.Depth">
            <summary>
              Leg length, see illustration above (= h).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcLShapeProfileDef.Width">
            <summary>
              Leg length, see illustration above (= b). If not given, the value of the Depth attribute is applied to Width.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcLShapeProfileDef.Thickness">
            <summary>
              Constant wall thickness of profile, see illustration above (= ts).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcLShapeProfileDef.FilletRadius">
            <summary>
              Fillet radius according the above illustration (= r1). If it is not given, zero is assumed.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcLShapeProfileDef.EdgeRadius">
            <summary>
              Edge radius according the above illustration (= r2). If it is not given, zero is assumed.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcLShapeProfileDef.LegSlope">
            <summary>
              Slope of leg of the profile. If it is not given, zero is assumed.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcLShapeProfileDef.CentreOfGravityInX">
            <summary>
              Location of centre of gravity along the x axis measured from the center of the bounding box.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcLShapeProfileDef.CentreOfGravityInY">
            <summary>
              Location of centre of gravity along the Y axis measured from the center of the bounding box.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCompositeCurveSegment.Transition">
            <summary>
              The state of transition (i.e., geometric continuity from the last point of this segment to the first point of the next segment) in a composite curve.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCompositeCurveSegment.SameSense">
            <summary>
              An indicator of whether or not the sense of the segment agrees with, or opposes, that of the parent curve. If SameSense is false, the point with highest parameter value is taken as the first point of the segment.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCompositeCurveSegment.ParentCurve">
            <summary>
              The bounded curve which defines the geometry of the segment.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCompositeCurveSegment.Dim">
            <summary>
              Derived. The space dimensionality of this class, defined by the dimensionality of the first ParentCurve.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCompositeCurveSegment.UsingCurves">
            <summary>
              Inverse.   The set of composite curves which use this composite curve segment as a segment. This set shall not be empty.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcElementarySurface">
            <summary>
              An elementary surface (IfcElementarySurface) is a simple analytic surface with defined parametric representation.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: An elementary surface (IfcElementarySurface) is a simple analytic surface with defined parametric representation. 
              NOTE Corresponding STEP entity: elementary_surface. Only the subtype plane is incorporated as IfcPlane. The derived attribute Dim has been added (see also note at IfcGeometricRepresentationItem). Please refer to ISO/IS 10303-42:1994, p. 69 for the final definition of the formal standard. 
              HISTORY New class in IFC Release 1.5
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcElementarySurface.Position">
            <summary>
              The position and orientation of the surface. This attribute is used in the definition of the parameterization of the surface.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcElementarySurface.Dim">
            <summary>
              The space dimensionality of this class, derived from the dimensionality of the Position.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcPlane">
            <summary>
              A plane is an unbounded surface with a constant normal.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A plane is an unbounded surface with a constant normal. A plane is defined by a point on the plane and the normal direction to the plane. The data is to be interpreted as follows: 
              C = SELF\IfcElementarySurface.Position.Location
              x = SELF\IfcElementarySurface.Position.P[1]
              y = SELF\IfcElementarySurface.Position.P[2]
              z = SELF\IfcElementarySurface.Position.P[3] =&gt; normal to planeand the surface is parameterized as: 
              where the parametric range is -∞ lt u,v lt ∞ .
              In the above parameterization the length unit for the unit vectors x and y is derived from the context of the plane. 
              NOTE Corresponding STEP entity: plane. Please refer to ISO/IS 10303-42:1994, p.69 for the final definition of the formal standard. 
              HISTORY New class in IFC Release 1.5
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcPolyline.Points">
            <summary>
              The points defining the polyline. Use only for Ifc compatibility
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcPolyline.Dim">
            <summary>
              The dimensionality of all points must be the same and is equal to the forst point
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcSurfaceOfLinearExtrusion">
            <summary>
              This surface is a simple swept surface or a generalised cylinder obtained by sweeping a curve in a given direction.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: This surface is a simple swept surface or a generalised cylinder obtained by sweeping a curve in a given direction. The parameterisation is as follows where the curve has a parameterisation l(u):
              V = ExtrusionAxis
              The parameterisation range for v is -¥ lt v lt ¥ and for u it is defined by the curve parameterisation.
              NOTE: Corresponding STEP entity: surface_of_linear_extrusion. Please refer to ISO/IS 10303-42:1994, p.76 for the final definition of the formal standard. The following adaption has been made. The ExtrusionAxis and the Direction are defined as two separate attributes in correlation to the definition of the extruded_area_solid, and not as a single vector attribute. The vector is derived as ExtrusionAxis.
              HISTORY: New entity in IFC Release 2x.
              Informal propositions:
              The surface shall not self-intersect
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcSweptSurface.SweptCurve">
            <summary>
              The curve to be swept in defining the surface. The curve is defined as a profile within the position coordinate system.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcSweptSurface.Position">
            <summary>
              Position coordinate system for the placement of the profile within the xy plane of the axis placement.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcSweptSurface.Dim">
            <summary>
              Derived.  The space dimensionality of this class, derived from the dimensionality of the Position.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcSurfaceOfLinearExtrusion.ExtrudedDirection">
            <summary>
              The direction of the extrusion.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcSurfaceOfLinearExtrusion.Depth">
            <summary>
              The depth of the extrusion, it determines the parameterisation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcSurfaceOfLinearExtrusion.ExtrusionAxis">
            <summary>
              Derived. The extrusion axis defined as vector.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcSurfaceOfRevolution">
            <summary>
              A surface of revolution (IfcSurfaceOfRevolution) is the surface obtained by rotating a curve one complete revolution about an axis.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A surface of revolution (IfcSurfaceOfRevolution) is the surface obtained by rotating a curve one complete revolution about an axis. The data shall be interpreted as below. 
              The parameterisation is as follows where the curve has a parameterisation l(u):
              C = AxisPosition.Location
              V = AxisPosition.Z
              In order to produce a single-value surface the a complete revolution, the curve shall be such that when expressed in a cylindrical coordinate system the curve shall be such that when expressed in a cylindrical coordinate system (r,φ ,z) centred at C with an axis V no two distinct parametric points on the curve shall have the same values for (r, z). 
              For a surface of revolution the parametric range is 0 lt u lt 360 degree. The parameterisation range for v is defined by referenced curve.
              NOTE: Corresponding STEP entity: surface_of_revolution. Please refer to ISO/IS 10303-42:1994, p.76 for the final definition of the formal standard. 
              HISTORY: New entity in IFC Release 2x.
              Informal propositions:
              The surface shall not self-intersect 
              The swept curve shall not be coincident with the axis line for any finite part of its legth.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcSurfaceOfRevolution.AxisPosition">
            <summary>
              A point on the axis of revolution and the direction of the axis of revolution.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcSurfaceOfRevolution.AxisLine">
            <summary>
              Derived. The line coinciding with the axis of revolution.
            </summary>
            <remarks>
              IfcLine :=  IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcCurve() || IfcLine(AxisPosition.Location, 
              IfcRepresentationItem() || IfcGeometricRepresentationItem () || IfcVector(AxisPosition.Z,1.0));
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcAnnotation">
            <summary>
              An annotation is a graphical representation within the geometric (and spatial) context of a project, that adds a note or meaning to the objects which constitutes the project model.
            </summary>
            <remarks>
              Definition from IAI: An annotation is a graphical representation within the geometric (and spatial) context of a project, that adds a note or meaning to the objects which constitutes the project model. Annotations include additional line drawings, text, dimensioning, hatching and other forms of graphical notes.
              If available, the annotation should be related to the spatial context of the project, by containing the annotation within the appropriate level of the building structure (site, building, storey, or space). This is handled by the IfcRelContainedInSpatialStructure relationship.
              HISTORY: New entity in Release IFC2x Edition 2. 
              Geometry Use Definitions
              The geometric representation of any IfcAnnotation is given by the IfcProductDefinitionShape and IfcLocalPlacement allowing multiple geometric representations. 
              Local Placement
              The local placement for any IfcAnnotation is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement, which is used in the ContainedInStructure inverse attribute, or to a spatial structure element at a higher level, referenced by that. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Styled Representations
              The standard representation of IfcAnnotation is defined using the styled item representation by IfcStyledRepresentation that holds the style information assigned to the geometric representation items together with the geometric representation items.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcAnnotation.ContainedInStructure">
            <summary>
              Inverse. Relationship to a spatial structure element, to which the associate is primarily associated.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcAssemblyPlaceEnum">
            <summary>
              Enumeration defining where the assembly is intended to take place, either in a factory or on the building site.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcBuildingElementProxyType">
            <summary>
              The IfcBuildingElementProxyType defines a list of commonly shared property set definitions of a building element proxy and an optional set of product representations.
            </summary>
            <remarks>
              Definition from IAI: The IfcBuildingElementProxyType defines a list of commonly shared property set definitions of a building element proxy and an optional set of product representations. It is used to define an element specification (i.e. the specific product information, that is common to all occurrences of that product type).
              NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.
              A building element proxy type is used to define the common properties of a certain type of a building element proxy that may be applied to many instances of that type to assign a specific style. Building element proxy types may be exchanged without being already assigned to occurrences.
              The occurrences of the IfcBuildingElementProxyType are represented by instances of IfcBuildingElementProxy.
              HISTORY  New entity in Release IFC2x Edition 3.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcBuildingElementProxyType.PredefinedType">
            <summary>
              Predefined types to define the particular type of an building element proxy. There may be property set definitions available for each predefined or user defined type.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcBuildingElementProxyTypeEnum">
            <summary>
              This enumeration defines the available generic types for IfcBuildingElementProxyType.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcBuildingStorey">
            <summary>
              The building storey has an elevation and typically represents a (nearly) horizontal aggregation of spaces that are vertically bound.
            </summary>
            <remarks>
              Definition from IAI: The building storey has an elevation and typically represents a (nearly) horizontal aggregation of spaces that are vertically bound. 
              A storey is (if specified) associated to a building. A storey may span over several connected storeys. Therefore storey complex provides for a collection of storeys included in a building. A storey can also be decomposed in (horizontical) parts, where each part defines a partial storey. This is defined by the composition type attribute of the supertype IfcSpatialStructureElements which is interpreted as follow:
              COMPLEX = building storey complex 
              ELEMENT = building storey 
              PARTIAL = partial building storey 
              EXAMPLE: In split level houses, a storey is splitted into two or more partial storeys, each with a different elevation. It can be handled by defining a storey, which includes two or more partial storeys with the individual elevations.
              HISTORY New entity in IFC Release 1.0 
              Property Set Use Definition
              The property sets relating to the IfcBuildingStorey are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcBuildingStorey are part of this IFC release:
              Pset_BuildingStoreyCommon: common property set for all types of building stories 
              Quantity Use Definition
              The quantities relating to the building storey are defined by the IfcElementQuantity and attached by the IfcRelDefinesByProperties. The following quantities are foreseen, but will be subjected to the local standard of measurement:
              Name Description Value Type 
              TotalHeight Calculated height of this storey, from the bottom surface of the floor, to the bottom surface of the floor or roof above.  IfcQuantityLength  
              GrossFloorArea Calculated sum of all areas covered by the building storey (as horizontal projections and normally including the area of construction elements). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              NetFloorArea Calculated sum of all usable areas covered by the building storey (normally excluding the area of construction elements). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea  
              GrossVolume Calculated gross volume of all areas enclosed by the building storey (normally including the area of construction elements). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              NetVolume Calculated net volume of all areas enclosed by the building storey (normally excluding the area of construction elements). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              Spatial Structure Use Definition
              The IfcBuildingStorey is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical). The spatial structure elements are linked together by using the objectified relationship IfcRelAggregates. The IfcBuildingStoreyreferences them by its inverse relationships:
              IfcBuildingStorey.Decomposes -- referencing (IfcBuilding || IfcBuildingStorey) by IfcRelAggregates.RelatingObject, If it refers to another instance of IfcBuildingStorey, the referenced IfcBuildingStorey needs to have a different and higher CompositionType, i.e. COMPLEX (if the other IfcBuildingStorey has ELEMENT), or ELEMENT (if the other IfcBuildingStorey has PARTIAL). 
              IfcBuildingStorey.IsDecomposedBy -- referencing (IfcBuildingStorey || IfcSpace) by IfcRelAggregates.RelatedObjects. If it refers to another instance of IfcBuildingStorey, the referenced IfcBuildingStorey needs to have a different and lower CompositionType, i.e. ELEMENT (if the other IfcBuildingStorey has COMPLEX), or PARTIAL (if the other IfcBuildingStorey has ELEMENT). 
              If there are building elements and/or other elements directly related to the IfcBuildingStorey (like most building elements, such as walls, columns, etc.), they are associated with the IfcBuildingStorey by using the objectified relationship IfcRelContainedInSpatialStructure. The IfcBuildingStorey references them by its inverse relationship:
              IfcBuildingStorey.ContainsElements -- referencing any subtype of IfcProduct (with the exception of other spatial structure element) by IfcRelContainedInSpatialStructure.RelatedElements. 
              Geometry Use Definitions
              The geometric representation of IfcBuildingStorey is given by the IfcProductDefinitionShape and IfcLocalPlacement, allowing multiple geometric representation. 
              Local Placement
              The local placement for IfcBuildingStorey is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if relative placement is used) to the IfcSpatialStructureElement of type "IfcBuilding", or of type "IfcBuildingStorey" (e.g. to position a building storey relative to a building storey complex, or a partial building storey to a building storey). 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Geometric Representations
              Currently, the use of a 2D 'FootPrint' representation of type 'GeometricCurveSet' and a 3D 'Body' representation of type 'Brep' is supported.
              Foot Print Representation 
              The foot print representation of IfcBuildingStorey is given by either a single 2D curve (such as IfcPolyline or IfcCompositeCurve), or by a list of 2D curves (in case of inner boundaries), if the building storey has an independent geometric representation.
              The representation identifier and type of this geometric representation of IfcBuildingStorey is:
              IfcShapeRepresentation.RepresentationIdentifier = 'FootPrint' 
              IfcShapeRepresentation.RepresentationType = 'GeometricCurveSet' 
              Body Representation 
              The body (or solid model) geometric representation (if the building storey has an independent geometric representation) of IfcBuildingStorey is defined using faceted B-Rep capabilities (with or without voids), based on the IfcFacetedBrep or on the IfcFacetedBrepWithVoids. 
              The representation identifier and type of this representation of IfcBuildingStorey is:
              IfcShapeRepresentation.RepresentationIdentifier = 'Body' 
              IfcShapeRepresentation.RepresentationType = 'Brep' 
              Since the building storey shape is usually described by the exterior building elements, an independent shape representation shall only be given, if the building storey is exposed independently from its constituting elements.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcSpatialStructureElement">
            <summary>
              A spatial structure element (IfcSpatialStructureElement) is the generalization of all spatial elements that might be used to define a spatial structure.
            </summary>
            <remarks>
              Definition from IAI: A spatial structure element (IfcSpatialStructureElement) is the generalization of all spatial elements that might be used to define a spatial structure. That spatial structure is often used to provide a project structure to organize a building project.
              A spatial project structure might define as many levels of decomposition as necessary for the building project. Elements within the spatial project structure are:
              site as IfcSite 
              building as IfcBuilding 
              storey as IfcBuildingStorey 
              space as IfcSpace 
              or aggregations or parts thereof. The composition type declares an element to be either an element itself, or an aggregation (complex) or a decomposition (part). The interpretation of these types is given at each subtype of IfcSpatialStructureElement.
              The IfcRelAggregates is defined as an 1-to-many relationship and used to establish the relationship between exactly two levels within the spatial project structure. Finally the highest level of the spatial structure is assigned to IfcProject using the IfcRelAggregates.
              Informal proposition:
              The spatial project structure, established by the IfcRelAggregates, shall be acyclic. 
              A site should not be (directly or indirectly) associated to a building, storey or space. 
              A building should not be (directly or indirectly) associated to a storey or space. 
              A storey should not be (directly or indirectly) associated to a space. 
              HISTORY New entity in IFC Release 2x.
              Spatial Structure Use Definition
             
              The figure shows the use of IfcRelAggregates to establish a spatial structure including site, building, building section and storey. More information is provided at the level of the subtypes. 
              EXPRESS specification
              Formal Propositions:
              WR41   :   All spatial structure elements shall be associated (using the IfcRelAggregates relationship) with another spatial structure element, or with IfcProject.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSpatialStructureElement.LongName">
            <summary>
              Optional. Long name for a spatial structure element, used for informal purposes. Maybe used in conjunction with the inherited Name attribute.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSpatialStructureElement.CompositionType">
            <summary>
              Denotes, whether the predefined spatial structure element represents itself, or an aggregate (complex) or a part (part). The interpretation is given separately for each subtype of spatial structure element.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSpatialStructureElement.ReferencesElements">
            <summary>
              Set of spatial reference relationships, that holds those elements, which are referenced, but not contained, within this element of the project spatial structure.
            </summary>
            <remarks>
              NOTE  The spatial reference relationship, established by IfcRelReferencedInSpatialStructure, is not required to be an hierarchical relationship, i.e. each element can be assigned to 0, 1 or many spatial structure elements.
              EXAMPLE  A curtain wall maybe contained in the ground floor, but maybe referenced in all floors, it reaches.
              IFC2x Edition 3 CHANGE  The inverse attribute has been added with upward compatibility for file based exchange.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSpatialStructureElement.ServicedBySystems">
            <summary>
              Set of relationships to Systems, that provides a certain service to the Building. The relationship is handled by the objectified relationship IfcRelServicesBuildings.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSpatialStructureElement.ContainsElements">
            <summary>
              Set of spatial containment relationships, that holds those elements, which are contained within this element of the project spatial structure.
            </summary>
            <remarks>
              NOTE  The spatial containment relationship, established by IfcRelContainedInSpatialStructure, is required to be an hierarchical relationship, i.e. each element can only be assigned to 0 or 1 spatial structure element.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSpatialStructureElement.SpatialStructuralElementParent">
            <summary>
              returns the parent spatial structural element that this element decomposes
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSpatialStructureElement.SpatialStructuralElementChildren">
            <summary>
              returns a list of spatial structural elements which decompose this spatial object
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcBuildingStorey.Elevation">
            <summary>
              Optional.    Elevation of the base of this storey, relative to the 0,00 internal reference height of the building. The 0.00 level is given by the absolute above sea level height by the ElevationOfRefHeight attribute given at IfcBuilding.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcCoveringType">
            <summary>
              The element type (IfcCoveringType) defines a list of commonly shared property set definitions of an element and an optional set of product representations.
            </summary>
            <remarks>
              Definition from IAI: The element type (IfcCoveringType) defines a list of commonly shared property set definitions of an element and an optional set of product representations. It is used to define an element specification (i.e. the specific product information, that is common to all occurrences of that product type).
              NOTE: The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.
              A covering type is used to define the common properties of a certain type of a covering that may be applied to many instances of that type to assign a specific style. Covering types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.
              The occurrences of the IfcCoveringType are represented by instances of IfcCovering (or its subtypes).
              HISTORY: New entity in Release IFC2x Edition 2.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcCoveringType.PredefinedType">
            <summary>
              Predefined types to define the particular type of the covering. There may be property set definitions available for each predefined type.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcElementQuantity">
            <summary>
              An element quantity (IfcElementQuantity) defines a set of derived measures of an element's physical property.
            </summary>
            <remarks>
              Definition from IAI: An element quantity (IfcElementQuantity) defines a set of derived measures of an element's physical property. Elements could be spatial structure elements (like buildings, storeys, or spaces) or elements (like building elements or opening elements). It gets assigned to the element by using the IfcRelDefinesByProperties relationship.
              The MethodOfMeasurement attribute defines the building code, which had been used to calculate the element quantity. The interpretation of the attribute value has to be agreed upon.
              NOTE The recognizable values for the name and the method of measurement attributes have to be agreed upon in further agreement documents, such as implementers agreements. Some of these agreements might be limited to a certain region, to which the method of measurement applies.
              The name attribute, given at the individual Quantities provides a recognizable semantic meaning of the element quantity. Both information is needed to establish a precise meaning for the measure value. An optional description may be assigned to each of the Quantities. All quantities assigned by asingle instance of IfcElementQuantity are deemed to have be generated according to the same method of measurement. However several instances of IfcElementQuantity are assignable to an element, thus allowing for an element having quatities generated according to several methods of measurements.
              EXAMPLE 1: To exchange the net floor area of spaces in the German region (as IfcSpace), the name might be 'HNF1' (area of main function type 1), and the method of measurement might be accordingly 'DIN277' (German industry norm no. 277)
              EXAMPLE 2: The same instance of IfcSpace may have a different area measure assigned in the German region according to a housing regulation, the name would be 'Wohnfläche' and the method of measurement would be '2.BV'. It would be attached to the IfcSpace by a separate IfcRelDefinesByProperties relationship.
              The IfcElementQuantity can have the following subtypes of IfcPhysicalQuantity within its SET Quantities, which count for the basis measure types used:
              count measure 
              weight measure 
              length measure 
              area measure 
              volume measure 
              time measure 
              HISTORY New entity in IFC Release 2.x. NOTE: It replaces the calcXxx attributes used in previous IFC Releases.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcFeatureElementAddition">
            <summary>
              A specialization of the general feature element, that represents an existence dependent element which modifies the shape and appearance of the associated master element.
            </summary>
            <remarks>
              Definition from IAI: A specialization of the general feature element, that represents an existence dependent element which modifies the shape and appearance of the associated master element. The IfcFeatureElementAddition offers the ability to handle shape modifiers as semantic objects within the IFC object model that add to the shape of the master element. 
              HISTORY: New entity in Release IFC2x Edition 2.
              NOTE: The entity is introduced as an upward compatible extension of the IFC2x platform. It is an intermediate abstract supertype without defining its own explicit attributes. 
              The IfcFeatureElementAddition is associated to its master element by virtue of the objectified relationship IfcRelProjectsElement. This relationship implies a Boolean 'union' operation between the shape of the master element and the shape of the addition feature.
              Geometry Use Definitions
              The geometric representation of IfcFeatureElementAddition is given by the IfcProductDefinitionShape, allowing multiple geometric representations. 
              Local Placement
              The local placement for IfcFeatureElementAddition is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is refeRenced by all geometric representations. The local placement is always defined in relation to the local placement of the element to which the feature element is added: 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcElement, which is used in the HasAdditionFeature.RelatingElement inverse attribute. 
              Shape Representation
              The geometry use definitions for the shape representation of the IfcFeatureElementAddition is given at the level of its subtypes.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcFeatureElementAddition.ProjectsElements">
            <summary>
              Inverse. Reference to the IfcRelProjectsElement relationship that uses this IfcFeatureElementAddition to create a volume addition at an element. The IfcFeatureElementAddition can only be used to create a single addition at a single element using Boolean addition operation.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcGrid">
            <summary>
              A planar design grid (IfcGrid) defined in 3D space used as an aid in locating structural and design elements.
            </summary>
            <remarks>
              Definition from IAI: A planar design grid (IfcGrid) defined in 3D space used as an aid in locating structural and design elements. The position of the grid (ObjectPlacement) is defined by a 3D coordinate system (and thereby the design grid can be used in plan, section or in any position relative to the world coordinate system). The position can be relative to the object placement of other products or grids. The XY plane of the 3D coordinate system is used to place the grid axes, which are 2D curves (e.g., line, circle, trimmed curve, polyline, or composite curve).
              The inherited attributes Name and Description can be used to define a descriptive name of the grid and to indicate the grid's purpose. A grid is defined by (normally) two, or (in case of a triangular grid) three lists of grid axes. The following table shows some examples.
               
              rectangular grid radial grid triangular grid 
              The grid axes, defined within the design grid, are those elements to which project objects will be placed relatively using the IfcGridPlacement.
              HISTORY New entity in IFC Release 1.0.
              Informal Proposition
              Grid axes, which are referenced in different lists of axes (UAxes, VAxes, WAxes) shall not be parallel. 
              Grid axes should be defined such as there are no two grid axes which intersect twice. 
              Informal Proposition #2 
              left side: ambiguous intersections A1 and A2, a grid containing such grid axes is not a valid design grid. 
              right side: the conflict can be resolved by splitting one grid axis in a way, such as no ambiguous intersections exist. 
             
              Geometry Use Definitions
              The geometric representation of IfcGrid is given by the IfcProductDefinitionShape, allowing geometric curve set geometric representation. Included are:
              Local Placement
              The local placement for IfcGrid is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement, which is used in the ContainedInStructure inverse attribute, or to a spatial structure element at a higher level, referenced by that. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Geometric Representations
              Currently, the use of a 2D 'FootPrint' representation of type 'Curve2D' or 'GeometricCurveSet' and a 3D 'Body' representation of type 'SweptSolid, 'Clipping' and 'Brep' is supported.
              Standard Representation using geometric curve set representation
              The 2D geometric representation of IfcGrid is defined using the 'GeometricCurveSet' geometry. The following attribute values should be inserted
              IfcShapeRepresentation.RepresentationIdentifier = 'GridAxes'. 
              IfcShapeRepresentation.RepresentationType = 'GeometricCurveSet' . 
              The following constraints apply to the 2D representation: 
              The IfcGeometricCurveSet shall be an Item of the IfcShapeRepresentation. It should contain a set of subtypes of IfcCurve, each representing a grid axis. Applicable subtypes of IfcCurve are: IfcPolyline, IfcCircle, IfcTrimmedCurve (based on BaseCurve referencing IfcLine or IfcCircle).  
              Each subtype of IfcCurve may have a curve style assigned, using IfcAnnotationCurveOccurrence referencing IfcCurveStyle. 
              Optionally the grid axis labels may be added as IfcTextLiteral, and they may have text styles assigned, using IfcAnnotationTextOccurrence referencing IfcTextStyle. 
              Illustration
              The IfcGrid defines a placement coordinate system using the ObjectPlacement. The XY plane of the coordinate system is used to place the 2D grid axes. The Representation of IfcGrid is defined using IfcProductRepresentation, referencing an IfcShapeRepresentation, that includes IfcGeometricCurveSet as Items. All grid axes are added as IfcPolyline to the IfcGeometricCurveSet.
              The attributes UAxes and VAxes define lists of IfcGridAxis within the context of the grid. Each instance of IfcGridAxis refer to the same instance of IfcPolyline within the IfcGeometricCurveSet (above) that represents the IfcGridAxis.
             
              EXPRESS specification:
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcGrid.UAxes">
            <summary>
              List of grid axes defining the first row of grid lines.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcGrid.VAxes">
            <summary>
              List of grid axes defining the second row of grid lines.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcGrid.WAxes">
            <summary>
              Optional. List of grid axes defining the third row of grid lines. It may be given in the case of a triangular grid.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcGrid.ContainedInStructure">
            <summary>
              Inverse. Relationship to a spatial structure element, to which the grid is primarily associated.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcOpeningElement">
            <summary>
              The opening element stands for opening, recess or chase, all reflecting voids.
            </summary>
            <remarks>
              Definition from IAI: The opening element stands for opening, recess or chase, all reflecting voids. It represents a void within any element that has physical manifestation. Openings must be handled by all sectors and disciplines in AEC/FM industry, therefore the interoperability for opening elements is provided at this high level. 
              There are two different types of opening elements:
              an opening, where the thickness of the opening is greater or equal to the thickness of the element; 
              a recess or niche, where the thickness of the recess is smaller than the thickness of the element. 
              The inherited attribute ObjectType should be used to capture the differences, 
              the attribute is set to 'Opening' for an opening or 
              the attribute is set to 'Recess' for a recess or niche. 
              If the value for ObjectType is omitted, opening is assumed. 
              An IfcOpeningElement has to be inserted into a building element (all subtypes of IfcBuildingElement) by using the IfcRelVoidsElement relationship. It is also directly linked to the spatial structure of the project (and here normally to the IfcBuildingStorey) by using the IfcRelContainedInSpatialStructure relationship.
              HISTORY New entity in IFC Release 1.0
              IFC2x PLATFORM CHANGE: The intermediate ABSTRACT supertypes IfcFeatureElement and IfcFeatureSubtraction have been added between IfcElement and IfcOpeningElement with upward compatibility. 
              Property Set Use Definition:
              The property sets relating to the IfcOpeningElement are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcOpeningElement are part of this IFC release:
              Pset_OpeningElementCommon: common property set for all opening occurrences 
              Quantity Use Definition:
              The quantities relating to the IfcOpeningElement are defined by the IfcElementQuantity and attached by the IfcRelDefinesByProperties. The following quantities are foreseen, but will be subjected to the local standard of measurement:
              Name Description Value Type 
              OpeningArea Area of the opening as viewed by an elevation view (for wall openings) or as viewed by a ground floor view (for floor openings). The exact definition and calculation rules depend on the method of measurement used. IfcAreaQuantity  
              Geometry Use Definitions
              The geometric representation of IfcOpeningElement is given by the IfcProductDefinitionShape and IfcLocalPlacement allowing multiple geometric representations. 
              Local Placement
              The local placement for IfcOpeningElement is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement should point to the local placement of the same element, which is voided by the opening, i.e. referred to by VoidsElement.RelatingBuildingElement. 
              Geometric Representation
              Currently, the use of 'SweptSolid', 'Brep', and 'MappedRepresentation' representation is supported.
              Swept Solid Representation, Horizontal Extrusion
              The standard geometric representation of IfcOpeningElement is defined using the swept area solid geometry. The attribute RepresentationType of IfcShapeRepresentation should have the value 'SweptSolid'. The following additional constraints apply to the swept solid representation:
              Solid: IfcExtrudedAreaSolid is required. 
              Profile: IfcRectangleProfileDef, IfcCircleProfileDef and IfcArbitraryClosedProfileDef shall be supported. 
              Extrusion: The profile shall be extruded horizontally (i.e. perpendicular to the extrusion direction of the voided element), e.g. for wall openings, or vertically (i.e. in the extrusion direction of the voided element), e.g., for floor openings. 
              Special agreement for defining openings in round building elements, e.g., in round walls. The opening width, in case of a rectangular opening equal with the IfcRectangleProfileDef.XDim, is defined as the straight line distance between two parallel jambs. If the jambs are defined radial (to the center of the arc used to define the round wall) then the opening width is defined to be the outer arc length.
              NOTE: In case of non-parallel jambs, the geometry expression is not an extruded area solid, it has to be represented using other types of representations.
              EXAMPLE for openings
              The following interpretation of dimension parameter applies for rectangular openings: 
              IfcRectangleProfileDef.YDim interpreted as opening width 
              IfcRectangleProfileDef.XDim interpreted as opening height 
              NOTE: Rectangles are now defined centric, the placement location has to be set:
              IfcCartesianPoint(XDim/2,YDim/2) 
             
              EXAMPLE for recesses
              The following interpretation of dimension parameter applies for rectangular recess: 
              IfcRectangleProfileDef.YDim interpreted as recess width 
              IfcRectangleProfileDef.XDim interpreted as recess height 
              IfcExtrudedAreaSolid.Depth is interpreted as recess depth 
              NOTE: Rectangles are now defined centric, the placement location has to be set:
              IfcCartesianPoint(XDim/2,YDim/2) 
              NOTE: The local placement directions for the IfcOpeningRecess are only given as an example, other directions are valid as well.
             
              NOTE  In case of recesses also profiles of type IfcArbitraryProfileDefWithVoid shall be supported as a 'SweptSolid' representation.
              Swept Solid Representation, Vertical Extrusion
              The advanced geometric representation of IfcOpeningElement is defined using the swept area solid geometry, however the extrusion direction may be vertical, i.e. in case of a wall opening, the extrusion would be in the direction of the wall height. The attribute RepresentationType of IfcShapeRepresentation should have the value 'SweptSolid'. The following additional constraints apply to the swept solid representation:
              Solid: IfcExtrudedAreaSolid is required. 
              Profile: IfcRectangleProfileDef, IfcCircleProfileDef and IfcArbitraryClosedProfileDef shall be supported. 
              Extrusion: The profile shall be extruded vertically, i.e. for wall openings along the extrusion direction of the voided element. 
              Vertical extrusions shall be used when an opening or recess has a non rectangular foot print geometry that does not change along the height of the opening or recess. 
              Brep Representation
              The general b-rep geometric representation of IfcOpeningElement is defined using the Brep geometry. The Brep representation allows for the representation of complex element shape. It is ensured by assigning the value 'Brep' to the RepresentationType attribute of IfcShapeRepresentation The RepresentationIdentifier of IfcShapeRepresentation should then have the value 'Body'.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcOpeningElement.HasFillings">
            <summary>
              Inverse. Reference to the Filling Relationship that is used to assign Elements as Fillings for this Opening Element. The Opening Element can be filled with zero-to-many Elements.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcProjectionElement">
            <summary>
              The IfcProjectionElement is a specialization of the general feature element to represent projections applied to building elements.
            </summary>
            <remarks>
              Definition from IAI: The IfcProjectionElement is a specialization of the general feature element to represent projections applied to building elements. It represents a solid attached to any element that has physical manifestation. Projections must be handled by all sectors and disciplines in AEC/FM industry, therefore the interoperability for opening elements is provided at this high level. 
              EXAMPLE: A wall projection such as a pilaster strip is handled by IfcProjectionElement
              An IfcProjectionElement has to be inserted into a building element (all subtypes of IfcBuildingElement) by using the IfcRelProjectsElement relationship. It is also directly linked to the spatial structure of the project (and here normally to the IfcBuildingStorey) by using the IfcRelContainedInSpatialStructure relationship.
              HISTORY New entity in Release IFC2x Edition 2. 
              Geometry Use Definitions:
              The geometric representation of IfcProjectionElement is given by the IfcProductDefinitionShape and IfcLocalPlacement allowing multiple geometric representations. 
              Local Placement
              The local placement for IfcOpeningRecess is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement should point to the local placement of the same element, which is voided by the opening, i.e. referred to by ProjectsElement.RelatingBuildingElement. 
              Swept Solid Representation
              The geometric representation of IfcProjectionElement is defined using the swept area solid geometry. The attribute RepresentationType of IfcShapeRepresentation should have the value 'SweptSolid'. The RepresentationIdentifier of IfcShapeRepresentation should then have the value 'Body'. The following additional constraints apply to the swept solid representation:
              Solid: IfcExtrudedAreaSolid is required. 
              Profile: IfcRectangleProfileDef, IfcCircleProfileDef and IfcArbitraryClosedProfileDef shall be supported. 
              Extrusion: The profile shall be extruded horizontally (i.e. perpendicular to the extrusion direction of the modified element), e.g. for wall projections, or vertically (i.e. in the extrusion direction of the projected element), e.g., for floor projections. 
              EXAMPLE
              The following interpretation of dimension parameter applies for rectangular projection: 
              IfcRectangleProfileDef.YDim interpreted as projection width 
              IfcRectangleProfileDef.XDim interpreted as projection height 
              IfcExtrudedAreaSolid.Depth is interpreted as projection depth 
              NOTE: Rectangles are now defined centric, the placement location has to be set:
              IfcCartesianPoint(XDim/2,YDim/2) 
              NOTE: The local placement directions for the IfcProjectionElement are only given as an example, other directions are valid as well.
             
              Brep Representation
              The general b-rep geometric representation of IfcProjectionElement is defined using the Brep geometry. The Brep representation allows for the representation of complex element shape. It is ensured by assigning the value 'Brep' to the RepresentationType attribute of IfcShapeRepresentation The RepresentationIdentifier of IfcShapeRepresentation should then have the value 'Body'. 
              EXPRESS specification:
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcRelAssociatesMaterial">
            <summary>
              Objectified relationship between a material definition and elements or element types to which this material definition applies.
            </summary>
            <remarks>
              Definition from IAI: Objectified relationship between a material definition and elements or element types to which this material definition applies. The material definition can be:
              A single material 
              A material list, e.g. for composite elements 
              A material layer set, for layered elements with an indication of the layering direction and individual layer thicknesses 
              The IfcRelAssociatesMaterial relationship is a special type of the IfcRelAssociates relationship. It can be applied to subtypes of IfcElement and subtypes of IfcElementType.
              The IfcElement has an inverse relation to its material definition by the HasAssociations attribute, inherited from IfcObject. 
              The IfcElementType has an inverse relation to its material definition by the HasAssociations attribute, inherited from IfcPropertyDefinition. 
              If there are several different material assignments to a single element (e.g. to give different materials to parts of the element) the inherited Name attribute may provide additional information about the element part to which the material applies. If both, the element occurrence (by an instance of IfcElement) and the element type (by an instance of IfcElementType, connected through IfcRelDefinesByType) have an associated material, then the material associated to the element occurrence overrides the material associated to the element type.
              HISTORY New entity in IFC Release 2.x.
              Formal Propositions:
              WR21   :   The material information must not be associated to a substraction feature (such as an opening) or to a virtual element.  
              WR22   :   The material information, using IfcMaterialSelect should be associated to a product occurrence.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelAssociatesMaterial.RelatingMaterial">
            <summary>
              Material definition (either a single material, a list of materials, or a set of material layers) assigned to the elements.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcRelConnectsElements">
            <summary>
              This objectified relationship (IfcRelConnectsElements) provides the generalization of the connectivity between elements.
            </summary>
            <remarks>
              Definition from IAI: This objectified relationship (IfcRelConnectsElements) provides the generalization of the connectivity between elements. It is a 1 to 1 relationship. The concept of two elements being physically or logically connected is described independently from the connecting elements. Currently the connectivity is related to geometric entities on which the connection of the underlying basic geometry of the connecting elements occurs. 
              The geometrical constraints of the connection are provided by the optional relationship to the IfcConnectionGeometry. If it is omitted then the connection is provided as a logical connection. Under this circumstance, the connection point, curve or surface has to be recalculated by the receiving application. 
              HISTORY New entity in IFC Release 1.0.
              Formal Propositions:
              WR31   :   The instance of the relating element shall not be the same instance as the related element.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelConnectsElements.ConnectionGeometry">
            <summary>
              Optional. Relationship to the control class, that provides the geometrical constraints of the connection.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelConnectsElements.RelatingElement">
            <summary>
              Reference to an Element that is connected by the objectified relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelConnectsElements.RelatedElement">
            <summary>
              Reference to an Element that is connected by the objectified relationship.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcRelConnectsPorts">
            <summary>
              An IfcRelConnectsPorts defines the relationship that is made between two ports at their point of connection. It may include the connection geometry between two ports.
            </summary>
            <remarks>
              Definition from IAI: An IfcRelConnectsPorts defines the relationship that is made between two ports at their point of connection. It may include the connection geometry between two ports.
              IfcRelConnectsPorts is required as the means to define how instances of IfcPort connect together. Each of the port is being attached to the IfcElement by using the IfcRelConnectsPortToElement relationship. Since each element is now considered to have ports for the purpose of connection, it is necessary to achieve the actual connection by the defined approach.
              HISTORY: New entity in IFC 2.0, modified in IFC2x.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelConnectsPorts.RelatingPort">
            <summary>
              Reference to the first port that is connected by the objectified relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelConnectsPorts.RelatedPort">
            <summary>
              Reference to the second port that is connected by the objectified relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelConnectsPorts.RealizingElement">
            <summary>
              Optional. Defines the element that realizes a port connection relationship.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcRelConnectsPortToElement">
            <summary>
              An IfcRelConnectsPortToElement defines the relationship that is made between one port to the IfcElement in which it is contained.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelConnectsPortToElement.RelatingPort">
            <summary>
              Reference to an Port that is connected by the objectified relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelConnectsPortToElement.RelatedElement">
            <summary>
              Reference to an Element that is connected by the objectified relationship.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcRelConnectsWithRealizingElements">
            <summary>
              IfcRelConnectsWithRealizingElements defines a generic relationship that is made between two elements that require the realization of that relationship by means of further realizing elements.
            </summary>
            <remarks>
              Definition from IAI: IfcRelConnectsWithRealizingElements defines a generic relationship that is made between two elements that require the realization of that relationship by means of further realizing elements.
              An IfcRelConnectsWithRealizingElements is a specialization of IfcRelConnectsElement where the connecting operation has the additional attribute of (one or many) realizing elements that may be used to realize or further qualify the relationship. It is defined as a ternary relationship. 
              EXAMPLE: It may be used to describe the attachment of one element to another where the attachment is realized by a 'fixing' element such as a bracket. It may also be used to describe the mounting of one element onto another such as the requirement for the mounting major plant items onto builders work bases and/or anti-vibration isolators.
              HISTORY: New entity in Release IFC2x Edition 2.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelConnectsWithRealizingElements.RealizingElements">
            <summary>
              Defines the elements that realize a connection relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelConnectsWithRealizingElements.ConnectionType">
            <summary>
              The type of the connection given for informal purposes, it may include labels, like 'joint', 'rigid joint', 'flexible joint', etc.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcRelCoversBldgElements">
            <summary>
              Objectified relationship between an element and one to many coverings, which do cover the building element.
            </summary>
            <remarks>
              Definition from IAI: Objectified relationship between an element and one to many coverings, which do cover the building element. 
              HISTORY New Entity in IFC Release 1.5 
              IFC2x PLATFORM CHANGE: The data type of the attributeRelatingElement has been changed from IfcBuildingElement to its supertype IfcElement with upward compatibility for file based exchange. 
              EXPRESS specification:
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelCoversBldgElements.RelatingBuildingElement">
            <summary>
              Relationship to the element that is covered.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelCoversBldgElements.RelatedCoverings">
            <summary>
              Relationship to the set of coverings at this element.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcRelFillsElement">
            <summary>
              Objectified relationship between an opening element and an building element that fills (or partially fills) the opening element.
            </summary>
            <remarks>
              Definition from IAI: Objectified relationship between an opening element and an building element that fills (or partially fills) the opening element.
              EXAMPLE  The insertion of a window into a wall is represented by two separate relationships. First the window opening is created within the wall by IfcWall(StandardCase) o-- IfcRelVoidsElement --o IfcOpeningElement, then the window is inserted within the opening by IfcOpeningElement o-- IfcRelFillsElement --o IfcWindow. 
              HISTORY New entity in IFC Release 1.0
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelFillsElement.RelatingOpeningElement">
            <summary>
              Opening Element being filled by virtue of this relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelFillsElement.RelatedBuildingElement">
            <summary>
              Reference to element that occupies fully or partially the associated opening.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcRelProjectsElement">
            <summary>
              The IfcRelProjectsElement is an objectified relationship between an building element and one projection element that creates a modifier to the shape of the element.
            </summary>
            <remarks>
              Definition from IAI: The IfcRelProjectsElement is an objectified relationship between an building element and one projection element that creates a modifier to the shape of the element. This relationship implies a Boolean operation of addition for the geometric bodies of the building element and the projection element.
              The relationship is defined to be a 1:1 relationship, if a building element has more than one projection, several relationship objects have to be used, each pointing to a different projection element.
              HISTORY New entity in Release IFC2x Edition 2.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelProjectsElement.RelatingElement">
            <summary>
              Element at which a projection is created by the associated IfcProjectionElement.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelProjectsElement.RelatedFeatureElement">
            <summary>
              Reference to the IfcFeatureElementAddition that defines an addition to the volume of the element, by using a Boolean addition operation. An example is a projection at the associated element.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcRelVoidsElement">
            <summary>
              Objectified Relationship between an building element and one opening element that creates a void in the element.
            </summary>
            <remarks>
              Definition from IAI: Objectified Relationship between an building element and one opening element that creates a void in the element. This relationship implies a Boolean Operation of subtraction for the geometric bodies of Element and Opening Element. 
              HISTORY New entity in IFC Release 1.0
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelVoidsElement.RelatingBuildingElement">
            <summary>
              Reference to element in which a void is created by associated feature subtraction element.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelVoidsElement.RelatedOpeningElement">
             <summary>
               Reference to the feature subtraction element which defines a void in the associated element.
             </summary>
            
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcSpaceType">
            <summary>
              The element type (IfcSpaceType) defines a list of commonly shared property set definitions of a space and an optional set of product representations.
            </summary>
            <remarks>
              Definition from IAI: The element type (IfcSpaceType) defines a list of commonly shared property set definitions of a space and an optional set of product representations. It is used to define an space specification (i.e. the specific space information, that is common to all occurrences of that space type).
              NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.
              A space type is used to define the common properties of a certain type of space that may be applied to many instances of that type to assign a specific style. Space types may be exchanged without being already assigned to occurrences.
              NOTE  The space types are often used to represent space catalogues, less so for sharing a common representation map. Space types in a space catalogue share same space classification and a common set of space requirement properties.
              The occurrences of IfcSpaceType are represented by instances of IfcSpace.
              HISTORY  New entity in Release IFC2x Edition 3.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcSpatialStructureElementType">
            <summary>
              The element type (IfcSpatialStructureElementType) defines a list of commonly shared property set definitions of a spatial structure element and an optional set of product representations.
            </summary>
            <remarks>
              Definition from IAI: The element type (IfcSpatialStructureElementType) defines a list of commonly shared property set definitions of a spatial structure element and an optional set of product representations. It is used to define an element specification (i.e. the specific element information, that is common to all occurrences of that element type).
              NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.
              A spatial structure element type is used to define the common properties of a certain type of a spatial structure element that may be applied to many instances of that type to assign a specific style. Spatial structure element types (i.e. the instantiable subtypes) may be exchanged without being already assigned to occurrences.
              NOTE  The spatial structure element types are often used to represent catalogues of predefined spatial types for shared attributes, less so for sharing a common representation map.
              The occurrences of subtypes of the abstract IfcSpatialStructureElementType are represented by instances of subtypes of IfcSpatialStructureElement.
              HISTORY  New entity in Release IFC2x Edition 3.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcSpaceTypeEnum">
            <summary>
              This enumeration defines the available generic types for IfcSpaceType.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcRectangleHollowProfileDef.WallThickness">
            <summary>
              Radius of the material.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcRectangleHollowProfileDef.InnerFilletRadius">
            <summary>
              Radius of the circular arcs, by which all four corners of the outer contour of rectangle are equally rounded. 
              If not given, zero (= no rounding arcs) applies.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcRectangleHollowProfileDef.OuterFilletRadius">
            <summary>
              Radius of the circular arcs, by which all four corners of the outer contour of rectangle are equally rounded. 
              If not given, zero (= no rounding arcs) applies.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcTrapeziumProfileDef.BottomXDim">
            <summary>
              The extent of the bottom line measured along the implicit x-axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcTrapeziumProfileDef.TopXDim">
            <summary>
              The extent of the top line measured along the implicit x-axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcTrapeziumProfileDef.YDim">
            <summary>
              The extent of the distance between the parallel bottom and top lines measured along the implicit y-axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProfileResource.IfcTrapeziumProfileDef.TopXOffset">
            <summary>
              Offset from the beginning of the top line to the bottom line, measured along the implicit x-axis.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.QuantityResource.IfcPhysicalComplexQuantity">
            <summary>
              The complex physical quantity, IfcPhysicalComplexQuantity, is an entity that holds a set of single quantity measure value (as defined at the subtypes of IfcPhysicalSimpleQuantity), that all apply to a given component or aspect of the element.
            </summary>
            <remarks>
              Definition from IAI: The complex physical quantity, IfcPhysicalComplexQuantity, is an entity that holds a set of single quantity measure value (as defined at the subtypes of IfcPhysicalSimpleQuantity), that all apply to a given component or aspect of the element.
              EXAMPLE: A layered element, like a wall, may have several material layers, each having individual quantities, like footprint area, side area and volume. An instance of IfcPhysicalComplexQuantity would group these individual quantities (given by a subtype of IfcPhysicalSimpleQuantity) and name them according to the material layer name by using the Name attribute. The Discrimination attribute would then be 'layer'.
              A section "Quantity Use Definition" at individual entities as subtypes of IfcBuildingElement gives guidance to the usage of the Name and Discrimination attribute to characterize the complex quantities.
              HISTORY New entity in IFC Release 2x2 Addendum 1. 
              IFC2x2 ADDENDUM 1 CHANGE The entity IfcPhysicalComplexQuantity has been added. Upward compatibility for file based exchange is guaranteed.
              Formal Propositions:
              WR21   :   The IfcPhysicalComplexQuantity should not reference itself within the list of HasQuantities.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.QuantityResource.IfcPhysicalQuantity">
            <summary>
              The physical quantity, IfcPhysicalQuantity, is an abstract entity that holds a complex or simple quantity measure together with a semantic definition of the usage for the single or several measure value.
            </summary>
            <remarks>
              Definition from IAI: The physical quantity, IfcPhysicalQuantity, is an abstract entity that holds a complex or simple quantity measure together with a semantic definition of the usage for the single or several measure value.
              The Name attribute defines the actual usage or kind of measure. The interpretation of the name label has to be established within the actual exchange context. In addition an informative text may be associated to each quantity by the Description attribute.
              HISTORY New entity in IFC Release 2.x. It replaces the calcXxx attributes used in previous IFC Releases.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.QuantityResource.IfcPhysicalQuantity.Name">
            <summary>
              Optional. Name of the element quantity or measure. The name attribute has to be made recognizable by further agreements.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.QuantityResource.IfcPhysicalQuantity.Description">
            <summary>
              Optional. Further explanation that might be given to the quantity.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.QuantityResource.IfcPhysicalQuantity.PartOfComplex">
            <summary>
              Inverse. Reference to a physical complex quantity in which the physical quantity may be contained.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.QuantityResource.IfcPhysicalComplexQuantity.HasQuantities">
            <summary>
              Set of physical quantities that are grouped by this complex physical quantity according to a given discrimination.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.QuantityResource.IfcPhysicalComplexQuantity.Discrimination">
            <summary>
              Identification of the dicrimination by which this physical complex property is distinguished. Examples of discriminations are 'layer', 'steel bar diameter', etc.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.QuantityResource.IfcPhysicalComplexQuantity.Quality">
            <summary>
              Optional. Additional indication of a quality of the quantities that are grouped under this physical complex quantity.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.QuantityResource.IfcPhysicalComplexQuantity.Usage">
            <summary>
              Optional. Additional indication of a usage type of the quantities that are grouped under this physical complex quantity.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.QuantityResource.IfcPhysicalSimpleQuantity">
            <summary>
              The physical quantity, IfcPhysicalSimpleQuantity, is an entity that holds a single quantity measure value (as defined at the subtypes of IfcPhysicalSimpleQuantity) together with a semantic definition of the usage for the measure value.
            </summary>
            <remarks>
              Definition from IAI: The physical quantity, IfcPhysicalSimpleQuantity, is an entity that holds a single quantity measure value (as defined at the subtypes of IfcPhysicalSimpleQuantity) together with a semantic definition of the usage for the measure value.
              EXAMPLE: An element, like a wall, may have several area measures, like footprint area, left wall face area, right wall face area. These areas would be given by three instances of the area quantity subtype, with different Name string values.
              A section "Quantity Use Definition" at individual entities as subtypes of IfcBuildingElement gives guidance to the usage of the Name attribute to characterize the individual quantities. If the Unit attribute is given, the value attribute (introduced at the level of subtypes of IfcPhysicalSimpleQuantity) are given as quantities of this unit, otherwise the global unit definitions (given by IfcUnitAssignment) are used.
              HISTORY New entity in IFC Release 2x2 Addendum 1. 
              IFC2x2 ADDENDUM 1 CHANGE The abstract entity IfcPhysicalSimpleQuantity has been added. Upward compatibility for file based exchange is guaranteed.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.QuantityResource.IfcPhysicalSimpleQuantity.Unit">
            <summary>
              Optional assignment of a unit. If no unit is given, then the global unit assignment, as established at the IfcProject, applies to the quantity measures.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.QuantityResource.IfcQuantityArea">
            <summary>
              physical quantity, IfcQuantityArea, that defines a derived area measure to provide an element's physical property.
            </summary>
            <remarks>
              Definition from IAI: A physical quantity, IfcQuantityArea, that defines a derived area measure to provide an element's physical property. It is normally derived from the physical properties of the element under the specific measure rules given by a method of measurement.
              EXAMPLE: An opening may have an opening area used to deduct it from the wall surface area. The actual size of the area depends on the method of measurement used.
              HISTORY New entity in IFC Release 2.x. It replaces the calcXxx attributes used in previous IFC Releases.
              Formal Propositions:
              WR21   :   If a unit is given, the unit type shall be area unit.  
              WR22   :   A valid area quantity shall be greater than or equal to zero.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.QuantityResource.IfcQuantityCount">
            <summary>
              An physical quantity, IfcQuantityCount, that defines a derived count measure to provide an element's physical property.
            </summary>
            <remarks>
              Definition from IAI: An physical quantity, IfcQuantityCount, that defines a derived count measure to provide an element's physical property. It is normally derived from the physical properties of the element under the specific measure rules given by a method of measurement.
              EXAMPLE: An radiator may be measured according to its number of coils. The actual counting method depends on the method of measurement used.
              HISTORY New entity in IFC Release 2.x . It replaces the calcXxx attributes used in previous IFC Releases
              Formal Propositions:
              WR21   :   The value of the count shall be greater than or equal to zero.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.QuantityResource.IfcQuantityLength">
            <summary>
              A physical quantity, IfcQuantityLength, that defines a derived length measure to provide an element's physical property.
            </summary>
            <remarks>
              Definition from IAI: A physical quantity, IfcQuantityLength, that defines a derived length measure to provide an element's physical property. It is normally derived from the physical properties of the element under the specific measure rules given by a method of measurement.
              EXAMPLE: A rafter within a roof construction may be measured according to its length (taking a common cross section into account). The actual size of the length depends on the method of measurement used.
              HISTORY New entity in IFC Release 2.x . It replaces the calcXxx attributes used in previous IFC Releases.
              Formal Propositions:
              WR21   :   If a unit is given, the unit type shall be a lenght unit.  
              WR22   :   A valid length quantity shall be greater than or equal to zero.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.QuantityResource.IfcQuantityTime">
            <summary>
              An element quantity that defines a time measure to provide an property of time related to an element.
            </summary>
            <remarks>
              Definition from IAI: An element quantity that defines a time measure to provide an property of time related to an element. It is normally given by the recipe information of the element under the specific measure rules given by a method of measurement.
              EXAMPLE: The amount of time needed to pour concrete for a wall is given as a time quantity for the labour part of the recipe information.
              HISTORY New entity in Release IFC 2x Edition 2
              Formal Propositions:
              WR21   :   If a unit is given, the unit type shall be time unit.  
              WR22   :   A valid weight quantity shall be greater than or equal to zero.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.QuantityResource.IfcQuantityVolume">
            <summary>
              A physical quantity that defines a derived volume measure to provide an element's physical property.
            </summary>
            <remarks>
              Definition from IAI: A physical quantity that defines a derived volume measure to provide an element's physical property. It is normally derived from the physical properties of the element under the specific measure rules given by a method of measurement.
              EXAMPLE: A thick brick wall may be measured according to its volume. The actual size of the volume depends on the method of measurement used.
              HISTORY New entity in IFC Release 2.x. It replaces the calcXxx attributes used in previous IFC Releases.
              EXPRESS specification:
              Formal Propositions:
              WR21   :   If a unit is given, the unit type shall be volume unit.  
              WR22   :   A valid volume quantity shall be greater than or equal to zero.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.QuantityResource.IfcQuantityVolume.VolumeValue">
            <summary>
              Volume measure value of this quantity.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.QuantityResource.IfcQuantityWeight">
            <summary>
              A physical element quantity that defines a derived weight measure to provide an element's physical property.
            </summary>
            <remarks>
              Definition from IAI: A physical element quantity that defines a derived weight measure to provide an element's physical property. It is normally derived from the physical properties of the element under the specific measure rules given by a method of measurement.
              EXAMPLE: The amount of reinforcement used within a building element may be measured according to its weight. The actual size of the weight depends on the method of measurement used.
              HISTORY New entity in IFC Release 2.x. It replaces the calcXxx attributes used in previous IFC Releases.
              Formal Propositions:
              WR21   :   If a unit is given, the unit type shall be mass unit. NOTE: There is no distinction between the concept of "Mass" and "Weight" in the current IFC Release.  
              WR22   :   A valid weight quantity shall be greater than or equal to zero.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcBeam">
            <summary>
              Structural member designed to carry loads between or beyond points of support, usually narrow in relation to its length and horizontal or nearly so.
            </summary>
            <remarks>
              Definition from ISO 6707-1:1989: Structural member designed to carry loads between or beyond points of support, usually narrow in relation to its length and horizontal or nearly so.
              Definition from IAI: An IfcBeam is a horizontal, or nearly horizontal, structural member. It represents such a member from an architectural point of view. It is not required to be load bearing.
              NOTE  For any longitudial structural member, not constrained to be predominately horizontal nor vertical, or where this semantic information is irrelevant, the entity IfcMember exists.
              A particular usage type for the IfcBeam can be given (if type information is available) by refering to the type object IfcBeamType, using the IfcRelDefinesByType relationship, or (if only occurrence information is given) by using the ObjectType attribute. Recommended values are 'beam' (the default), 'joist', 'lintel', 't-beam'.
              HISTORY New entity in IFC Release 1.0 
              Type Use Definition
              IfcBeam defines the occuurence of any beam, common information about beam types (or styles) is handled by IfcBeamType. The IfcBeamType (if present) may establish the common type name, usage (or predefined) type, common set of properties and common shape representations (using IfcRepresentationMap). The IfcBeamType is attached using the IfcRelDefinedByType.RelatingType objectified relationship and is accessible by the inverse IsDefinedBy attribute.
              Property Set Use Definition
              The property sets relating to the IfcBeam are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcBeam are part of this IFC release:
              Pset_BeamCommon: common property set for all beam occurrences 
              Material Use Definition
              The material of the IfcBeam is defined by the IfcMaterial or IfcMaterialList and attached by the IfcRelAssociatesMaterial.RelatingMaterial. It is accessible by the inverse HasAssociations relationship. Material information can also be given at the IfcBeamType, defining the common attribute data for all occurrences of the same type. It is then accessible by the inverse IsDefinedBy relationship pointing toIfcBeamType.HasAssociations and via IfcRelAssociatesMaterial.RelatingMaterial to IfcMaterial or IfcMaterialList. If both are given, then the material directly assigned to IfcBeam overrides the material assigned to IfcBeamType.
              Quantity Use Definition
              The quantities relating to the IfcBeam are defined by the IfcElementQuantity and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following quantities are foreseen, but will be subjected to the local standard of measurement used:
              Name Description Value Type 
              NominalLength Total nominal length of the beam, not taking into account any cut-out's or other processing features. IfcQuantityLength 
              CrossSectionArea Total area of the cross section (or profile) of the beam. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              OuterSurfaceArea Total area of the extruded surfaces of the beam (not taking into account the end cap areas), normally generated as perimeter * length. IfcQuantityArea 
              TotalSurfaceArea Total area of the beam, normally generated as perimeter * length + 2 * cross section area. IfcQuantityArea 
              GrossVolume Total gross volume of the beam, not taking into account possible processing features (cut-out's, etc.) or openings and recesses. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              NetVolume Total net volume of the beam, taking into account possible processing features (cut-out's, etc.) or openings and recesses. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              GrossWeight Total gross weight of the beam without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses. IfcQuantityWeight 
              NetWeight Total net weight of the beam without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses. IfcQuantityWeight 
              Containment Use Definition
              The IfcBeam, as any subtype of IfcBuildingElement, may participate in two different containment relationships. The first (and in most implementation scenarios mandatory) relationship is the hierachical spatial containment, the second (optional) relationship is the aggregation within an element assembly.
              The IfcBeam is places within the project spatial hierarchy using the objectified relationship IfcRelContainedInSpatialStructure, refering to it by its inverse attribute SELF\IfcElement.ContainedInStructure. Subtypes of IfcSpatialStructureElement are valid spatial containers, with IfcBuildingStorey being the default container. 
              The IfcBeam may be aggregated into an element assembly using the objectified relationship IfcRelAggregates, refering to it by its inverse attribute SELF\IfcObjectDefinition.Decomposes. Any subtype of IfcElement can be an element assembly, with IfcElementAssembly as a special focus subtype. 
              In this case it should not be additionally contained in the project spatial hierarchy, i.e. SELF\IfcElement.ContainedInStructure should be NIL. 
              Geometry Use Definition
              The geometric representation of IfcBeam is given by the IfcProductDefinitionShape, allowing multiple geometric representations. Included are: 
              Local Placement
              The local placement for IfcBeam is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement, which is used in the ContainedInStructure inverse attribute, or to a spatial structure element at a higher level, referenced by that. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Geometric Representations
              Currently, the use of 'SweptSolid', 'Clipping', 'Brep' and 'MappedRepresentation' representations is supported. In addition the general representation types 'SurfaceModel' and 'BoundingBox' are allowed. The geometry use definition for 'BoundingBox', 'SurfaceModel' and 'Brep' is explained at IfcBuildingElement.
              SweptSolid Representation
              The standard geometric representation of IfcBeam is defined using the 'SweptSolid' representation. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'SweptSolid' 
              The following additional constraints apply to the 'SweptSolid' representation: 
              Solid: IfcExtrudedAreaSolid shall be supported 
              Profile: IfcRectangleProfileDef and IfcCircleProfileDef shall be supported 
              Extrusion: The profile shall be extruded horizontally, i.e., parallel to the XY Plane of the coordinate system of the referred spatial structure element. It might be further constrained to be parallel to the global XY Plane in implemention agreements. The extrusion axis shall be perpendicular to the swept profile, i.e. pointing into the direction of the z-axis of the Position of the IfcExtrudedAreaSolid. 
              EXAMPLE: standard geometric representation.
              The following interpretation of dimension parameter applies for rectangular beams: 
              IfcRectangleProfileDef.YDim interpreted as beam width 
              IfcRectangleProfileDef.XDim interpreted as beam depth 
              The following interpretation of dimension parameter applies for circular beams: 
              IfcCircleProfileDef Radius interpreted as beam radius. 
             
              Advanced SweptSolid and Clipping Representation
              The advanced geometric representation of IfcBeam is defined using the 'SweptSolid' (enhanced by additional profile types) or 'Clipping' geometry. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'SweptSolid', or 'Clipping' 
              The following constraints apply to the advanced representation: 
              Solid: see standard geometric representation, 
              Profile: IfcRectangleProfileDef, IfcCircleProfileDef, IfcIshapeProfileDef and IfcArbitraryClosedProfileDef shall be supported. 
              Extrusion: All extrusion directions shall be supported. 
              Boolean result: The IfcBooleanClippingResult shall be supported, allowing for Boolean differences between the swept solid (here IfcExtrudedAreaSolid) and one or several IfcHalfSpaceSolid (or its subtypes). 
              EXAMPLE advanced geometric representation
              Use of non-perpendicular extrusion to create the IfcExtrudedAreaSolid. 
              Use of IfcBooleanClippingResult between an IfcExtrudedAreaSolid and an IfcHalfSpaceSolid to create a clipped body. 
              MappedRepresentation
              In addition to the standard and advanced geometric representation of IfcBeam that is defined using the SweptSolid or Clipping geometry, also the MappedRepresentation, shall be supported as it allows for reusing the geometry definition of the beam type at all occurrences of the same type. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'MappedRepresentation' 
              The same constraints, as given for the standard SweptSolid and the advanced SweptSolid and Clipping geometric representation, shall apply to the MappedRepresentation of the IfcRepresentationMap.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcBuilding">
            <summary>
              Construction work that has the provision of shelter for its occupants or contents as one of its main purpose and is normally designed to stand permanently in one place.
            </summary>
            <remarks>
              Definition from ISO 6707-1:1989: Construction work that has the provision of shelter for its occupants or contents as one of its main purpose and is normally designed to stand permanently in one place.
              Definition from IAI: A building represents a structure that provides shelter for its occupants or contents and stands in one place. The building is also used to provide a basic element within the spatial structure hierarchy for the components of a building project (together with site, storey, and space). 
              A building is (if specified) associated to a site. A building may span over several connected or disconnected buildings. Therefore building complex provides for a collection of buildings included in a site. A building can also be decomposed in (vertical) parts, where each part defines a building section. This is defined by the composition type attribute of the supertype IfcSpatialStructureElements which is interpreted as follow:
              COMPLEX = building complex 
              ELEMENT = building 
              PARTIAL = building section 
              HISTORY: New entity in IFC Release 1.0.
              Property Set Use Definition:
              The property sets relating to the IfcBuilding are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcBuilding are part of this IFC release:
              Pset_BuildingCommon: common property set for all types of buildings 
              Pset_BuildingWaterStorage: specific property set for buildings to capture the water supply requirements 
              Pset_BuildingUse: specific property set for buildings to capture the current and anticipated real estate context. 
              Pset_BuildingUseAdjacent: specific property set for buildings to capture the use information about the adjacent buildings. 
              Quantity Use Definition:
              The quantities relating to the IfcBuilding are defined by the IfcElementQuantity and attached by the IfcRelDefinesByProperties. The following quantities are foreseen, but will be subjected to the local standard of measurement:
              Name Description Value Type 
              TotalHeight Calculated total height of the building, measured from the level of terrain to the top part of the building IfcQuantityLength  
              SiteCoverage Calculated coverage of the building site area that is occupied by the building (also referred to as footprint). IfcQuantityArea 
              GrossFloorArea Calculated sum of all areas covered by the building (normally including the area of construction elements). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              NetFloorArea Calculated sum of all usable areas covered by the building (normally excluding the area of construction elements). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea  
              GrossVolume Calculated gross volume of all areas enclosed by the building (normally including the area of construction elements). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              NetVolume Calculated net volume of all areas enclosed by the building (normally excluding the area of construction elements). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              Spatial Structure Use Definition
              The IfcBuilding is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical). The spatial structure elements are linked together by using the objectified relationship IfcRelAggregates. The IfcBuilding references them by its inverse relationships:
              IfcBuilding.Decomposes -- referencing (IfcSite || IfcBuilding) by IfcRelAggregates.RelatingObject, If it refers to another instance of IfcBuilding, the referenced IfcBuilding needs to have a different and higher CompositionType, i.e. COMPLEX (if the other IfcBuilding has ELEMENT), or ELEMENT (if the other IfcBuilding has PARTIAL). 
              IfcBuilding.IsDecomposedBy -- referencing (IfcBuilding || IfcBuildingStorey) by IfcRelAggregates.RelatedObjects. If it refers to another instance of IfcBuilding, the referenced IfcBuilding needs to have a different and lower CompositionType, i.e. ELEMENT (if the other IfcBuilding has COMPLEX), or PARTIAL (if the other IfcBuilding has ELEMENT). 
              If there are building elements and/or other elements directly related to the IfcBuilding (like a curtain wall spanning several stories), they are associated with the IfcBuilding by using the objectified relationship IfcRelContainedInSpatialStructure. The IfcBuilding references them by its inverse relationship:
              IfcBuilding.ContainsElements -- referencing any subtype of IfcProduct (with the exception of other spatial structure element) by IfcRelContainedInSpatialStructure.RelatedElements. 
              Attribute Use Definition:
              The heated space within a Building shall be handled by the IfcZone, including the property for overall height of the heated space in the Building. The following figure shall define the interpretation of building heights and elevations for IfcBuilding.
              The ElevationOfRefHeight is used to give the height above sea level of the internal height 0.00. The height 0.00 is often used as a building internal reference height and equal to the floor finish level of the ground floor. 
             
              Geometry Use Definitions:
              The geometric representation of IfcBuilding is given by the IfcProductDefinitionShape and IfcLocalPlacement, allowing multiple geometric representation. 
              Local Placement 
              The local placement for IfcBuilding is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if relative placement is used) to the IfcSpatialStructureElement of type "IfcSite", or of type "IfcBuilding" (e.g. to position a building relative to a building complex, or a building section to a building). 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Geometric Representations
              Currently, the use of a 2D 'FootPrint' representation of type 'GeometricCurveSet' and a 3D 'Body' representation of type 'Brep' is supported.
              Foot Print Representation 
              The foot print representation of IfcBuilding is given by either a single 2D curve (such as IfcPolyline or IfcCompositeCurve), or by a list of 2D curves (in case of inner boundaries), if the building has an independent geometric representation.
              The representation identifier and type of this geometric representation of IfcBuilding is:
              IfcShapeRepresentation.RepresentationIdentifier = 'FootPrint' 
              IfcShapeRepresentation.RepresentationType = 'GeometricCurveSet' 
              Body Representation 
              The body (or solid model) geometric representation (if the building has an independent geometric representation) of IfcBuilding is defined using faceted B-Rep capabilities (with or without voids), based on the IfcFacetedBrep or on the IfcFacetedBrepWithVoids. 
              The representation identifier and type of this representation of IfcBuilding is:
              IfcShapeRepresentation.RepresentationIdentifier = 'Body' 
              IfcShapeRepresentation.RepresentationType = 'Brep' 
              Since the building shape is usually described by the exterior building elements, an independent shape representation shall only be given, if the building is exposed independently from its constituting elements.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcBuilding.ElevationOfRefHeight">
            <summary>
              Optional. Elevation above sea level of the reference height used for all storey elevation measures, equals to height 0.0. It is usually the ground floor level.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcBuilding.ElevationOfTerrain">
            <summary>
              Optional. Elevation above the minimal terrain level around the foot print of the building, given in elevation above sea level.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcBuilding.BuildingAddress">
            <summary>
              Optional. Address given to the building for postal purposes.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcBuildingElementProxy">
            <summary>
              The IfcBuildingElementProxy is a proxy definition that provides the same functionality, as an IfcBuildingElement, but without having a defined meaning of the special type of building element, it represents.
            </summary>
            <remarks>
              Definition from IAI: The IfcBuildingElementProxy is a proxy definition that provides the same functionality, as an IfcBuildingElement, but without having a defined meaning of the special type of building element, it represents.
              NOTE The building element proxy should be used to exchange special types of building elements, for which the current IFC Release does not yet provide a semantic definition.
              HISTORY: New entity in IFC Release 2.x.
              Geometry Use Definitions
              The geometric representation of any IfcBuildingElementProxy is given by the IfcProductDefinitionShape and IfcLocalPlacement allowing multiple geometric representations. The representation types defined at the supertype IfcBuildingElement also apply.
              Local Placement
              The local placement for any IfcBuildingElementProxy is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. The local placement can be given relativly.
              Geometric Representation
              Currently, the use of 'GeometricCurveSet', 'SurfaceModel', 'SweptSolid', 'Brep' representations is supported. In addition the general representation types 'BoundingBox' and 'MappedRepresentation' are allowed.
              GeometricSet Representation
              Any building element proxy may be represented by a geometric set, given by a collection of 2D points, curves and surfaces. It is ensured by assigning the value 'GeometricSet' to the RepresentationType attribute of IfcShapeRepresentation The RepresentationIdentifier of IfcShapeRepresentation should then have the value 'FootPrint'. 
              SurfaceModel Representation
              Any building element proxy may be represented by a surface model. The surface model representation allows for the representation of complex element shape without defining a volume. It is ensured by assigning the value 'SurfaceModel' to the RepresentationType attribute of IfcShapeRepresentation The RepresentationIdentifier of IfcShapeRepresentation should then have the value 'Body'. 
              Swept Solid Representation
              Any building element proxy may be represented by a swept area solid (either by extrusion or by revolution). The attribute RepresentationType of IfcShapeRepresentation should have the value 'SweptSolid' and the RepresentationIdentifier of IfcShapeRepresentation should then have the value 'Body'. No further restrictions (e.g., for the profile or extrusion direction) are defined at this level.
              Brep Representation
              The general b-rep geometric representation of IfcBuildingElementProxy is defined using the Brep geometry. The Brep representation allows for the representation of complex element shape. It is ensured by assigning the value 'Brep' to the RepresentationType attribute of IfcShapeRepresentation The RepresentationIdentifier of IfcShapeRepresentation should then have the value 'Body'.
              Formal Propositions:
              WR1   :   A Name attribute should be asserted for a building element proxy.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcBuildingElementProxy.CompositionType">
            <summary>
              Optional. Indication, whether the proxy is intended to form an aggregation (COMPLEX), an integral element (ELEMENT), or a part in an aggregation (PARTIAL).
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcBeamTypeEnum">
            <summary>
              This enumeration defines the different types of linear elements an IfcBeamType object can fulfill:
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcBeamTypeEnum.BEAM">
            <summary>
              A standard beam usually used horizontally.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcBeamTypeEnum.JOIST">
            <summary>
              A beam used to support a floor or ceiling.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcBeamTypeEnum.LINTEL">
            <summary>
              A beam or horizontal piece of material over an opening (e.g. door, window).
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcBeamTypeEnum.T_BEAM">
            <summary>
              A T-shape beam that forms part of a slab construction.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcBeamTypeEnum.USERDEFINED">
            <summary>
              User-defined linear beam element.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcBeamTypeEnum.NOTDEFINED">
            <summary>
              Undefined linear beam element
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcColumn">
            <summary>
              Structural member of slender form, usually vertical, that transmits to its base the forces, primarily in compression, that are applied to it.
            </summary>
            <remarks>
              Definition from ISO 6707-1:1989: Structural member of slender form, usually vertical, that transmits to its base the forces, primarily in compression, that are applied to it.
              Definition from IAI: An IfcColumn is a vertical structural member which often is aligned with a structural grid intersection. It represents a vertical, or nearly vertical, structural member from an architectural point of view. It is not required to be load bearing.
              NOTE  For any longitudial structural member, not constrained to be predominately horizontal nor vertical, or where this semantic information is irrelevant, the entity IfcMember exists.
              A particular usage type for the IfcColumn can be given (if type information is available) by refering to the type object IfcColumnType, using the IfcRelDefinesByType relationship, or (if only occurrence information is given) by using the ObjectType attribute. Recommended values are 'column' (the default).
              HISTORY New entity in IFC Release 1.0 
              Type Use Definition
              IfcColumn defines the occuurence of any beam, common information about column types (or styles) is handled by IfcColumnType. The IfcColumnType (if present) may establish the common type name, usage (or predefined) type, common set of properties and common shape representations (using IfcRepresentationMap). The IfcColumnType is attached using the IfcRelDefinedByType.RelatingType objectified relationship and is accessible by the inverse IsDefinedBy attribute.
              Property Set Use Definition
              The property sets relating to the IfcColumn are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcColumn are part of this IFC release:
              Pset_ColumnCommon: common property set for all column occurrences 
              Material Use Definition
              The material of the IfcColumn is defined by the IfcMaterial or IfcMaterialList and attached by the IfcRelAssociatesMaterial.RelatingMaterial. It is accessible by the inverse HasAssociations relationship. Material information can also be given at the IfcColumnType, defining the common attribute data for all occurrences of the same type. It is then accessible by the inverse IsDefinedBy relationship pointing to IfcColumnType.HasAssociations and via IfcRelAssociatesMaterial.RelatingMaterial to IfcMaterial or IfcMaterialList. If both are given, then the material directly assigned to IfcColumn overrides the material assigned to IfcColumnType.
              Quantity Use Definition
              The quantities relating to the IfcColumn are defined by the IfcElementQuantity and attached by the IfcRelDefinesByProperties. It is accessible by the inverse IsDefinedBy relationship. The following quantities are foreseen, but will be subjected to the local standard of measurement used:
              Name Description Value Type 
              NominalLength Total nominal length of the column, not taking into account any cut-out's or other processing features. IfcQuantityLength 
              CrossSectionArea Total area of the cross section (or profile) of the column. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              OuterSurfaceArea Total area of the extruded surfaces of the column (not taking into account the end cap areas), normally generated as perimeter * length. IfcQuantityArea 
              TotalSurfaceArea Total area of the column, normally generated as perimeter * length + 2 * cross section area. IfcQuantityArea 
              GrossVolume Total gross volume of the column, not taking into account possible processing features (cut-out's, etc.) or openings and recesses. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              NetVolume Total net volume of the column, taking into account possible processing features (cut-out's, etc.) or openings and recesses. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              GrossWeight Total gross weight of the column without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses. IfcQuantityWeight 
              NetWeight Total net weight of the column without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses. IfcQuantityWeight 
              Containment Use Definition
              The IfcColumn, as any subtype of IfcBuildingElement, may participate in two different containment relationships. The first (and in most implementation scenarios mandatory) relationship is the hierachical spatial containment, the second (optional) relationship is the aggregation within an element assembly.
              The IfcColumn, is places within the project spatial hierarchy using the objectified relationship IfcRelContainedInSpatialStructure, refering to it by its inverse attribute SELF\IfcElement.ContainedInStructure. Subtypes of IfcSpatialStructureElement are valid spatial containers, with IfcBuildingStorey being the default container. 
              The IfcColumn, may be aggregated into an element assembly using the objectified relationship IfcRelAggregates, refering to it by its inverse attribute SELF\IfcObjectDefinition.Decomposes. Any subtype of IfcElement can be an element assembly, with IfcElementAssembly as a special focus subtype.
              In this case it should not be additionally contained in the project spatial hierarchy, i.e. SELF\IfcElement.ContainedInStructure should be NIL. 
              Geometry Use Definition
              The geometric representation of IfcColumn is given by the IfcProductDefinitionShape, allowing multiple geometric representations. Included are: 
              Local Placement
              The local placement for IfcColumn is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement, which is used in the ContainedInStructure inverse attribute, or to a spatial structure element at a higher level, referenced by that. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Geometric Representations
              Currently, the use of 'SweptSolid', 'Clipping', 'Brep' and 'MappedRepresentation' representations is supported. In addition the general representation types 'SurfaceModel' and 'BoundingBox' are allowed. The geometry use definition for 'BoundingBox', 'SurfaceModel' and 'Brep' is explained at IfcBuildingElement.
              Swept Solid Representation
              The standard geometric representation of IfcColumn is defined using the 'SweptSolid' representation. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used: 
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'SweptSolid' 
              The following additional constraints apply to the 'SweptSolid' representation: 
              Solid: IfcExtrudedAreaSolid shall be supported 
              Profile: IfcRectangleProfileDef and IfcCircleProfileDef shall be supported 
              Extrusion: The profile shall be extruded vertically, i.e., in the direction of the z-axis of the coordinate system of the referred spatial structure element. It might be further constrained to be in the direction of the global z-axis in implemention agreements. The extrusion axis shall be perpendicular to the swept profile, i.e. pointing into the direction of the z-axis of the Position of the IfcExtrudedAreaSolid. 
              EXAMPLE for standard geometric representation. 
              The following interpretation of dimension parameter applies for rectangular columns: 
              IfcRectangleProfileDef.YDim interpreted as column width 
              IfcRectangleProfileDef.XDim interpreted as column height. 
              The following interpretation of dimension parameter applies for round columns:
              IfcCircleProfileDef.Radius interpreted as column radius 
             
              Advanced SweptSolid and Clipping Representation
              The advanced geometric representation of IfcColumn is defined using the 'SweptSolid' (enhanced by additional profile types) or 'Clipping' geometry. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'SweptSolid', or 'Clipping' 
              The following constraints apply to the advanced representation: 
              Solid: see standard geometric representation, 
              Profile: IfcRectangleProfileDef, IfcCircleProfileDef, IfcIshapeProfileDef and IfcArbitraryProfileDef shall be supported. 
              Extrusion: All extrusion directions shall be supported 
              Boolean result: The IfcBooleanClippingResult shall be supported, allowing for Boolean differences between the swept solid (here IfcExtrudedAreaSolid) and one or several IfcHalfSpaceSolid. 
              EXAMPLE for advanced geometric representation.
              Use of a special profile type (here IfcIshapeProfileDef) for the definition of the IfcExtrudedAreaSolid. 
              MappedRepresentation
              In addition to the standard and advanced geometric representation of IfcColumn that is defined using the 'SweptSolid' or 'Clipping' geometry, also the 'MappedRepresentation' shall be supported as it allows for reusing the geometry definition of the column type at all occurrences of the same type. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'MappedRepresentation' 
              The same constraints, as given for the standard 'SweptSolid' and the advanced 'SweptSolid' and 'Clipping' geometric representation, shall apply to the MappedRepresentation of the IfcRepresentationMap.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcCovering.PredefinedType">
            <summary>
              Predefined shape types for a stair that are specified in an Enum.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcCoveringTypeEnum">
            <summary>
              This enumeration defines the available generic types for IfcCovering.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProductExtension.IfcCoveringTypeEnum.CEILING">
            <summary>
              the covering is used to represent a ceiling
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProductExtension.IfcCoveringTypeEnum.FLOORING">
            <summary>
              the covering is used to represent a flooring
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProductExtension.IfcCoveringTypeEnum.CLADDING">
            <summary>
              the covering is used to represent a cladding
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProductExtension.IfcCoveringTypeEnum.ROOFING">
            <summary>
              the covering is used to represent a roof
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProductExtension.IfcCoveringTypeEnum.INSULATION">
            <summary>
              the covering is used to insulate an element for thermal or acoustic purposes.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProductExtension.IfcCoveringTypeEnum.MEMBRANE">
            <summary>
              an impervious layer that could be used for e.g. roof covering (below tiling - that may be known as sarking etc.) or as a damp proof course membrane
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProductExtension.IfcCoveringTypeEnum.SLEEVING">
            <summary>
              the covering is used to isolate a distribution element from a space in which it is contained.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProductExtension.IfcCoveringTypeEnum.WRAPPING">
            <summary>
              the covering is used for wrapping particularly of distribution elements using tape.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcColumnType">
            <summary>
              The element type (IfcColumnType) defines a list of commonly shared property set definitions of a column and an optional set of product representations.
            </summary>
            <remarks>
              Definition from IAI: The element type (IfcColumnType) defines a list of commonly shared property set definitions of a column and an optional set of product representations. It is used to define a column specification (i.e. the specific product information that is common to all occurrences of that product type). 
              NOTE: The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.
              A column type is used to define the common properties of a certain type of column that may be applied to many instances of that type to assign a specific style. Column types may be exchanged without being already assigned to occurrences.
              The occurrences of the IfcColumnType are represented by instances of IfcColumn.
              HISTORY New entity in Release IFC2x Edition 2.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcColumnTypeEnum">
            <summary>
              This enumeration defines the different types of linear elements an IfcColumnType object can fulfill:
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcColumnTypeEnum.COLUMN">
            <summary>
              A standard column element usually used vertically.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcConnectionTypeEnum">
            <summary>
              This enumeration defines the different ways how path based elements (here IfcWallStandardCase) can connect..
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcCurtainWall">
            <summary>
              Non load bearing wall positioned on the outside of a building and enclosing it.
            </summary>
            <remarks>
              Definition from ISO 6707-1:1989: Non load bearing wall positioned on the outside of a building and enclosing it.
              Definition of IAI: Exterior wall of a building which is an assembly of components, hung from the edge of the floor/roof structure rather than bearing on a floor. Curtain wall is represented as a building element assembly and implemented as a subtype of IfcBuildingElement that uses an IfcRelAggregates relationship.
              HISTORY New Entity in IFC Release 2.0 
              Property Set Use Definition:
              The property sets relating to the IfcCurtainWall are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcCurtainWall are part of this IFC release:
              Pset_CurtainWallCommon: common property set for all curtain wall occurrences 
              Geometry Use Definitions:
              The geometric representation of IfcCurtainWall is given by the IfcProductDefinitionShape, allowing multiple geometric representations. Independent geometric representations, as described below, should only be used when the IfcCurtainWall is not defined as an aggregate. If defined as an aggregate, the geometric representation is the sum of the representations of the components within the aggregate. 
              Local placement
              The local placement for IfcCurtainWall is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the same IfcSpatialStructureElement that is used in the ContainedInStructure inverse attribute or to a referenced spatial structure element at a higher level. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              If the IfcCurtainWall establishes an aggregate, then all contained elements (defined by the IsDecomposedBy inverse attribute) shall be placed relative to the IfcCurtainWall.ObjectPlacement.
              Geometric Representation 
              Currently, the use of 'BoundingBox', 'SurfaceModel', 'Brep' and 'MappedRepresentation' representations of IfcCurtainWall are supported. The conventions to use these representations are given at the level of the supertype, IfcBuildingElement.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcDoor">
            <summary>
              Construction for closing an opening, intended primarily for access with hinged, pivoted or sliding operation.
            </summary>
            <remarks>
              Definition from ISO 6707-1:1989: Construction for closing an opening, intended primarily for access with hinged, pivoted or sliding operation. 
              Definition from IAI: The door includes constructions with revolving and folding operations. A door consists of a lining and one or several panels, properties concerning the lining and panel are defined by the IfcDoorLiningProperties and the IfcDoorPanelProperties.
              The door entity, IfcDoor, defines a particular occurrence of a door inserted in the spatial context of a project. A door can:
              either be inserted as a filler in an opening, then the IfcDoor has an inverse attribute FillsVoids provided, 
              or be a "free standing" door, then the IfcDoor has no inverse attribute FillsVoids provided. 
              The actual parameter of the door and/or its shape are defined by the IfcDoor as the occurrence definition (or project instance), or by the IfcDoorStyle as the specific definition (or project type). Parameters are given:
              at the IfcDoor for occurrence specific parameters. The IfcDoor specifies: 
              the door width and height 
              the door opening direction (by the y-axis of the ObjectPlacement) 
              at the IfcDoorStyle, to which the IfcDoor is related by the inverse relationship IsDefinedBy pointing to IfcRelDefinesByType, for style parameters common to all occurrences of the same style. 
              the operation type (single swing, double swing, revolving, etc.) 
              the door hinge side (by using two different styles for right and left opening doors) 
              the construction type 
              the particular attributes for the lining by the IfcDoorLiningProperties 
              the particular attributes for the panels by the IfcDoorPanelProperties 
              The IfcDoor is normally inserted into an IfcOpeningElement (but does not need to - see above) using the IfcRelFillsElement relationship. It is also directly linked to the spatial structure of the project (and here normally to the IfcBuildingStorey) using the IfcRelContainedInSpatialStructure relationship.
              HISTORY New entity in IFC Release 1.0.
              Property Set Use Definition:
              The property sets relating to the IfcDoor are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcDoor are part of this IFC release:
              Pset_DoorCommon: common property set for all door occurrences 
              Pset_DoorWindowGlazingType: specific property set for the glazing properties of the door glazing, if available 
              Pset_DoorWindowShadingType: specific property set for the shading properties of the door glazing, if available 
              Geometry Use Definitions:
              The geometric representation of IfcDoor is given by the IfcProductDefinitionShape, allowing multiple geometric representations. The IfcDoor, in case of an occurrance object, gets its parameter and shape from the IfcDoorStyle. If an IfcRepresentationMap (a block definition) is defined for the IfcDoorStyle, then the IfcDoor inserts it through the IfcMappedItem.
              Local Placement
              The local placement for IfcDoor is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point to the local placement of the same element (if given), in which the IfcDoor is used as a filling (normally an IfcOpeningElement), as provided by the IfcRelFillsElement relationship. 
              If the IfcDoor is not inserted into an IfcOpeningElement, then the PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement that is used in the ContainedInStructure inverse attribute or to a referenced spatial structure element at a higher level. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Door opening operation by door style
              The parameters that defines the shape of the IfcDoor, are given at the IfcDoorStyle and the property sets, which are included in the IfcDoorStyle. The IfcDoor only defines the local placement which determines the opening direction of the door. The overall size of the IfcDoor is determined by its OverallWidth and OverallHeight parameter. If omitted, it should be taken from the profile of the IfcOpeningElement, in which the IfcDoor is inserted.
              The door panel (for swinging doors) opens always into the direction of the positive Y axis of the local placement. The determination of whether the door opens to the left or to the right is done at the level of the IfcDoorStyle. Here it is a left side opening door given by IfcDoorStyle.OperationType = SingleSwingLeft 
              If the door should open to the other side, then the local placement has to be changed. It is still a left side opening door, given by IfcDoorStyle.OperationType = SingleSwingLeft 
              If the door panel (for swinging doors) opens to the right, a separate door style needs to be used (here IfcDoorStyle.OperationType = SingleSwingRight) and it always opens into the direction of the positive Y axis of the local placement.  
              If the door panel (for swinging doors) opens to the right, and into the opposite directions, the local placement of the door need to change. The door style is given by IfcDoorStyle.OperationType = SingleSwingRight. 
              EXPRESS specification:
              ENTITY IfcDoor  
              SUBTYPE OF (  IfcBuildingElement);  
              OverallHeight   :   OPTIONAL IfcPositiveLengthMeasure;  
              OverallWidth   :   OPTIONAL IfcPositiveLengthMeasure;  
             
             
              END_ENTITY;  
             
              Attribute definitions:
              OverallHeight   :   Overall measure of the height, it reflects the Z Dimension of a bounding box, enclosing the body of the door opening. If omitted, the OverallHeight should be taken from the geometric representation of the IfcOpening in which the door is inserted. 
              NOTE  The body of the door might be taller then the door opening (e.g. in cases where the door lining includes a casing). In these cases the OverallHeight shall still be given as the door opening height, and not as the total height of the door lining. 
              OverallWidth   :   Overall measure of the width, it reflects the X Dimension of a bounding box, enclosing the body of the door opening. If omitted, the OverallWidth should be taken from the geometric representation of the IfcOpening in which the door is inserted. 
              NOTE  The body of the door might be wider then the door opening (e.g. in cases where the door lining includes a casing). In these cases the OverallWidth shall still be given as the door opening width, and not as the total width of the door lining.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoor.OverallHeight">
            <summary>
              Optional. Overall measure of the height, it reflects the Z Dimension of a bounding box, enclosing the body of the door opening. If omitted, the OverallHeight should be taken from the geometric representation of the IfcOpening in which the door is inserted.
            </summary>
            <remarks>
              NOTE  The body of the door might be taller then the door opening (e.g. in cases where the door lining includes a casing). In these cases the OverallHeight shall still be given as the door opening height, and not as the total height of the door lining.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoor.OverallWidth">
            <summary>
              Optional. Overall measure of the width, it reflects the X Dimension of a bounding box, enclosing the body of the door opening. If omitted, the OverallWidth should be taken from the geometric representation of the IfcOpening in which the door is inserted.
            </summary>
            <remarks>
              NOTE  The body of the door might be wider then the door opening (e.g. in cases where the door lining includes a casing). In these cases the OverallWidth shall still be given as the door opening width, and not as the total width of the door lining.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcElectricalElement">
            <summary>
              Generalization of all electrical related objects.
            </summary>
            <remarks>
              Definition from IAI: Generalization of all electrical related objects.
              HISTORY New entity in IFC Release 2.x
              IFC2x2 NOTE: The entity IfcElectricalElement is deprecated and shall no longer be used.
              NOTE: The various electrical elements are now handled as distribution elements and class definitions are provided by subtypes of IfcDistributionElement for occurrences and IfcDistributionElementType for types.
              Geometry Use Definitions:
              The geometric representation of IfcElectricalElement is given by the IfcProductDefinitionShape, allowing multiple geometric representation. 
              Local Placement
              The local placement for IfcElectricalElement is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement , which is used in the ContainedInStructure inverse attribute, or to a spatial structure element at a higher level, referenced by that. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              SurfaceModel Representation
              Any IfcElectricalElement (so far no further constraints are defined at the level of its subtypes) may be represented as a single or multiple surface models, based on either shell or face based models. It is ensured by assigning the value 'SurfaceModel' to the RepresentationType attribute of IfcShapeRepresentation. In some cases it may be useful to also expose a simple representation as a bounding box representation of the same complex shape.
              Brep Representation
              Any IfcElectricalElement (so far no further constraints are defined at the level of its subtypes) may be represented as a single or multiple Boundary Representation elements (which are restricted to faceted Brep with or without voids). The Brep representation allows for the representation of complex element shape. It is ensured by assigning the value 'Brep' to the RepresentationType attribute of IfcShapeRepresentation. In some cases it may be useful to also expose a simple representation as a bounding box representation of the same complex shape.
              MappedRepresentation
              The new mapped item, IfcMappedItem, should be used if appropriate as it allows for reusing the geometry definition of the equipment type at occurrences of the same equipement type. In this case the IfcShapeRepresentation.RepresentationType = MappedRepresentation is used.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcElementAssembly">
            <summary>
              A container class that represents complex element assemblies aggregated from several elements, such as discrete elements, building elements, or other elements.
            </summary>
            <remarks>
              Definition from IAI: A container class that represents complex element assemblies aggregated from several elements, such as discrete elements, building elements, or other elements.
              EXAMPLE: Steel construction assemblies, such as trusses and different kinds of frames, can be represented by the IfcElementAssembly entity. Other examples include slab fields aggregated from a number of precast concrete slabs or reinforcement units made from several reinforcement bars. 
              HISTORY: New Entity for Release IFC2x Edition 2.
              Geometry Use Definitions
              The geometric representation of IfcElementAssembly is given by the IfcProductDefinitionShape, allowing multiple geometric representations. 
              Local Placement
              The local placement for IfcElementAssembly is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcBuildingElement, which is used in the Decomposes inverse attribute, i.e. the local placement is defined relative to the local placement of the building element in which the assembly is contained. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Geometric Representations
              The geometry of an IfcElementAssembly is generally formed from its components, in which case it does not need to have an explicit geometric representation. In some cases it may be useful to also expose a simple explicit representation as a bounding box representation of the complex composed shape independently.
              Formal Propositions:
              WR1   :   The attribute ObjectType shall be given, if the predefined type is set to USERDEFINED.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElementAssembly.AssemblyPlace">
            <summary>
            The nominal diameter describing the cross-section size of the fastener.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcElementAssembly.PredefinedType">
            <summary>
            The nominal length describing the longitudinal dimensions of the fastener.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcElementAssemblyTypeEnum">
            <summary>
              An enumeration defining the basic configuration types for element assemblies.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcEquipmentElement">
            <summary>
              Generalization of all equipment related objects, those objects are characterized as being pre-manufactured and being movable, and which provide some building service related or other servicing function.
            </summary>
            <remarks>
              Definition from IAI: Generalization of all equipment related objects, those objects are characterized as being pre-manufactured and being movable, and which provide some building service related or other servicing function. The term fixture is often used as a synonym or similar concept. The IfcEquipmentElement covers the fixture aspect as well.
              HISTORY New entity in IFC Release 2x
              IFC2x2 NOTE: The entity IfcEquipmentElement is deprecated and shall no longer be used.
              NOTE: The concept of equipment, that has a distribution function, such as electrical equipment, is now handled as distribution elements and class definitions are provided by subtypes of IfcDistributionElement for occurrences and IfcDistributionElementType for types. Equipment, that has no distribution function, is now handled within the IfcSharedComponentElements schema.
              Geometry Use Definitions:
              The geometric representation of IfcEquipmentElement is given by the IfcProductDefinitionShape, allowing multiple geometric representation. 
              Local Placement
              The local placement for IfcEquipmentElement is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement , which is used in the ContainedInStructure inverse attribute, or to a spatial structure element at a higher level, referenced by that. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              SurfaceModel Representation
              Any IfcEquipmentElement (so far no further constraints are defined at the level of its subtypes) may be represented as a single or multiple surface models, based on either shell or face based models. It is ensured by assigning the value 'SurfaceModel' to the RepresentationType attribute of IfcShapeRepresentation. In some cases it may be useful to also expose a simple representation as a bounding box representation of the same complex shape.
              Brep Representation
              Any IfcEquipmentElement (so far no further constraints are defined at the level of its subtypes) may be represented as a single or multiple Boundary Representation elements (which are restricted to faceted Brep with or without voids). The Brep representation allows for the representation of complex element shape. It is ensured by assigning the value 'Brep' to the RepresentationType attribute of IfcShapeRepresentation. In some cases it may be useful to also expose a simple representation as a bounding box representation of the same complex shape.
              MappedRepresentation
              The new mapped item, IfcMappedItem, should be used if appropriate as it allows for reusing the geometry definition of the equipment type at occurrences of the same equipement type. In this case the IfcShapeRepresentation.RepresentationType = MappedRepresentation is used.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcFurnishingElement">
            <summary>
              Generalization of all furniture related objects. Furnishing objects are characterized as being 
              pre-manufactured and assembled on-site, or 
              manufactured on-site (built-in) 
              Thus furnishing elements can either be movable, or not (as the built-ins).
            </summary>
            <remarks>
              Definition from IAI: Generalization of all furniture related objects. Furnishing objects are characterized as being 
              pre-manufactured and assembled on-site, or 
              manufactured on-site (built-in) 
              Thus furnishing elements can either be movable, or not (as the built-ins).
              HISTORY New entity in IFC Release 2x.
              Geometry Use Definitions:
              The geometric representation of IfcFurnishingElement is given by the IfcProductDefinitionShape, allowing multiple geometric representation. 
              Local Placement
              The local placement for IfcFurnishingElement is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement , which is used in the ContainedInStructure inverse attribute, or to a spatial structure element at a higher level, referenced by that. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              SurfaceModel Representation
              Any IfcFurnishingElement (so far no further constraints are defined at the level of its subtypes) may be represented as a single or multiple surface models, based on either shell or face based models. It is ensured by assigning the value 'SurfaceModel' to the RepresentationType attribute of IfcShapeRepresentation. In some cases it may be useful to also expose a simple representation as a bounding box representation of the same complex shape.
              Brep Representation
              Any IfcFurnishingElement (so far no further constraints are defined at the level of its subtypes) may be represented as a single or multiple Boundary Representation elements (which are restricted to faceted Brep with or without voids). The Brep representation allows for the representation of complex element shape. It is ensured by assigning the value 'Brep' to the RepresentationType attribute of IfcShapeRepresentation. In some cases it may be useful to also expose a simple representation as a bounding box representation of the same complex shape.
              MappedRepresentation
              The new mapped item, IfcMappedItem, should be used if appropriate as it allows for reusing the geometry definition of the equipment type at occurrences of the same equipement type. In this case the IfcShapeRepresentation.RepresentationType = MappedRepresentation is used.
              EXPRESS specification:
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcInternalOrExternalEnum">
            <summary>
              Definition from IAI: This enumeration defines the different types of spaces or space boundaries in terms of either being inside the building or outside the building.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProductExtension.IfcInternalOrExternalEnum.INTERNAL">
            <summary>
              Inside the building
            </summary>
            <remarks>
              IfcSpace The space is an internal space, fully enclosed by physical boundaries (directly or indirectly through adjacent spaces). 
              IfcSpaceBoundary The space boundary faces to the inside of an internal space.
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.ProductExtension.IfcInternalOrExternalEnum.EXTERNAL">
            <summary>
              Outside the building
            </summary>
            <remarks>
              IfcSpace The space is an external space, not (or only partially) enclosed by physical boundaries. 
              IfcSpaceBoundary The space boundary faces to the outer space, or the inside of an external space.
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.ProductExtension.IfcInternalOrExternalEnum.NOTDEFINED">
            <summary>
              No information available.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcDoorLiningProperties">
            <summary>
              The door lining is the frame which enables the door leaf to be fixed in position. The door lining is used to hang the door leaf.
            </summary>
            <remarks>
              Definition of IAI: The door lining is the frame which enables the door leaf to be fixed in position. The door lining is used to hang the door leaf. The parameters of the door lining (IfcDoorLiningProperties) define the geometrically relevant parameter of the lining.
              The IfcDoorLiningProperties are included in the list of properties (HasPropertySets) of the IfcDoorStyle. More information about the door lining can be included in the same list of the IfcDoorStyle using the IfcPropertySet for dynamic extensions. 
              HISTORY: New entity in IFC Release 2.0
              Geometry Use Definitions
              The IfcDoorLiningProperties does not hold its own geometric representation. However it defines parameters which can be used to create the shape of the door style (which is inserted by the IfcDoor into the spatial context of the project).
              Interpretation of parameter
              The parameters of the IfcDoorLiningProperties define a standard door lining, including (if given) a threshold and a transom. The outer boundary of the lining is determined by the occurrence parameter assigned to the IfcDoor, which inserts the IfcDoorStyle.
              The lining is applied to the left, right and upper side of the opening reveal. The parameters are: 
              LiningDepth, if omited, equal to wall thickness - this only takes effect if a value for LiningThickness is given. If both parameters are not given, then there is no lining. 
              LiningThickness 
             
              The lining can only cover part of the opening reveal. 
              LiningOffset : given if lining edge has an offset to the x axis of the local placement. 
              NOTE  In addition to the LiningOffset, the local placement of the IfcDoor can already have an offset to the wall edge and thereby shift the lining along the y axis. The actual position of the lining is calculated from the origin of the local placement along the positive y axis with the distance given by LiningOffset. 
              The lining may include a casing, which covers part of the wall faces around the opening. The casing covers the left, right and upper side of the lining on both sides of the wall. The parameters are: 
              CasingDepth 
              CasingThickness 
             
              The lining may include a threshold, which covers the bottom side of the opening. The parameters are: 
              ThresholdDepth, if omited, equal to wall thickness - this only takes effect if a value for ThresholdThickness is given. If both parameters are not given, then there is no threshold. 
              ThresholdThickness 
              ThresholdOffset (not shown in figure): given, if the threshold edge has an offset to the x axis of the local placement. 
             
              The lining may have a transom which separates the door panel from a window panel. The transom, if given, is defined by: 
              TransomOffset : a parallel edge to the x axis of the local placement 
              TransomThickness 
              The depth of the transom is identical to the depth of the lining and not given as separate parameter.
             
              NOTE: special agreement on LiningDepth 
              It describes the length of the lining along the reveal of the door opening. It can be given by an absolute value, if the door lining has a specific depth depending on the door style. However often it is equal to the wall thickness. If the same door style is used (like the same type of single swing door), but inserted into different walls with different thicknesses, it would be necessary to create a special door style for each wall thickness. Therefore several CAD systems allow to set the value to "automatically aligned" to wall thickness. This should be exchanged by leaving the optional attribute LiningDepth unassigned.
              NOTE: the same agreement applies to ThresholdDepth
              Formal Propositions:
              WR31   :   Either both parameter, LiningDepth and LiningThickness are given, or only the LiningThickness, then the LiningDepth is variable. It is not valid to only assert the LiningDepth. 
              NOTE  A LiningDepth with NIL ($) value indicates a door style with a lining equal to the wall thickness. 
             
              WR32   :   Either both parameter, ThresholdDepth and ThresholdThickness are given, or only the ThresholdThickness, then the ThresholdDepth is variable. It is not valid to only assert the ThresholdDepth. 
              NOTE  A ThresholdDepth with NIL ($) value indicates a door style with a lining equal to the wall thickness. 
             
              WR33   :   Either both parameter, TransomDepth and TransomThickness are given, or none of them. 
             
              WR34   :   Either both parameter, the CasingDepth and the CasingThickness, are given, or none of them. 
             
              WR35   :   The IfcDoorLiningProperties shall only be used in the context of an IfcDoorStyle.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorLiningProperties.LiningDepth">
            <summary>
              Optional. Depth of the door lining, measured perpendicular to the plane of the door lining. If omited (and with a given value to lining thickness) it indicates an adjustable depth (i.e. a depth that adjusts to the thickness of the wall into which the occurrence of this door style is inserted).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorLiningProperties.LiningThickness">
            <summary>
              Optional. Thickness (width in plane parallel to door leaf) of the door lining.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorLiningProperties.ThresholdDepth">
            <summary>
              Optional. Depth (dimension in plane perpendicular to door leaf) of the door threshold. Only given if the door lining includes a threshold. If omited (and with a given value to threshold thickness) it indicates an adjustable depth (i.e. a depth that adjusts to the thickness of the wall into which the occurrence of this door style is inserted).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorLiningProperties.ThresholdThickness">
            <summary>
              Optional. Thickness (width in plane parallel to door leaf) of the door threshold. Only given if the door lining includes a threshold and the parameter is known.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorLiningProperties.TransomThickness">
            <summary>
              Optional. Offset of the transom (if given) which divides the door leaf from a glazing (or window) above. The offset is given from the bottom of the door opening.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorLiningProperties.TransomOffset">
            <summary>
              Optional. Offset of the transom (if given) which divides the door leaf from a glazing (or window) above. The offset is given from the bottom of the door opening.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorLiningProperties.LiningOffset">
            <summary>
              Optional. Offset (dimension in plane perpendicular to door leaf) of the door lining. The offset is given as distance to the x axis of the local placement.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorLiningProperties.ThresholdOffset">
            <summary>
              Optional. Offset (dimension in plane perpendicular to door leaf) of the door threshold. The offset is given as distance to the x axis of the local placement. Only given if the door lining includes a threshold and the parameter is known.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorLiningProperties.CasingThickness">
            <summary>
              Optional. Thickness of the casing (dimension in plane of the door leaf). If given it is applied equally to all four sides of the adjacent wall.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorLiningProperties.CasingDepth">
            <summary>
              Optional. Depth of the casing (dimension in plane perpendicular to door leaf). If given it is applied equally to all four sides of the adjacent wall.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorLiningProperties.ShapeAspectStyle">
            <summary>
              Optional. Pointer to the shape aspect, if given. The shape aspect reflects the part of the door shape, which represents the door lining.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcDoorPanelOperationEnum">
            <summary>
              This enumeration defines the basic ways how individual door panels operate.
            </summary>
            <remarks>
              Definition from IAI: This enumeration defines the basic ways how individual door panels operate. 
              HISTORY New Enumeration in IFC Release 2.0.
              Swinging  
              DoubleActing  
              Sliding  
              Folding  
              Revolving  
              Rollingup  
              UserDefined   
              NotDefined   
              The opening direction of the door panels is given by the local placement of the IfcDoor. The positive y-axis determines the direction as shown in the figure.
             
              NOTE
              Figures (symbolic representation) depend on the national building code 
              These figures are only shown as illustrations 
              EXPRESS specification:
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcDoorPanelPositionEnum">
            <summary>
              Definition from IAI: This enumeration defines the basic ways to describe the location of a door panel within a door lining.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorPanelProperties.PanelDepth">
            <summary>
              Optional. Depth of the door panel, measured perpendicular to the plane of the door leaf.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorPanelProperties.PanelOperation">
            <summary>
              The PanelOperation defines the way of operation of that panel. The PanelOperation of the door panel has to correspond with the OperationType of the IfcDoorStyle.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorPanelProperties.PanelWidth">
            <summary>
              Optional. Width of this panel, given as ratio relative to the total clear opening width of the door.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorPanelProperties.PanelPosition">
            <summary>
              Position of this panel within the door.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorPanelProperties.ShapeAspectStyle">
            <summary>
              Optional. Pointer to the shape aspect, if given. The shape aspect reflects the part of the door shape, which represents the door panel.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcDoorStyle">
            <summary>
              The door style, IfcDoorStyle, defines a particular style of doors, which may be included into the spatial context of the building model through an (or multiple) instances of IfcDoor.
            </summary>
            <remarks>
              Definition from IAI: The door style, IfcDoorStyle, defines a particular style of doors, which may be included into the spatial context of the building model through an (or multiple) instances of IfcDoor. A door style defines the overall parameter of the door style and refers to the particular parameter of the lining and one (or several) panels through the IfcDoorLiningProperties and the IfcDoorPanelProperties.
              The door entity, IfcDoor, defines a particular occurrence of a door inserted in the spatial context of a project. The actual parameter of the door and/or its shape is defined at the IfcDoorStyle, to which the IfcDoor is related by the inverse relationship IsDefinedBy pointing to IfcRelDefinedByType. The IfcDoorStyle also defines the particular attributes for the lining, IfcDoorLiningProperties, and panels, IfcDoorPanelProperties.
              HISTORY  New entity in IFC Release 2x.
              IFC2x Edition 2 COMPATIBILITY NOTICE  The entity IfcDoorStyle is still subtyped from the IfcTypeProduct to provide upward compatibility. This is a recorded anomaly as all other types for building elements are now subtyped from IfcBuildingElementType and have the suffix "Type", not "Style". 
              Geometry Use Definitions:
              The IfcDoorStyle defines the baseline geometry, or the representation map, for all occurrences of the door style, given by the IfcDoor, pointing to this style. The representation of the door style may be given by the agreed set of minimal parameters, defined for the door lining and the door panel(s), or it may be given by a geometric representation used by the IfcRepresentationMap. The attribute ParameterTakesPrecedence decides, whether the set of parameters can be used to exactly represent the shape of the door style (TRUE), or whether the attached IfcRepresentationMap holds the exact representation (FALSE).
              Interpretation of parameter
              The IfcDoorStyleOperationTypeEnum defines the general layout of the door style. Depending on the enumerator, the appropriate instances of IfcDoorLiningProperties and IfcDoorPanelProperties are attached in the list of HasPropertySets. The IfcDoorStyleOperationTypeEnum mainly determines the hinge side (left hung, or right hung), the operation (swinging, sliding, folding, etc.) and the number of panels.
              See geometry use definitions at IfcDoorStyleOperationTypeEnum for the correct usage of opening symbols for different operation types. 
              EXPRESS specification
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorStyle.OperationType">
            <summary>
              Type defining the general layout and operation of the door style.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorStyle.ConstructionType">
            <summary>
              Type defining the basic construction and material type of the door.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorStyle.ParameterTakesPrecedence">
            <summary>
              The Boolean value reflects, whether the parameter given in the attached lining and panel properties exactly define the geometry (TRUE), or whether the attached style shape take precedence (FALSE). In the last case the parameter have only informative value.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcDoorStyle.Sizeable">
            <summary>
              The Boolean indicates, whether the attached IfcMappedRepresentation (if given) can be sized (using scale factor of transformation), or not (FALSE). If not, the IfcMappedRepresentation should be IfcShapeRepresentation of the IfcDoor (using IfcMappedItem as the Item) with the scale factor = 1.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcDoorStyleConstructionEnum">
            <summary>
              This enumeration defines the basic types of construction of doors. The construction type relates to the main material (or material combination) used for making the door.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcDoorStyleOperationEnum">
            <summary>
              This enumeration defines the basic ways to describe how doors operate.
            </summary>
            <remarks>
              Definition from IAI: This enumeration defines the basic ways to describe how doors operate. 
              HISTORY  New Enumeration in Release IFC2x .
              Illustration
              Enumerator Description Figure 
              SINGLE_SWING_LEFT
              Door with one panel that opens (swings) to the left. The hinges are on the left side as viewed in the direction of the positive y-axis.
              Note: Direction of swing (whether in or out) is determined at the IfcDoor.
              
              SINGLE_SWING_RIGHT
              Door with one panel that opens (swings) to the right. The hinges are on the right side as viewed in the direction of the positive y-axis.
              Note: Direction of swing (whether in or out) is determined at the IfcDoor.
              
              DOUBLE_DOOR_
              SINGLE_SWING
              Door with two panels, one opens (swings) to the left the other opens (swings) to the right.
              Note: Direction of swing (whether in or out) is determined at the IfcDoor. 
              
              DOUBLE_SWING_LEFT
              Door with one panel that swings in both directions and to the left in the main trafic direction. Also called double acting door.
              Note: Direction of main swing (whether in or out) is determined at the IfcDoor. 
              
              DOUBLE_SWING_RIGHT
              Door with one panel that swings in both directions and to the right in the main trafic direction. Also called double acting door.
              Note: Direction of main swing (whether in or out) is determined at the IfcDoor.
              
              DOUBLE_DOOR_
              DOUBLE_SWING
              Door with two panels, one swings in both directions and to the right in the main trafic direction the other swings also in both directions and to the left in the main trafic direction.
              Note: Direction of main swing (whether in or out) is determined at the IfcDoor.
              
              DOUBLE_DOOR_
              SINGLE_SWING_
              OPPOSITE_LEFT
              Door with two panels that both open to the left, one panel swings in one direction and the other panel swings in the opposite direction.
              Note: Direction of main swing (whether in or out) is determined at the IfcDoor.
              
              DOUBLE_DOOR_
              SINGLE_SWING_
              OPPOSITE_RIGHT Door with two panels that both open to the right, one panel swings in one direction and the other panel swings in the opposite direction.
              Note: Direction of main swing (whether in or out) is determined at the IfcDoor.
              
              SLIDING_TO_LEFT
              Door with one panel that is sliding to the left.   
              SLIDING_TO_RIGHT
              Door with one panel that is sliding to the right.   
              DOUBLE_DOOR_SLIDING
              Door with two panels, one is sliding to the left the other is sliding to the right.   
              FOLDING_TO_LEFT
              Door with one panel that is folding to the left.   
              FOLDING_TO_RIGHT Door with one panel that is folding to the right.   
              DOUBLE_DOOR_FOLDING
              Door with two panels, one is folding to the left the other is folding to the right.   
              REVOLVING
              An entrance door consisting of four leaves set in a form of a cross and revolving around a central vertical axis (the four panels are described by a single IfcDoor panel property).   
              ROLLINGUP
              Door that opens by rolling up.
              Note: Whether it rolls up to the inside or outside is determined at the IfcDoor.
              
              USERDEFINED User defined operation type   
              NOTDEFINED A door with a not defined operation type is considered as a door with a lining, but no panels. It is thereby always open.  
             
              NOTE
              Figures are shown in the ground view. 
              Figures (symbolic representation) depend on the national building code. 
              These figures are only shown as illustrations, the actual representation in the ground view might differ. 
              Open to the outside is declared as open into the direction of the positive y-axis, determined by the ObjectPlacement at IfcDoor 
              The location of the panel relative to the wall thickness is defined by the ObjectPlacement at IfcDoor, and the IfcDoorLiningProperties.LiningOffset parameter. 
              EXPRESS specification:
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcMember">
            <summary>
              An IfcMember is a structural member designed to carry loads between or beyond points of support.
            </summary>
            <remarks>
              Definition from IAI: An IfcMember is a structural member designed to carry loads between or beyond points of support. It is not required to be load bearing. The location of the member (being horizontal, vertical or sloped) is not relevant to its definition (in contrary to IfcBeam and IfcColumn).
              The material of the IfcMember is defined by the IfcMaterial and attached by the IfcRelAssociatesMaterial. It is accessible by the inverse HasAssociations relationship.
              A particular usage type for the IfcMember can be given by refering to the type object IfcMemberType, using the IfcRelDefinesByType relationship, or (if only occurrence information is given) by using the ObjectType attribute. Recommended values are 'member' (the default), 'brace', 'collar', 'member', 'post', 'purlin', 'rafter', 'stringer', 'strut'.
              HISTORY  New entity in IFC Release 2x2 Addendum. 
              IFC2x Edition 2 Addendum CHANGE  The entity IfcMember has been added. Upward compatibility for file based exchange is guaranteed.
              Property Set Use Definition
              The property sets relating to the IfcMember are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcMember are part of this IFC release:
              Pset_MemberCommon: common property set for all member occurrences 
              Quantity Use Definition
              The quantities relating to the IfcMember are defined by the IfcElementQuantity and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following quantities are foreseen, but will be subjected to the local standard of measurement used:
              Name Description Value Type 
              NominalLength Total nominal length of the member, not taking into account any cut-out's or other processing features. IfcQuantityLength 
              CrossSectionArea Total area of the cross section (or profile) of the member. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              OuterSurfaceArea Total area of the extruded surfaces of the member (not taking into account the end cap areas), normally generated as perimeter * length. IfcQuantityArea 
              TotalSurfaceArea Total area of the member, normally generated as perimeter * length + 2 * cross section area. IfcQuantityArea 
              GrossVolume Total gross volume of the member, not taking into account possible processing features (cut-out's, etc.) or openings and recesses. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              NetVolume Total net volume of the member, taking into account possible processing features (cut-out's, etc.) or openings and recesses. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              GrossWeight Total gross weight of the member without add-on parts, not taking into account possible processing features (cut-out's, etc.) or openings and recesses. IfcQuantityWeight 
              NetWeight Total net weight of the member without add-on parts, taking into account possible processing features (cut-out's, etc.) or openings and recesses. IfcQuantityWeight 
              Containment Use Definitions
              The IfcMember, as any subtype of IfcBuildingElement, may participate in two different containment relationships. The first (and in most implementation scenarios mandatory) relationship is the hierachical spatial containment, the second (optional) relationship is the aggregation within an element assembly.
              The IfcMember is places within the project spatial hierarchy using the objectified relationship IfcRelContainedInSpatialStructure, refering to it by its inverse attribute SELF\IfcElement.ContainedInStructure. Subtypes of IfcSpatialStructureElement are valid spatial containers, with IfcBuildingStorey being the default container. 
              The IfcMember may be aggregated into an element assembly using the objectified relationship IfcRelAggregates, refering to it by its inverse attribute SELF\IfcObjectDefinition.Decomposes. Any subtype of IfcElement can be an element assembly, with IfcElementAssembly as a special focus subtype. 
              Geometry Use Definitions
              The geometric representation of IfcMember is given by the IfcProductDefinitionShape, allowing multiple geometric representations. Included are: 
              Local Placement
              The local placement for IfcMember is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement, which is used in the ContainedInStructure inverse attribute, or to a spatial structure element at a higher level, referenced by that. 
              If the IfcMember is part of an assembly, the PlacementRelTo relationship of IfcLocalPlacement shall point to the local placement of the container element, e.g.  IfcElementAssembly. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Geometric Representations
              Currently, the use of 'SweptSolid', 'Clipping', 'Brep' and 'MappedRepresentation' representations is supported. In addition the general representation types 'SurfaceModel' and 'BoundingBox' are allowed. The geometry use definition for 'BoundingBox', 'SurfaceModel' and 'Brep' is explained at IfcBuildingElement.
              SweptSolid Representation
              The standard geometric representation of IfcMember is defined using the 'SweptSolid' representation. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'SweptSolid' 
              The following additional constraints apply to the 'SweptSolid' representation: 
              Solid: IfcExtrudedAreaSolid shall be supported 
              Profile: All subtypes of IfcParameterizedProfileDef and IfcArbitraryClosedProfileDef shall be supported (exclusions need to be agreed upon by implementer agreements). 
              Extrusion: The profile shall be extruded in any direction. The extrusion axis shall be perpendicular to the swept profile, i.e. pointing into the direction of the z-axis of the Position of the IfcExtrudedAreaSolid. 
              EXAMPLE: standard geometric representation. 
              The following interpretation of dimension parameter applies for rectangular members: 
              IfcRectangleProfileDef.YDim interpreted as member width 
              IfcRectangleProfileDef.XDim interpreted as member depth 
              The following interpretation of dimension parameter applies for circular members: 
              IfcCircleProfileDef Radius interpreted as member radius. 
             
              Advanced SweptSolid and Clipping Representation
              The advanced geometric representation of IfcMember is defined using the 'SweptSolid' (enhanced by additional profile types) or 'Clipping' geometry. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'SweptSolid', or 'Clipping' 
              The following constraints apply to the advanced representation: 
              Solid: see standard geometric representation, 
              Profile: see standard geometric representation, 
              Extrusion: All extrusion directions shall be supported. 
              Boolean result: The IfcBooleanClippingResult shall be supported, allowing for Boolean differences between the swept solid (here IfcExtrudedAreaSolid) and one or several IfcHalfSpaceSolid (or its subtypes). 
              EXAMPLE advanced geometric representation 
              Use of non-perpendicular extrusion to create the IfcExtrudedAreaSolid. 
              Use of IfcBooleanClippingResult between an IfcExtrudedAreaSolid and an IfcHalfSpaceSolid to create a clipped body. 
              MappedRepresentation
              In addition to the standard and advanced geometric representation of IfcMember that is defined using the 'SweptSolid' or 'Clipping' geometry, also the 'MappedRepresentation' shall be supported as it allows for reusing the geometry definition of the member type at all occurrences of the same type. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'MappedRepresentation' 
              The same constraints, as given for the standard 'SweptSolid' and the advanced 'SweptSolid' and 'Clipping' geometric representation, shall apply to the MappedRepresentation of the IfcRepresentationMap.
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.ProductExtension.IfcPhysicalOrVirtualEnum.PHYSICAL">
            <summary>
              The space boundary is provided physically, i.e. by an physical element.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProductExtension.IfcPhysicalOrVirtualEnum.VIRTUAL">
            <summary>
              The space boundary is provided physically, i.e. by an physical element.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.ProductExtension.IfcPhysicalOrVirtualEnum.NOTDEFINED">
            <summary>
              No information available.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum">
            <summary>
              This enumeration defines the different types of linear elements an IfcMemberType object can fulfill:
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum.BRACE">
            <summary>
              A linear element (usually sloped) often used for bracing of a girder or truss.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum.CHORD">
            <summary>
              Upper or lower longitudinal member of a truss, used horizontally or sloped.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum.COLLAR">
            <summary>
              A linear element (usually used horizontally) within a roof structure to connect rafters and posts.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum.MEMBER">
            <summary>
              A linear element within a girder or truss with no further meaning.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum.MULLION">
            <summary>
              A linear element within a curtain wall system to connect two (or more) panels.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum.PLATE">
            <summary>
              A linear continuous horizontal element in wall framing, e.g. a head piece or a sole plate.
            </summary>
            <remarks>
              NOTE  This head piece or sole plate shall not be mixed up with planar elements, such as sheets and panels, that are handled as IfcPlate (and IfcPlateType).
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum.POST">
            <summary>
              A linear member (usually used vertically) within a roof structure to support purlins.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum.PURLIN">
            <summary>
              A linear element (usually used horizontally) within a roof structure to support rafters
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum.RAFTER">
            <summary>
              A linear elements used to support roof slabs or roof covering, usually used with slope.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum.STRINGER">
            <summary>
              A linear element used to support stair or ramp flights, usually used with slope.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum.STRUT">
            <summary>
              A linear element often used within a girder or truss.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum.STUD">
            <summary>
              Vertical element in wall framing.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum.USERDEFINED">
            <summary>
              User-defined linear element.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcMemberTypeEnum.NOTDEFINED">
            <summary>
              Undefined linear element
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcPlate">
            <summary>
              An IfcPlate is a planar and often flat part with constant thickness.
            </summary>
            <remarks>
              Definition from IAI: An IfcPlate is a planar and often flat part with constant thickness. A plate can be a structural part carrying loads between or beyond points of support, however it is not required to be load bearing. The location of the plate (being horizontal, vertical or sloped) is not relevant to its definition (in contrary to IfcWall and IfcSlab (as floor slab)). 
              NOTE  Plates are normally made of steel, other metallic material, or by glass panels. However the definition of IfcPlate is material independent and specific material information shall be handled by using IfcAssociatesMaterial to assign a material specification to the IfcPlate. 
              NOTE  Although not necessarily, plates are often add-on parts. This is represented by the IfcRelAggregates decomposition mechanism used to aggregate parts, such as IfcPlate, into a container element, e.g. IfcElementAssembly, or IfcCurtainWall.  
              An instance IfcPlate should preferably get its geometric representation and material assignment through the type definition by IfcPlateType assigned using the IfcRelDefinesByType relationship. This allows identical plates in a construction to be represented by the same instance of IfcPlateType. 
              HISTORY New entity in IFC Release 2x2 
              Containment Use Definitions
              The IfcPlate, as any subtype of IfcBuildingElement, may participate in two different containment relationships. The first (and in most implementation scenarios mandatory) relationship is the hierachical spatial containment, the second relationship is the aggregation within an element assembly.
              The IfcPlate is places within the project spatial hierarchy using the objectified relationship IfcRelContainedInSpatialStructure, refering to it by its inverse attribute SELF\IfcElement.ContainedInStructure. Subtypes of IfcSpatialStructureElement are valid spatial containers, with IfcBuildingStorey being the default container. 
              The IfcPlate may be aggregated into an element assembly using the objectified relationship IfcRelAggregates, refering to it by its inverse attribute SELF\IfcObjectDefinition.Decomposes. Any subtype of IfcElement can be an element assembly, with IfcElementAssembly as a special focus subtype. In this case, no additional relationship to the spatial hierarchy shall be given (i.e. SELF\IfcElement.ContainedInStructure = NIL), the relationship to the spatial container is handled by the element assembly. 
              Geometry use definition
              The geometric representation of IfcPlate is given by the IfcProductDefinitionShape, allowing multiple geometric representations. Included are: 
              Local Placement
              The local placement for IfcPlate is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement, which is used in the ContainedInStructure inverse attribute, or to a spatial structure element at a higher level, referenced by that. 
              If the IfcPlate is part of an assembly, the PlacementRelTo relationship of IfcLocalPlacement shall point to the local placement of the container element, e.g.  IfcElementAssembly, 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Geometric Representations
              Currently, the use of 'SweptSolid', 'Clipping', 'Brep' and 'MappedRepresentation' representations is supported. In addition the general representation types 'SurfaceModel' and 'BoundingBox' are allowed. The geometry use definition for 'BoundingBox', 'SurfaceModel' and 'Brep' is explained at IfcBuildingElement.
              SweptSolid Representation
              The standard geometric representation of IfcPlate is defined using the 'SweptSolid' representation. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'SweptSolid' 
              Clipping Representation
              The advanced geometric representation of IfcMember is defined using the 'Clipping' geometry. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'Clipping' 
              MappedRepresentation
              In addition to the standard geometric representation of IfcPlate that is defined using the 'SweptSolid' or 'Clipping' geometry, also the 'MappedRepresentation' shall be supported as it allows for reusing the geometry definition of the member type at all occurrences of the same type. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'MappedRepresentation' 
              The same constraints, as given for the standard 'SweptSolid' and the advanced 'SweptSolid' and 'Clipping' geometric representation, shall apply to the MappedRepresentation of the IfcRepresentationMap.
              Use definition for steel members
              When using the IfcPlate for steel members in steel construction applications the following additional conventions apply: 
              Definition by non-geometric properties
              Additional non-geometric properties can be specified through the class IfcPropertySet, which is attached to the inverse attribute IfcObject.IsDefinedBy through the objectified relationship IfcRelDefinesByProperties. This allows for attaching country-specific information to structural members. 
              Decomposition
              An instance of IfcPlate can be part of a decomposition through the IfcRelAggregates relationship - both as sub-ordinate or as a super-ordinate component. 
              If the IfcPlate instance is a sub-ordinate component (i.e. the plate is an add-on part), its local placement shall be relative to that of the super-ordinate instance. 
              As a super-ordinate component, the sub-ordinates of IfcPlate can be other plates or instances of IfcProxy, or IfcDiscreteAccessory (like IfcFastener). 
              Position number
              The position number is assigned through the attribute IfcElement.Tag
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcPlateType">
            <summary>
              The element type IfcPlateType defines a list of commonly shared property set definitions of a thin planar element and an optional set of product representations (i.e. the specific product information, that is common to all occurrences of that product type).
            </summary>
            <remarks>
              Definition from IAI: The element type IfcPlateType defines a list of commonly shared property set definitions of a thin planar element and an optional set of product representations (i.e. the specific product information, that is common to all occurrences of that product type).
              NOTE  The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.
              A plate type is used to define the common properties of a certain type of a plate that may be applied to many instances of that type to assign a specific style. Plate types may be exchanged without being already assigned to occurrences. It is used to define a planar, or plate-like parts to be located by one or several instances of IfcPlate. 
              The occurrences of the IfcPlateType are represented by instances of IfcPlate.
              HISTORY New entity in IFC Release 2x2 
              Use definition for steel members
              When using the IfcPlateType as underlying type for steel members in steel construction applications the following additional conventions apply: 
              Material association:
              The IfcPlateType is associated with exactly one instance of IfcMaterial by the IfcRelAssociatesMaterial relationship. This material association assigns a common material to all occurrences (IfcPlate) of the IfcPlateType. If an individual occurrence has an own material assignment (see IfcPlate), then that assignment overrides the material assignment given at the IfcPlateType. 
              Geometric representation:
              The plate type must have a full geometric representation, normally given by IfcExtrudedAreaSolid. Possibly standardized profile names for the plate have no meaning. The IfcPlateType has (at least) one representation map assigned through the RepresentationMaps relation. The representation map has a full geometric representation given by: 
              Solid: Only IfcExtrudedAreaSolid shall be supported. 
              Profile: Only IfcArbitraryClosedProfileDefshall be supported. The profile represents the contour of the plate. 
              Extrusion: The extrusion axis shall be perpendicular to the swept profile, i.e. pointing into the direction of the z-axis of the position of the IfcExtrudedAreaSolid. Since the profile instance represents the contour of the plate, the extrusion direction corresponds to the plate thickness. 
              Position number:
              The position number is specified in the attribute IfcTypeProduct.Tag. 
              Non geometric profile properties:
              Non geometric profile properties (for instance mechanical properties) are specified through IfcProfileProperties (and its specific subtypes that are related to the cross section). These properties are attached to IfcPlateType by the relationship IfcRelAssociatesProfileProperties. If an individual occurrence has an own profile property assignment (see IfcPlate), then this assignment overrides the profile property assignment given in IfcPlateType. 
              Quantity related properties:
              Quantity related properties,which do not relate to the profile, are specified through IfcElementQuantity (and its specific subtypes). These properties are attached to the IfcPlateType by the relationship IfcRelDefinesByProperties. If an individual occurrence has an own element quantity assignment (see IfcPlate), then this assignment overrides the quantity assignment given in IfcPlateType. The following quantities are foreseen, but will be subjected to the local standard of measurement used: 
              Name Description Value Type 
              CrossSectionArea Total area of the cross section (or profile) of the plate (or its basic surface area). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              GrossVolume Total gross volume of the plate, not taking into account possible processing features (cut-outs, etc.) or openings and recesses. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              NetVolume Total net volume of the plate, taking into account possible processing features (cut-outs, etc.) or openings and recesses. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              GrossWeight Total gross weight of the plate without add-on parts, not taking into account possible processing features (cut-outs, etc.) or openings and recesses. IfcQuantityWeight 
              NetWeight Total net weight of the plate without add-on parts, taking into account possible processing features (cut-outs, etc.) or openings and recesses. IfcQuantityWeight
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcPlateTypeEnum.CURTAIN_PANEL">
            <summary>
              A planar element within a curtain wall, often consisting of a frame with fixed glazing.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcPlateTypeEnum.SHEET">
            <summary>
              A planar, flat and thin element, comes usually as metal sheet, and is often used as an additonal part within an assembly.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcPlateTypeEnum.USERDEFINED">
            <summary>
              User-defined linear element.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcPlateTypeEnum.NOTDEFINED">
            <summary>
              Undefined linear element
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcRailing">
            <summary>
              The railing is a frame assembly adjacent to human circulation spaces and at some space boundaries where it is used in lieu of walls or to compliment walls.
            </summary>
            <remarks>
              Definition of IAI: The railing is a frame assembly adjacent to human circulation spaces and at some space boundaries where it is used in lieu of walls or to compliment walls. Designed to aid humans, either as an optional physical support, or to prevent injury by falling. A list of references to accessory/mounting hardware for this railing might be given by including these assessories (IfcDiscreteAssessory) through the objectified relationship IfcRelAggregates. 
              HISTORY New Entity in IFC Release 2.0 
              Property Set Use Definition:
              The property sets relating to the IfcRailing are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcRailing are part of this IFC release:
              Pset_RailingCommon: common property set for all railing occurrences 
              Geometry Use Definitions 
              The geometric representation of IfcRailing is given by the IfcProductDefinitionShape, allowing multiple geometric representations. Included are: 
              Local placement
              The local placement for IfcRailing is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the same IfcSpatialStructureElement that is used in the ContainedInStructure inverse attribute or to a referenced spatial structure element at a higher level 
              If the IfcRailing, however, is used by an IfcStair or IfcRamp, and this container class defines its own local placement, then the PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the aggregate. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Geometric Representation 
              Currently the use of 'BoundingBox', 'SurfaceModel', 'Brep' and 'MappedRepresentation' representations of IfcRailing are supported. The conventions to use these representations are given at the level of the supertype, IfcBuildingElement.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcRelContainedInSpatialStructure">
            <summary>
              This objectified relationship, IfcRelContainedInSpatialStructure, is used to assign elements to a certain level of the spatial project structure.
            </summary>
            <remarks>
              Definition from IAI: This objectified relationship, IfcRelContainedInSpatialStructure, is used to assign elements to a certain level of the spatial project structure. Any element can only be assigned once to a certain level of the spatial structure. The question, which level is relevant for which type of element, can only be answered within the context of a particular project and might vary within the various regions.
              EXAMPLE A multi-storey space is contained (or belongs to) the building storey at which its ground level is, but it is referenced by all the other building storeys, in which it spans. A lift shaft might be contained by the basement, but referenced by all storeys, through which it spans. The reference relationship can be expressed by the general grouping mechanism estabished in IFC.
              Predefined spatial structure elements to which elements can be assigned are
              site as IfcSite 
              building as IfcBuilding 
              storey as IfcBuildingStorey 
              space as IfcSpace 
              The same element can be assigned to different spatial structure elements depending on the context.
              EXAMPLE A wall might be normally assigned to a storey, however the curtain wall might be assigned to the building and the retaining wall in the terrain might be assigned to the site.
              HISTORY New entity in IFC Release 2x. 
              IFC2x PLATFORM CHANGE: The data type of the attribute RelatedElements has been changed from IfcElement to its supertype IfcProduct with upward compatibility for file based exchange.
              Formal Propositions:
              WR31   :   The relationship object shall not be used to include other spatial structure elements into a spatial structure element. The hierarchy of the spatial structure is defined using IfcRelAggregates.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelContainedInSpatialStructure.RelatedElements">
            <summary>
              Set of products, which are contained within this level of the spatial structure hierarchy.
            </summary>
            <remarks>
              IFC2x PLATFORM CHANGE  The data type has been changed from IfcElement to IfcProduct with upward compatibility
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelContainedInSpatialStructure.RelatingStructure">
            <summary>
              Spatial structure element, within which the el
              Element is contained. Any element can only be contained within one element of the project spatial structure.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcRelCoversSpaces">
            <summary>
              The objectified relationship, IfcRelCoversSpace, relates a space object to one to many coverings, which faces (or are assigned) to the space.
            </summary>
            <remarks>
              Definition from IAI: The objectified relationship, IfcRelCoversSpace, relates a space object to one to many coverings, which faces (or are assigned) to the space.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelCoversSpaces.RelatedSpace">
            <summary>
              Relationship to the space object that is covered.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelCoversSpaces.RelatedCoverings">
            <summary>
              Relationship to the set of coverings covering this space.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcRelReferencedInSpatialStructure">
            <summary>
              This objectified relationship, IfcRelReferencedInSpatialStructure, is used to assign elements in addition to those levels of the project spatial structure, in which they are referenced, but not primarily contained.
            </summary>
            <remarks>
              Definition from IAI: This objectified relationship, IfcRelReferencedInSpatialStructure, is used to assign elements in addition to those levels of the project spatial structure, in which they are referenced, but not primarily contained. 
              NOTE  The primary containment relationship between an element and the spatial structure is handled by IfcRelContainsInSpatialStructure.
              Any element can be referenced to zero, one or several levels of the spatial structure.
              EXAMPLE  A wall might be normally contained within a storey, and since it does not span through several stories, it is not referenced in any additional storey. However a curtain wall might span through several stories, in this case it can be contained within the ground floor, but it would be referenced by all additional stories, it spans.
              Predefined spatial structure elements to which elements can be assigned are
              site as IfcSite 
              building as IfcBuilding 
              storey as IfcBuildingStorey 
              space as IfcSpace 
              The same element class can be assigned to different spatial structure elements depending on the context.
              HISTORY New entity in Release IFC2x Edition 3.
              Use case:
              
              The figure shows the use of IfcRelContainedInSpatialStructure and IfcRelReferencedInSpatialStructure to assign an IfcCurtainWall to two different levels within the spatial structure. It is primarily contained within the ground floor, and additionally referenced within the first floor.  
              Formal Propositions:
              WR31   :   The relationship object shall not be used to include other spatial structure elements into a spatial structure element. The hierarchy of the spatial structure is defined using IfcRelAggregates.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelReferencedInSpatialStructure.RelatedElements">
            <summary>
              Set of products, which are referenced within this level of the spatial structure hierarchy.
            </summary>
            <remarks>
              NOTE  Referenced elements are contained elsewhere within the spatial structure, they are referenced additionally by this spatial structure element, e.g., because they span several stories.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelReferencedInSpatialStructure.RelatingStructure">
            <summary>
              Spatial structure element, within which the element is referenced. Any element can be contained within zeor, one or many elements of the project spatial structure.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcRelServicesBuildings">
            <summary>
              An objectified relationship that defines the relationship between a system and the sites, buildings, storeys or spaces, it serves.
            </summary>
            <remarks>
              Definition from IAI: An objectified relationship that defines the relationship between a system and the sites, buildings, storeys or spaces, it serves. Examples of systems are:
              building service systems (heating, cooling, waste water system) represented by instances of IfcSystem 
              idealized structural analysis systems represented by instances of IfcStructuralAnalysisSystem 
              HISTORY New entity in IFC Release 1.0 
              IFC2x PLATFORM CHANGE  The data type of the attributeRelatedBuildings has been changed from IfcBuilding to its supertype IfcSpatialStructureElement with upward compatibility for file based exchange. The name IfcRelServicesBuildings is a known anomaly, as the relationship is not restricted to buildings anymore.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelServicesBuildings.RelatingSystem">
            <summary>
              System that services the Buildings.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelServicesBuildings.RelatedBuildings">
            <summary>
              Spatial structure elements (including site, building, storeys) that are serviced by the system.
            </summary>
            <remarks>
              IFC2x PLATFORM CHANGE  The data type has been changed from IfcBuilding to IfcSpatialStructureElement with upward compatibility for file based exchange.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcRelSpaceBoundary">
            <summary>
              The space boundary (IfcRelSpaceBoundary) defines the physical or virtual delimiter of a space as its relationship to the surrounding elements.
            </summary>
            <remarks>
              Definition from IAI: The space boundary (IfcRelSpaceBoundary) defines the physical or virtual delimiter of a space as its relationship to the surrounding elements. 
              In the case of physical space boundary, the placement and shape of the boundary may be given, and the building element, providing the boundary, is referenced, 
              In the case of virtual space boundary, the placement and shape of the boundary may be given, but no building element is referenced. 
              The exact definition of how space boundaries are broken down depends on the view, more detailed conventions on how space boundaries are decomposed can only be given at the domain or application type level.
              EXAMPLE: In an architectural or FM related view, a space boundary is defined from the inside of the space and does not take the providing building element into account. A plane area (even if the building element changes) is still seen as a single space boundary. In an HVAC related view, the decomposition of the space boundary depends on the material of the providing building element and the adjacent spaces behind.
              HISTORY: New entity in IFC Release 1.5, the entity has been modified in IFC Release 2x .
              IFC2x PLATFORM CHANGE: The data type of the attributeRelatedBuildingElement has been changed from IfcBuildingElement to its supertype IfcElement with upward compatibility for file based exchange. The data type of the attribute ConnectionGeometry has been changed from IfcConnectionSurfaceGeometry to its supertype IfcConnectionGeometry with upward compatibility for file based exchange.
              The IfcRelSpaceBoundary is defined as an objectified relationship that handles the element to space relationship by objectifying the relationship between an element and the space it bounds. It is given as a one-to-one relationship, but allows each building element to define many such relationship and each space to be defined by many such relationships. 
              Note: With the upward compatible platform extension the IfcRelSpaceBoundary can now also be given to an IfcOpeningElement.
              Use Definitions
              If the IfcRelSpaceBoundary is used to express a virtual boundary, the attribute PhysicalOrVirtualBoundary has to be set to VIRTUAL. If this virtual boundary is between two spaces, and the correct location is of interest, the attribute RelatedBuildingElement shall point to an instance of IfcVirtualElement, and the attribute ConnectionGeometry is required to be inserted. 
              NOTE: The connection geometry, either by a 2D curve or a 3D surface, is used to describe the portion of the "virtual wall" that separates the two spaces. All instances of IfcRelSpaceBoundary given at the adjacent spaces share the same instance of IfcVirtualElement. Each instance of IfcRelSpaceBoundary provides in addition the ConnectionGeometry given within the local placement of each space.
              NOTE: IfcVirtualElement has been introduced in IFC2x2 Addendum 1 to facilitate virtual space boundaries.
              If the IfcRelSpaceBoundary is used to express a physical boundary between two spaces, the attribute PhysicalOrVirtualBoundary has to be set to PHYSICAL. The attribute RelatedBuildingElement has to be given and points to the element providing the space boundary. The attribute ConnectionGeometry may be inserted, in this case it describes the physical space boundary geometically, or it may be omited, in that case it describes a physical space boundary logically.
              Geometry Use Definitions:
              The IfcRelSpaceBoundary may have geometry attached. If geometry is not attached, the relationship between space and building element is handled only on a logical level. If geometry is attached, it is given within the local coordinate systems of the space and (if given in addition) of the building element.
              NOTE: The attributes CurveOnRelatingElement at IfcConnectionCurveGeometry or SurfaceOnRelatingElement at IfcConnectionSurfaceGeometry provide the geometry within the local coordinate system of the IfcSpace, whereas the attributes CurveOnRelatedElement at IfcConnectionCurveGeometry or SurfaceOnRelatedElement at IfcConnectionSurfaceGeometry provide the geometry within the local coordinate system of the subtype of IfcElement.
              The connection geometry, when given, can be given as a curve (for 2D representations of space boundaries) or as a surface (for 3D representations of space boundaries).
              Note: With the upward compatible platform extension the ConnectionGeometry can now also be given by a 2D curve.
              The geometric representation (through the ConnectionGeometry attribute) is defined using either 2D curve geometry or extruded surfaces for space boundaries which bounds prismatic spaces. 
              The following constraints apply to the 2D curve representation: 
              Curve: IfcPolyline, IfcTrimmedCurve or IfcCompositeCurve 
              The following constraints apply to the surface representation: 
              Surface: IfcSurfaceOfLinearExtrusion 
              Profile: IfcArbitraryOpenProfileDef 
              Extrusion: The extrusion direction shall be vertically, i.e., along the positive Z Axis of the co-ordinate system of the containing spatial structure element. 
              Formal Propositions:
              WR1   :   If the space boundary is physical, it shall be provided by an element. If the space boundary is virtual, it shall either have a virtual element providing the space boundary, or none.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelSpaceBoundary.RelatingSpace">
            <summary>
              Reference to one spaces that is delimited by this boundary.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelSpaceBoundary.RelatedBuildingElement">
            <summary>
              Optional. Reference to Element, that defines the Space Boundaries.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelSpaceBoundary.ConnectionGeometry">
            <summary>
              Optional. Physical representation of the space boundary. Provided as a curve or surface given within the LCS of the space.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelSpaceBoundary.PhysicalOrVirtualBoundary">
            <summary>
              Defines, whether the Space Boundary is physical (Physical) or virtual (Virtual).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcRelSpaceBoundary.InternalOrExternalBoundary">
            <summary>
              Defines, whether the Space Boundary is internal (Internal), or external, i.e. adjacent to open space (that can be an partially enclosed space, such as terrace (External).
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcSite">
            <summary>
              Area where construction works are undertaken.
            </summary>
            <remarks>
              Definition from ISO 6707-1:1989: Area where construction works are undertaken.
              Definition from IAI: A defined area of land, possibly covered with water, on which the project construction is to be completed. A site may be used to erect building(s) or other AEC products. 
              A site (IfcSite) may include a definition of the single geographic reference point for this site (global position using Longitude, Latitude and Elevation) for the project. This definition is given for informational purposes only; it is not intended to provide an absolute placement in relation to the real world. 
              The geometrical placement of the site, defined by the IfcLocalPlacement, shall be always relative to the spatial structure element, in which this site is included, or absolute, i.e. to the world coordinate system, as established by the geometric representation context of the project. 
              A project may span over several connected or disconnected sites. Therefore site complex provides for a collection of sites included in a project. A site can also be decomposed in parts, where each part defines a site section. This is defined by the composition type attribute of the supertype IfcSpatialStructureElements which is interpreted as follow:
              COMPLEX = site complex 
              ELEMENT = site 
              PARTIAL = site section 
              HISTORY: New entity in IFC Release 1.0.
              Property Set Use Definition
              The property sets relating to the IfcSite are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcSite are part of this IFC release:
              Pset_SiteCommon: common property set for all types of site 
              Quantity Use Definition
              The quantities relating to the IfcSite are defined by the IfcElementQuantity and attached by the IfcRelAssignsProperties. The following quantities are foreseen, but will be subjected to the local standard of measurement:
              Name Description Value Type 
              Perimeter Perimeter of the Site boundary IfcQuantityLength  
              GrossArea Gross area for this site (horizontal projections) IfcQuantityArea 
              Spatial Structure Use Definition
              The IfcSite is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical). The spatial structure elements are linked together by using the objectified relationship IfcRelAggregates. The IfcSite references them by its inverse relationships:
              IfcSite.Decomposes -- referencing (IfcProject || IfcSite) by IfcRelAggregates.RelatingObject, If it refers to another instance of IfcSite, the referenced IfcSite needs to have a different and higher CompositionType, i.e. COMPLEX (if the other IfcSite has ELEMENT), or ELEMENT (if the other IfcSite has PARTIAL). 
              IfcSite.IsDecomposedBy -- referencing (IfcSite || IfcBuilding || IfcSpace) by IfcRelAggregates.RelatedObjects. If it refers to another instance of IfcSite, the referenced IfcSite needs to have a different and lower CompositionType, i.e. ELEMENT (if the other IfcSite has COMPLEX), or PARTIAL (if the other IfcSite has ELEMENT). 
              If there are building elements and/or other elements directly related to the IfcSite (like a fence, or a shear wall), they are associated with the IfcSite by using the objectified relationship IfcRelContainedInSpatialStructure. The IfcIfcSite references them by its inverse relationship:
              IfcSite.ContainsElements -- referencing any subtype of IfcProduct (with the exception of other spatial structure element) by IfcRelContainedInSpatialStructure.RelatedElements. 
              Geometry Use Definitions 
              The geometric representation of IfcSite is given by the IfcProductDefinitionShape and IfcLocalPlacement allowing multiple geometric representations. 
              Local placement
              The local placement for IfcSite is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point to the IfcSpatialStructureElement of type "IfcSite", if relative placement is used (e.g. to position a site relative a a site complex, or a site section to a site). 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. If there is only one site object, then this is the default situation. 
              Foot Print Representation 
              The foot print representation of IfcSite is given by either a single 2D curve (such as IfcPolyline or IfcCompositeCurve), or by a list of 2D curves (in case of inner boundaries).
              The representation identifier and type of this geometric representation of IfcSite is:
              IfcShapeRepresentation.RepresentationIdentifier = 'FootPrint' 
              IfcShapeRepresentation.RepresentationType = 'GeometricCurveSet' 
              Survey Points Representation 
              The survey point representation of IfcSite is defined using a set of survey points and optionally breaklines. The breaklines are restricted to only connect points given in the set of survey points. Breaklines, if given, are used to constrain the triangulation.
              The representation identifier and type of this geometric representation of IfcSite is:
              IfcShapeRepresentation.RepresentationIdentifier = 'SurveyPoints' 
              IfcShapeRepresentation.RepresentationType = 'GeometricSet' 
              A set of survey points, given as 3D Cartesian points within the object coordinate system of the site. 
              The set of IfcCartesianPoint is included in the set of IfcGeometricSet.Elements.
             
              result after facetation 
              A set of survey points, given as 3D Cartesian points, and a set of break points, given as a set of lines, connecting some survey points, within the object coordinate system of the site. 
              The set of IfcCartesianPoint and the set of IfcPolyline are included in the set of IfcGeometricSet.Elements.
             
              result after facetation taking the breaklines into account. 
              NOTE  The geometric representation of the site has been based on the ARM level description of the site_shape_representation given within the ISO 10303-225 "Building Elements using explicit shape representation".
              Facetation Representation 
              The facetation representation of IfcSite is defined using a surface model, based on the IfcFaceBasedSurfaceModel or on the IfcShellBasedSurfaceModel. Normally the surface model is the result after triangulation of the site survey points.
              The representation identifier and type of this representation of IfcSite is:
              IfcShapeRepresentation.RepresentationIdentifier = 'Facetation' 
              IfcShapeRepresentation.RepresentationType = 'SurfaceModel' 
              Body Representation 
              The body (or solid model) representation of IfcSite is defined using a faceted boundary representation based on the IfcFacetedBrep or on the IfcFacetedBrepWithVoids. 
              The representation identifier and type of this representation of IfcSite is:
              IfcShapeRepresentation.RepresentationIdentifier = 'Body' 
              IfcShapeRepresentation.RepresentationType = 'Brep'
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSite.RefLatitude">
            <summary>
              Optional. World Latitude at reference point (most likely defined in legal description). Defined as integer values for Degrees, minutes, seconds.
            </summary>
            <remarks>
              Latitudes are measured relative to the equator, north of the equator by positive values - from 0 till +90, south of the equator by negative values - from 0 till -90.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSite.RefLongitude">
            <summary>
              Optional. World Longitude at reference point (most likely defined in legal description). Defined as integer values for degrees, minutes, seconds.
            </summary>
            <remarks>
              Longitudes are measured relative to Greenwich as the prime meridian: longitudes west of Greenwich have positive values - from 0 till +180, longitudes east of Greenwich have negative values - from 0 till -180.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSite.RefElevation">
            <summary>
              Optional. Datum elevation relative to sea level.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSite.LandTitleNumber">
            <summary>
              Optional. The land title number (designation of the site within a regional system).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSite.SiteAddress">
            <summary>
              Optional. Address given to the site for postal purposes.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcSpace">
            <summary>
              A space represents an area or volume bounded actually or theoretically. Spaces are areas or volumes that provide for certain functions within a building.
            </summary>
            <remarks>
              Definition from IAI: A space represents an area or volume bounded actually or theoretically. Spaces are areas or volumes that provide for certain functions within a building.
              A space is (if specified) associated to a building storey (or in case of exterior spaces to a site). A space may span over several connected spaces. Therefore a space group provides for a collection of spaces included in a storey. A space can also be decomposed in parts, where each part defines a partial space. This is defined by the composition type attribute of the supertype IfcSpatialStructureElement which is interpreted as follow:
              COMPLEX = space group 
              ELEMENT = space 
              PARTIAL = partial space 
              The following guidelines should apply for using the Name, Description, LongName and ObjectType attributes. 
              Name holds the unique name (or space number) from the plan. 
              Description holds any additional information field the user may have specified, there are no further recommendations. 
              LongName holds the full name of the space, it is often used in addition to the Name, if a number is assigned to the room, then the descriptive name is exchanged as LongName. 
              ObjectType holds the space type, i.e. usually the functional category of the space . 
              HISTORY New Entity in IFC Release 1.0 
              Property Set Use Definition:
              The property sets relating to the IfcSpace are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcSpace are part of this IFC release:
              Pset_SpaceCommon: common property set for all types of spaces 
              Pset_SpaceParking: specific property set for only those spaces that are used to define parking spaces by ObjectType = 'Parking' 
              Pset_SpaceParkingAisle: specific property set for only those spaces that are used to define parking aisle by ObjectType = 'ParkingAisle' 
              Pset_SpaceFireSafetyRequirements: common property set for all types of spaces to capture the fire safety requirements 
              Pset_SpaceLightingRequirements: common property set for all types of spaces to capture the lighting requirements 
              Pset_SpaceOccupancyRequirements: common property set for all types of spaces to capture the occupancy requirements 
              Pset_SpaceThermalRequirements: common property set for all types of spaces to capture the thermal requirements 
              Pset_SpaceThermalDesign: common property set for all all types of spaces to capture building service design values 
              Quantity Use Definition:
              The quantities relating to the IfcSpace are defined by the IfcElementQuantity and attached by the IfcRelDefinesByProperties. The following quantities are foreseen, but will be subjected to the local standard of measurement:
              Name Description Value Type 
              AverageHeight Floor Height (without flooring) to Ceiling height (without suspended ceiling) for this space (measured from top of slab of this space to the bottom of slab of space above); the average shall be taken if room shape is not prismatic.  IfcQuantityLength  
              AverageGrossHeight Floor Height to Floor Height for this space (measured from top of slab of this space to top of slab of space above); the average shall be taken if room shape is not prismatic.  IfcQuantityLength 
              AverageClearHeight Clear Height between floor level (including finish) and ceiling level (including finish and sub construction) of this space; the average shall be taken if room shape is not prismatic. IfcQuantityLength 
              GrossPerimeter Calculated gross perimeter at the floor level of this space. It all sides of the space, including those parts of the perimeter that are created by virtual boundaries and openings. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityLength 
              NetPerimeter Calculated net perimeter at the floor level of this space. It normally excludes those parts of the perimeter that are created by by virtual boundaries and openings. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityLength 
              GrossFloorArea Calculated sum of all floor areas covered by the space. It normally includes the area covered by elements inside the space (columns, inner walls, etc.). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              NetFloorArea Calculated sum of all usable floor areas covered by the space. It normally excludes the area covered by elements inside the space (columns, inner walls, etc.), floor openings, or other protruding elements. Special rules apply for areas that have a low headroom. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              GrossCeilingArea Calculated sum of all ceiling areas of the space. It normally includes the area covered by elements inside the space (columns, inner walls, etc.). The ceiling area is the real (and not the projected) area (e.g. in case of sloped ceilings). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              NetCeilingArea Calculated sum of all ceiling areas covered by the space. It normally excludes the area covered by elements inside the space (columns, inner walls, etc.) or by ceiling openings. The ceiling area is the real (and not the projected) area (e.g. in case of sloped ceilings). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              GrossWallArea Calculated sum of all wall areas bounded by the space. It normally includes the area covered by elements inside the wall area (doors, windows, other openings, etc.). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              NetWallArea Calculated sum of all wall areas bounded by the space. It normally excludes the area covered by elements inside the wall area (doors, windows, other openings, etc.). Special rules apply for areas that have a low headroom. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              GrossVolume Calculated gross volume of all areas enclosed by the space (normally including the volume of construction elements inside the space). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              NetVolume Calculated net volume of all areas enclosed by the space (normally excluding the volume of construction elements inside the space). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              Spatial Structure Use Definition
              The IfcSpace is used to build the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical). The spatial structure elements are linked together by using the objectified relationship IfcRelAggregates. The IfcSpace references them by its inverse relationships:
              IfcSpace.Decomposes -- referencing (IfcSite || IfcBuildingStorey || IfcSpace) by IfcRelAggregates.RelatingObject, If it refers to another instance of IfcSpace, the referenced IfcSpace needs to have a different and higher CompositionType, i.e. COMPLEX (if the other IfcSpace has ELEMENT), or ELEMENT (if the other IfcSpace has PARTIAL). 
              IfcSpace.IsDecomposedBy -- referencing (IfcSpace) by IfcRelAggregates.RelatedObjects. If it refers to another instance of IfcSpace, the referenced IfcSpace needs to have a different and lower CompositionType, i.e. ELEMENT (if the other IfcSpace has COMPLEX), or PARTIAL (if the other IfcSpace has ELEMENT). 
              If there are building elements and/or other elements directly related to the IfcSpace (like most furniture and distribution elements), they are associated with the IfcSpace by using the objectified relationship IfcRelContainedInSpatialStructure. The IfcSpace references them by its inverse relationship:
              IfcSpace.ContainsElements -- referencing any subtype of IfcProduct (with the exception of other spatial structure element) by IfcRelContainedInSpatialStructure.RelatedElements. 
              Attribute Use Definition:  The following figure describes the heights and elevations of the IfcSpace.
             
              Geometry Use Definitions
              The geometric representation of IfcSpace is given by the IfcProductDefinitionShape and IfcLocalPlacement allowing multiple geometric representations. 
              NOTE1 If the surrounding instances of IfcRelSpaceBoundary define a complete geometric representation of a particular representation view for that space, then this view shall be omitted from the multiple representations of IfcSpace.
              NOTE2 In cases of inconsistency between the geometric representation of the IfcSpace and its surrounding IfcRelSpaceBoundary, the geometric representation of the space should take priority over the geometric representation of the surrounding space boundaries. 
              Local Placement
              The local placement for IfcSpace is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point to the local placement of the IfcSpatialStructureElement of type "IfcBuildingStorey", if relative placement is used, or of type "IfcSpace" (e.g. to position a space relative to a space group, or a partial space to a space). 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Geometric Representations
              Currently, the use of a 2D 'FootPrint' representation of type 'Curve2D' or 'GeometricCurveSet' and a 3D 'Body' representation of type 'SweptSolid, 'Clipping' and 'Brep' is supported.
              'Foot' Print representation
              The 2D geometric representation of IfcSpace is defined using the 'Curve2D' or 'GeometricCurveSet' geometry. The following attribute values should be inserted
              IfcShapeRepresentation.RepresentationIdentifier = 'FootPrint'. 
              IfcShapeRepresentation.RepresentationType = 'Curve2D' or 'GeometricCurveSet' . 
              The following constraints apply to the 2D representation: 
              Profile: IfcBoundedCurve is required, using IfcPolyline for faceted space contours or IfcCompositeCurve for space contours with arc segments. For spaces with inner boundaries, a set of IfcBoundedCurve's is used, that should be grouped into an IfcGeometricCurveSet. 
              Two-dimensional bounded curve representing the foot print of IfcSpace.
             
              'Swept Solid' representation
              The standard geometric representation of IfcSpace is defined using the swept area solid geometry. The following attribute values should be inserted
              IfcShapeRepresentation.RepresentationIdentifier = 'Body'. 
              IfcShapeRepresentation.RepresentationType = 'SweptSolid'. 
              The following constraints apply to the standard representation: 
              Solid: IfcExtrudedAreaSolid is required, 
              Profile: IfcArbitraryClosedProfileDef is required, IfcArbitraryProfileDefWithVoids shall be supported. 
              Extrusion: The extrusion direction shall be vertically, i.e., along the positive Z Axis of the co-ordinate system of the containing spatial structure element. 
              Extrusion of an arbitrary profile definition with voids into the swept area solid of IfcSpace.
             
              'Clipping' representation
              The advanced geometric representation of IfcSpace is defined using the swept area solid geometry that can be subjected to a Boolean expression. The following attribute values should be inserted. 
              IfcShapeRepresentation.RepresentationIdentifier = 'Body'. 
              IfcShapeRepresentation.RepresentationType = 'Clipping'. 
              The following additional constraints apply to the advanced representation: 
              Solid: see standard geometric representation, 
              Profile: see standard geometric representation, 
              Extrusion: see standard geometric representation, 
              Boolean result: The difference operation with the second operand being of type IfcHalfSpaceSolid (or one of its subtypes) shall be supported. 
              Extrusion of an arbitrary profile definition into the swept area solid. The solid and an half space solid are operands of the Boolean result of IfcSpace. 
              'Brep' representation
              The fallback advanced geometric representation of IfcSpace is defined using the Brep solid geometry. may be represented as a single or multiple instances of IfcFacetedBrep or IfcFacetedBrepWithVoids. The Brep representation allows for the representation of complex element shape. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used: 
              IfcShapeRepresentation.RepresentationIdentifier : 'Body' 
              IfcShapeRepresentation.RepresentationType : 'Brep'
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSpace.InteriorOrExteriorSpace">
            <summary>
              Defines, whether the Space is interior (Internal), or exterior (External), i.e. part of the outer space.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSpace.ElevationWithFlooring">
            <summary>
              Optional. Level of flooring of this space; the average shall be taken, if the space ground surface is sloping or if there are level differences within this space.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSpace.HasCoverings">
            <summary>
              Inverse. Reference to IfcCovering by virtue of the objectified relationship IfcRelCoversSpaces. 
              It defines the concept of a space having coverings assigned. Those coverings may represent different flooring, or tiling areas.
            </summary>
            <remarks>
              NOTE  Coverings are often managed by the space, and not by the building element, which they cover.
              IFC2x Edition3 CHANGE  New inverse relationship. Upward compatibility for file based exchange is guaranteed.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcSpace.BoundedBy">
            <summary>
              Inverse. Reference to Set of Space Boundaries that defines the physical or virtual delimitation of that Space.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcTransportElement">
            <summary>
              Generalization of all transport related objects that move people, animals or goods within a building or building complex.
            </summary>
            <remarks>
              Definition from IAI: Generalization of all transport related objects that move people, animals or goods within a building or building complex. The IfcTransportElement defines the occurrence of a covering type, that (if given) is expressed by the IfcTransportElementType.
              EXAMPLE: Transportation elements include elevator (lift), escalator, moving walkway, etc.
              IFC2x PLATFORM CHANGE: The attribute OperationType is now optional and should only be inserted when there is no type information, given by IfcTransportElementType, is assigned to the IfcTransportElement occurrence by IfcRelDefinesByType.
              HISTORY New entity in IFC Release 2x.
              Property Set Use Definition:
              The property sets relating to the IfcTransportElement are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcTransportElement are part of this IFC release:
              Pset_TransportElementCommon: common property set for all transport element occurrences 
              Pset_TransportElementElevator: specific property set for all occurrences of transport elements with the PredefinedType: ELEVATOR 
              Geometry Use Definitions:
              The geometric representation of IfcTransportElement is given by the IfcProductDefinitionShape, allowing multiple geometric representation. 
              Local Placement
              The local placement for IfcTransportElement is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement , which is used in the ContainedInStructure inverse attribute, or to a spatial structure element at a higher level, referenced by that. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              SurfaceModel Representation
              Any IfcTransportElement (so far no further constraints are defined at the level of its subtypes) may be represented as a single or multiple surface models, based on either shell or face based models. It is ensured by assigning the value 'SurfaceModel' to the RepresentationType attribute of IfcShapeRepresentation. In some cases it may be useful to also expose a simple representation as a bounding box representation of the same complex shape.
              Brep Representation
              Any IfcTransportElement (so far no further constraints are defined at the level of its subtypes) may be represented as a single or multiple Boundary Representation elements (which are restricted to faceted Brep with or without voids). The Brep representation allows for the representation of complex element shape. It is ensured by assigning the value 'Brep' to the RepresentationType attribute of IfcShapeRepresentation. In some cases it may be useful to also expose a simple representation as a bounding box representation of the same complex shape.
              MappedRepresentation
              The new mapped item, IfcMappedItem, should be used if appropriate as it allows for reusing the geometry definition of the transport element type at occurrences of the same equipement type. In this case the IfcShapeRepresentation.RepresentationType = MappedRepresentation is used.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcTransportElement.OperationType">
            <summary>
              Optional. Predefined type for transport element.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcTransportElement.CapacityByWeight">
            <summary>
              Optional. Capacity of the transport element measured by weight.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ProductExtension.IfcTransportElement.CapacityByNumber">
            <summary>
              Optional. Capacity of the transportation element measured in numbers of person.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcVirtualElement">
            <summary>
              A special element used to provide imaginary boundaries, such as between two adjacent, but not separated, spaces.
            </summary>
            <remarks>
              Definition from IAI: A special element used to provide imaginary boundaries, such as between two adjacent, but not separated, spaces. Virtual elements are usually not displayed and does not have quantities and other measures. Therefore IfcVirtualElement does not have material information and quantities attached.
              NOTE The main purpose of IfcVirtualElement is the provision of a virtual space boundary. The IfcVirtualElement provides the 2D curve or 3D surface representation of the virtual space connection and is referenced by two instances of IfcRelSpaceBoundary, each pointing to one of the two adjacent IfcSpaces.
              HISTORY New entity in IFC Release 2x2 Addendum 1. 
              IFC2x2 ADDENDUM CHANGE: The entity IfcVirtualElement has been added. Upward compatibility for file based exchange is guaranteed.
              Geometry Use Definitions
              The geometric representation of any IfcVirtualElement is given by the IfcProductDefinitionShape and IfcLocalPlacement allowing multiple geometric representations.
              Local Placement
              The local placement for IfcVirtualElement is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement that is used in the ContainedInStructure inverse attribute or to a referenced spatial structure element at a higher level. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Geometric Representations
              Currently, the use of 'FootPrint' and 'Surface' representation is supported.
              Two-dimensional Representation using foot print representation
              The 2D geometric representation of IfcVirtualElement is defined using the 'FootPring' or 'Surface' representation. The following attribute values should be inserted 
              IfcShapeRepresentation.RepresentationIdentifier = 'FootPrint'. 
              IfcShapeRepresentation.RepresentationType = 'Curve2D' or 'GeometricCurveSet' . 
              The following constraints apply to the 2D curve representation: 
              Curve: IfcPolyline, IfcTrimmedCurve or IfcCompositeCurve 
              Three-dimensional Representation using surface model representation
              The 3D geometric representation of IfcVirtualElement is defined using the 'SurfaceModel' geometry. The following attribute values should be inserted 
              IfcShapeRepresentation.RepresentationIdentifier = 'Surface'. 
              IfcShapeRepresentation.RepresentationType = 'GeometricSet . 
              The following constraints apply to the 3D surface representation: 
              Surface: IfcSurfaceOfLinearExtrusion 
              Profile: IfcArbitraryOpenProfileDef 
              Extrusion: The extrusion direction shall be vertically, i.e., along the positive Z Axis of the co-ordinate system of the containing spatial structure element.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.ProductExtension.IfcZone">
            <summary>
              A zone (IfcZone) is an aggregation of spaces, partial spaces or other zones.
            </summary>
            <remarks>
              Definition from IAI: A zone (IfcZone) is an aggregation of spaces, partial spaces or other zones. Zone structures may not be hierarchical (in contrary to the spatial structure of a project - see IfcSpatialStructureElement), i.e. one individual IfcSpace may be associated with zero, one, or several IfcZone's. IfcSpace's are aggregated into an IfcZone by using the objectified relationship IfcRelAssignsToGroup as specified at the supertype IfcGroup.
              NOTE  Certain use cases may restrict the freedom of non hierarchical relationships. In some building service use cases the zone denotes a view based delimited volume for the purpose of analysis and calculation. This type of zone cannot overlap with respect to that analysis, but may overlap otherwise.
              NOTE  One of the purposes of a zone is to define a fire compartmentation. In this case it defines the geometric information about the fire compartment (through the contained spaces) and information, whether this compartment is ventilated or sprinkler protected. In addition the fire risk code and the harard type can be added, the coding is normally defined within a national fire regulation. All that information is available within the relevant property sets. 
              RECOMMENDATION  In case of a zone denoting a (fire) compartment, the following types should be used, if applicable, as values of the ObjectType attribute:
              FireCompartment - a zone of spaces, collected to represent a single fire compartment. 
              ElevatorShaft - a collection of spaces within an elevator, potentially going through many storeys. 
              RisingDuct 
              RunningDuct 
              Additional classifications of the IfcZone, as provided by a national classification system, can be assigned by using the IfcRelAssociatesClassification relationship.
              Formal Propositions:
              WR1   :   A Zone is grouped by the objectified relationship IfcRelAssignsToGroup. Only objects of type IfcSpace or IfcZone are allowed as RelatedObjects.  
              HISTORY New entity in IFC Release 1.0 
              Property Set Use Definition:
              The property sets relating to the IfcZone are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcZone are part of this IFC release:
              Pset_ZoneCommon: common property set for all types of zone 
              Pset_SpaceFireSafetyRequirements: common property set for all types of zones to capture the fire safety requirements 
              Pset_SpaceLightingRequirements: common property set for all types of zones to capture the lighting requirements 
              Pset_SpaceOccupancyRequirements: common property set for all types of zones to capture the occupancy requirements 
              Pset_SpaceThermalRequirements: common property set for all types of zones to capture the thermal requirements
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcRailingTypeEnum">
            <summary>
              Enumeration defining the valid types of railings that can be predefined using the enumeration values.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRailingTypeEnum.HANDRAIL">
            <summary>
              A type of railing designed to serve as an optional structural support for loads applied by human occupants (at hand height). Generally located adjacent to ramps and stairs. Generally floor or wall mounted.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRailingTypeEnum.GUARDRAIL">
            <summary>
              A type of railing designed to guard human occupants from falling off a stair, ramp or landing where there is a vertical drop at the edge of such floors/landings.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRailingTypeEnum.BALUSTRADE">
            <summary>
              Similar to the definitions of a guardrail except the location is at the edge of a floor, rather then a stair or ramp. Examples are balustrates at roof-tops or balconies.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRailingTypeEnum.USERDEFINED">
            <summary>
              User-defined railing element, a term to identify the user type is given by the attribute IfcRailing.ObjectType.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRailingTypeEnum.NOTDEFINED">
            <summary>
              Undefined railing element, no type information available.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcRamp">
            <summary>
              Inclined way or floor joining two surfaces at different levels.
            </summary>
            <remarks>
              Definition from ISO 6707-1:1989: Inclined way or floor joining two surfaces at different levels.
              Definition of IAI: An vertical passageway which provides a human circulation link between one floor level and another floor level at a different elevation. It may include a landing as an intermediate floor slab. A ramp normally does not include steps (stepped ramps are out of scope for this IFC Release). 
              The ramp is a container entity that aggregates all components of the ramp, it represents. The aggregation is handled via the IfcRelAggregates relationship, relating an IfcRamp with the related flights (IfcRampFlight) and landings (IfcSlab with type 'Landing').
              HISTORY New Entity in IFC Release 2.0.
              Property Set Use Definition:
              The property sets relating to the IfcRamp are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcRamp are part of this IFC release:
              Pset_RampCommon: common property set for all ramp occurrences 
              Geometry Use Definitions:
              The geometric representation of IfcRamp is given by the IfcProductDefinitionShape, allowing multiple geometric representations. Independent geometric representations should only be used when the IfcRamp is not defined as an aggregate. If defined as an aggregate, the geometric representation is the sum of the representation of the components within the aggregate. 
              Local placement
              The local placement for IfcRamp is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement that is used in the ContainedInStructure inverse attribute or to a referenced spatial structure element at a higher level. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              If the LocalPlacement is given for the IfcRamp, then all components, which are aggregated to the ramp should use this placement as their relative placement.
              Geometric Representations
              If the IfcRamp has components (referenced by SELF\IfcProduct.IsDecomposedBy) then no independent geometric representation shall be defined for the IfcRamp. The IfcRamp is then geometrically represented by the geometric representation of its components. The components are accessed via SELF\IfcProduct.IsDecomposedBy[1].RelatedObjects.
              If the IfcRamp has no components defined (empty set of SELF\IfcProduct.IsDecomposedBy) then the IfcRamp may be represented by an IfcShapeRepresentation with the RepresentationType = 'Brep'.
              Illustration:
              IfcRamp defining only the local
              Formal Propositions:
              WR1   :   Either the ramp is not decomposed into its flights and landings (the ramp can have independent geometry), or the geometry shall not be given at IfcRamp directly.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcRamp.ShapeType">
            <summary>
              Predefined shape types for a stair that are specified in an Enum.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcRampFlight">
            <summary>
              Inclined slab segment, normally providing a human circulation link between two landings, floors or slabs at different elevations.
            </summary>
            <remarks>
              Definition from IAI: Inclined slab segment, normally providing a human circulation link between two landings, floors or slabs at different elevations. 
              An IfcRampFlight is normally aggregated by a ramp (IfcRamp) through the IfcRelAggregates relationship, the ramp flight is then included in the set of IfcRelAggregates.RelatedObjects.
              A ramp flight normally connects the floor slab of zero to two different storeys (or partial storeys) within a building. The connection relationship between the IfcRampFlight and the IfcSlab is expressed using the IfcRelConnectsElements relationship.
              HISTORY New Entity in IFC Release 2.0.
              Property Set Use Definition:
              The property sets relating to the IfcRampFlight are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcRampFlight are part of this IFC release:
              Pset_RampFlightCommon: common property set for all ramp flight occurrences 
              Geometry Use Definitions:
              The geometric representation of IfcRampFlight is given by the IfcProductDefinitionShape, allowing multiple geometric representations. Included are:
              Local placement
              The local placement for IfcRampFlight is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement that is used in the ContainedInStructure inverse attribute or to a referenced spatial structure element at a higher level. 
              If the IfcRampFlight, however, is used by an IfcRamp, and this container class defines its own local placement, then the PlacementRelTo relationship of IfcLocalPlacement shall point to the local placement of the aggregate. 
              Standard Geometric Representation
              The standard geometric representation of IfcRampFlight is defined using the swept area geometry. The following constraints apply to the standard representation: 
              Solid: IfcExtrudedAreaSolid is required, 
              Profile: IfcRectangleProfileDef shall be supported. 
              Extrusion: The profile shall be extruded in any direction relative to the XY plane of the position coordinate system of the IfcExtrudedAreaSolid. Therefore non-perpendicular sweep operation has to be supported. It might be further constrained to be in the direction of the global z-axis in implementers agreements. 
              Example of geometric representation of IfcRampFlight.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcRampFlightTypeEnum">
            <summary>
              This enumeration defines the different types of linear elements an IfcRampFlightType object can fulfill:
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRampFlightTypeEnum.STRAIGHT">
            <summary>
              A ramp flight with a straight walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRampFlightTypeEnum.SPIRAL">
            <summary>
              A ramp flight with a circular or elliptic walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRampFlightTypeEnum.USERDEFINED">
            <summary>
              User-defined ramp flight.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRampFlightTypeEnum.NOTDEFINED">
            <summary>
              Undefined ramp flight.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcRampTypeEnum">
            <summary>
              This enumeration defines the basic configuration of the ramp type in terms of the number and shape of ramp flights.
            </summary>
            <remarks>
              Definition from IAI: This enumeration defines the basic configuration of the ramp type in terms of the number and shape of ramp flights. The type also distinguished turns by landings. In addition the subdivision of the straight and changing direction ramps is included. The ramp configurations are given for ramps without and with one and two landings.
              Ramps which are subdivided into more than two landings have to be defined by the geometry only. Also ramps with non-regular shapes have to be defined by the geometry only. The type of such ramps is USERDEFINED.
              HISTORY New Enumeration in IFC Release 2.0.
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRampTypeEnum.STRAIGHT_RUN_RAMP">
            <summary>
              A ramp - which is a sloping floor, walk, or roadway - connecting two levels. The straight ramp consists of one straight flight without turns or winders.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRampTypeEnum.TWO_STRAIGHT_RUN_RAMP">
            <summary>
              A straight ramp consisting of two straight flights without turns but with one landing.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRampTypeEnum.QUARTER_TURN_RAMP">
            <summary>
              A ramp making a 90° turn, consisting of two straight flights connected by a quarterspace landing. The direction of the turn is determined by the walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRampTypeEnum.TWO_QUARTER_TURN_RAMP">
            <summary>
              A ramp making a 180° turn, consisting of three straight flights connected by two quarterspace landings. The direction of the turn is determined by the walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRampTypeEnum.HALF_TURN_RAMP">
            <summary>
              A ramp making a 180° turn, consisting of two straight flights connected by a halfspace landing. The orientation of the turn is determined by the walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRampTypeEnum.SPIRAL_RAMP">
            <summary>
              A ramp constructed around a circular or elliptical well without newels and landings.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRampTypeEnum.USERDEFINED">
            <summary>
              Free form ramp (user defined operation type)
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcRelConnectsPathElements.RelatingPriorities">
            <summary>
              Priorities for connection. It refers to the layers of the RelatingObject.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcRelConnectsPathElements.RelatedPriorities">
            <summary>
              Priorities for connection. It refers to the layers of the RelatedObject.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcRelConnectsPathElements.RelatedConnectionType">
            <summary>
              Indication of the connection type in relation to the path of the RelatingObject.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcRelConnectsPathElements.RelatingConnectionType">
            <summary>
              Indication of the connection type in relation to the path of the RelatingObject.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcRelConnectsPathElements.RelatedLayerCount">
            <summary>
              Derived. Number of layers of the RelatedObjectDerived. Number of layers of the RelatingObject.Number of layers of the RelatingObject..
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcRelConnectsPathElements.RelatingLayerCount">
            <summary>
              Derived. Number of layers of the RelatingObject.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum">
            <summary>
              This enumeration defines the basic configuration of the roof in terms of the different roof shapes.
            </summary>
            <remarks>
              Definition from IAI: This enumeration defines the basic configuration of the roof in terms of the different roof shapes. 
              Roofs which are subdivided into more than these basic shapes have to be defined by the geometry only. Also roofs with non-regular shapes (free form roof ) have to be defined by the geometry only. The type of such roofs is FREEFORM.
              HISTORY New Enumeration in IFC Release 2x.
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum.FLAT_ROOF">
            <summary>
              A roof having no slope, or one with only a slight pitch so as to drain rainwater.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum.SHED_ROOF">
            <summary>
              A roof having a single slope.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum.GABLE_ROOF">
            <summary>
              A roof sloping downward in two parts from a central ridge, so as to form a gable at each end.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum.HIP_ROOF">
            <summary>
              A roof having sloping ends and sides meeting at an inclined projecting angle.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum.HIPPED_GABLE_ROOF">
            <summary>
              A roof having a hipped end truncating a gable.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum.GAMBREL_ROOF">
            <summary>
              A ridged roof divided on each side into a shallower slope above a steeper one.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum.MANSARD_ROOF">
            <summary>
              A roof having on each side a steeper lower part and a shallower upper part.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum.BARREL_ROOF">
            <summary>
              A roof or ceiling having a semicylindrical form.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum.RAINBOW_ROOF">
            <summary>
              A gable roof in the form of a broad Gothic arch, with gently sloping convex surfaces.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum.BUTTERFLY_ROOF">
            <summary>
              A roof having two slopes, each descending inward from the eaves.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum.PAVILION_ROOF">
            <summary>
              A pyramidal hip roof.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum.DOME_ROOF">
            <summary>
              A hemispherical hip roof.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum.FREEFORM">
            <summary>
              Free form roof
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcRoofTypeEnum.NOTDEFINED">
            <summary>
              No specification given
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcSlab">
            <summary>
              A slab is a component of the construction that normally encloses a space vertically. The slab may provide the lower support (floor) or upper construction (roof slab) in any space in a building.
            </summary>
            <remarks>
              Definition from IAI: A slab is a component of the construction that normally encloses a space vertically. The slab may provide the lower support (floor) or upper construction (roof slab) in any space in a building. It shall be noted, that only the core or constructional part of this construction is considered to be a slap. The upper finish (flooring, roofing) and the lower finish (ceiling, suspended ceiling) are considered to be coverings. A special type of slab is the landing, described as a floor section to which one or more stair flights or ramp flights connect. May or may not be adjacent to a building storey floor. 
              A slab may have openings, such as floor openings. They are defined by an IfcOpeningElement attached to the slab using the inverse relationship HasOpenings pointing to IfcRelVoidsElement.
              A particular usage type for the IfcSlab can be given (if type information is available) by refering to the type object IfcSlabType, using the IfcRelDefinesByType relationship, or (if only occurrence information is given) by using the PredefinedType attribute. Values of the enumeration are 'Floor' (the default), 'Roof', 'Landing', 'Baseslab', 'Notdefined'. If the value 'Userdefined' is chosen, the user defined value needs to be given at the attribute ObjectType. 
              HISTORY: New entity in IFC Release 2.0, it is a merger of the two previous entities IfcFloor, IfcRoofSlab, introduced in IFC Release 1.0 
              Type Use Definition
              IfcSlabdefines the occuurence of any slab, common information about slab types (or styles) is handled by IfcSlabType. The IfcSlabType (if present) may establish the common type name, usage (or predefined) type, common set of properties, common material layer set, and common shape representations (using IfcRepresentationMap). The IfcSlabType is attached using the IfcRelDefinedByType.RelatingType objectified relationship and is accessible by the inverse IsDefinedBy attribute.
              Property Set Use Definition:
              The property sets relating to the IfcSlab are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcSlab are part of this IFC release:
              Pset_SlabCommon: common property set for all slab occurrences 
              Material Use Definition
              The material of the IfcSlab is defined by IfcMaterialLayerSet or IfcMaterial and attached by the IfcRelAssociatesMaterial.RelatingMaterial. It is accessible by the inverse HasAssociations relationship. Material information can also be given at the IfcSlabType, defining the common attribute data for all occurrences of the same type. It is then accessible by the inverse IsDefinedBy relationship pointing toIfcSlabType.HasAssociations and via IfcRelAssociatesMaterial.RelatingMaterial to IfcMaterial or IfcMaterialList. If both are given, then the material directly assigned to IfcSlab overrides the material assigned to IfcSlabType.
              Quantity Use Definition:
              The quantities relating to the IfcSlab are defined by the IfcElementQuantity and attached by the IfcRelDefinesByProperties. The following quantities are foreseen, but will be subjected to the local standard of measurement:
              Name Description Value Type 
              NominalWidth Total nominal (or average) width (or thickness) of the slab. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityLength 
              Perimeter Perimeter measured along the outer boundaries of the slab. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityLength 
              GrossFootprintArea Total area of the extruded area (or foot print) of the slab. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              NetFootprintArea Total area of the extruded area (or foot print) of the slab, taking into account possible slab openings. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              GrossVolume Total gross volume of the slab, not taking into account possible openings and recesses. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              NetVolume Total net volume of the slab, taking into account possible openings and recesses. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              GrossWeight Total gross weight of the slab, not taking into account possible openings and recesses or projections. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityWeight 
              NetWeight Total net weight of the slab, taking into account possible openings and recesses or projections. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityWeight 
              Containment Use Definition
              The IfcSlab, as any subtype of IfcBuildingElement, may participate in two different containment relationships. The first (and in most implementation scenarios mandatory) relationship is the hierachical spatial containment, the second (optional) relationship is the aggregation within an element assembly.
              The IfcSlab is places within the project spatial hierarchy using the objectified relationship IfcRelContainedInSpatialStructure, refering to it by its inverse attribute SELF\IfcElement.ContainedInStructure. Subtypes of IfcSpatialStructureElement are valid spatial containers, with IfcBuildingStorey being the default container. 
              The IfcSlab may be aggregated into an element assembly using the objectified relationship IfcRelAggregates, refering to it by its inverse attribute SELF\IfcObjectDefinition.Decomposes. Any subtype of IfcElement can be an element assembly, with IfcElementAssembly as a special focus subtype. 
              In this case it should not be additionally contained in the project spatial hierarchy, i.e. SELF\IfcElement.ContainedInStructure should be NIL. 
              The IfcSlab may also be an aggregate i.e. being composed by other elements and acting as an assembly using the objectified relationship IfcRelAggregates, refering to it by its inverse attribute SELF\IfcObjectDefinition.IsDecomposedBy. Components of a slab are described by instances of subtypes of IfcBuildingElement, with IfcBuildingElementPart as a special focus subtype that are aggregated to form a complex slab. In this case, the contained elements should not be additionally contained in the project spatial hierarchy, i.e. the inverse attribute SELF\IfcElement.ContainedInStructure of IfcBuildingElementPart (or other subtypes of IfcBuildingElement) should be NIL.
              Geometry Use Definitions: 
              The geometric representation of IfcSlab is given by the IfcProductDefinitionShape, allowing multiple geometric representation. Included are: 
              NOTE. If the IfcSlab is of type Landing and is used within an IfcStair or IfcRamp, the special agreements to handle stair and ramp geometry will also affect the geometric representation of the IfcSlab.
              Local Placement
              The local placement for IfcSlab is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the placement of the local placement of the same IfcSpatialStructureElement that is used in the ContainedInStructure inverse attribute or to a referenced spatial structure element at a higher level. 
              If the IfcSlab is of type Landing and is used by an IfcStair or IfcRamp, and this container class defines its own local placement, then the PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the aggregate. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Geometric Representations
              Currently, the use of 'SweptSolid', 'Clipping', 'Brep' and 'MappedRepresentation' representations is supported. In addition the general representation type 'BoundingBox' is allowed. The geometry use definitions for 'BoundingBox', and 'Brep' are explained at IfcBuildingElement.
              SweptSolid Representation
              The standard geometric representation of IfcSlab is defined using the swept solid representation. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used: 
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'SweptSolid' 
              The following additional constraints apply to the swept solid representation:
              Solid: IfcExtrudedAreaSolid is required, 
              Profile: IfcArbitraryClosedProfileDef shall be supported. 
              Extrusion: The profile shall be extruded vertically, i.e., in the direction of the z-axis of the co-ordinate system of the referred spatial structure element. It might be further constrained to be in the direction of the global z-axis in implementers agreements. The extrusion axis shall be perpendicular to the swept profile, i.e. pointing into the direction of the z-axis of the Position of the IfcExtrudedAreaSolid. 
              EXAMPLE for standard geometric representation. 
              NOTE The following interpretation of dimension parameter applies for polygonal slabs (in ground floor view): 
              IfcArbitraryClosedProfileDef .OuterCurve: closed bounded curve interpreted as area (or foot print) of the slab. 
             
              Clipping representation
              The advanced geometric representation of IfcSlab is defined using the swept area geometry with additional clippings applied. The following attribute values for the IfcShapeRepresentation holding this geometric representation shall be used: 
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'Clipping' 
              The following constraints apply to the advanced representation: 
              Solid: see standard geometric representation, 
              Profile: see standard geometric representation, 
              Extrusion: All extrusion directions shall be supported. 
              Boolean result: The IfcBooleanClippingResult shall be supported, allowing for Boolean differences between the swept solid (here IfcExtrudedAreaSolid) and one or several IfcHalfSpaceSolid. 
              EXAMPLE for advanced geometric representation. 
              Definition of a roof slab using advanced geometric representation. The profile is extruded non-perpendicular and the slab body
              Formal Propositions:
              WR2   :   The attribute UserDefinedType shall be given, if the predefined type is set to USERDEFINED.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcSlab.PredefinedType">
            <summary>
              Optional. Predefined generic types for a slab that are specified in an enumeration. There may be a property set given for the predefined types.
            </summary>
            <remarks>
              NOTE: The use of the predefined type directly at the occurrence object level of IfcSlab is only permitted, if no type object IfcSlabType is assigned.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcSlabType">
            <summary>
              The element type (IfcSlabType) defines a list of commonly shared property set definitions of a slab and an optional set of product representations.
            </summary>
            <remarks>
              Definition from IAI: The element type (IfcSlabType) defines a list of commonly shared property set definitions of a slab and an optional set of product representations. It is used to define a slab specification (i.e. the specific product information, that is common to all occurrences of that product type).
              NOTE: The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.
              A slab element type is used to define the common properties of a specific slab that may be applied to many instances of that type to assign a specific style. A slab type can be used for a floor slab, a roof slab, a stair landing or a ramp flight. Building element types (or the instantiable subtypes) may be exchanged without being already assigned to occurrences.
              The occurrences of the IfcSlabType are represented by instances of IfcSlab, or IfcRampFlight.
              HISTORY: New entity in Release IFC2x Edition 2.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcSlabTypeEnum">
            <summary>
              This enumeration defines the available predefined types of a slab. The IfcSlabTypeEnum can be used for slab occurrences, IfcSlab, and slab types, IfcSlabType. A special property set definition may be provided for each predefined type.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcSlabTypeEnum.FLOOR">
            <summary>
              The slab is used to represent a floor slab.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcSlabTypeEnum.ROOF">
            <summary>
              The slab is used to represent a roof slab (either flat or sloped).
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcSlabTypeEnum.LANDING">
            <summary>
              The slab is used to represent a landing within a stair or ramp.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcSlabTypeEnum.BASESLAB">
            <summary>
              The slab is used to represent a floor slab against the ground (and thereby being a part of the foundation)
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcStair">
            <summary>
              Construction comprising a succession of horizontal stages (steps or landings) that make it possible to pass on foot to other levels.
            </summary>
            <remarks>
              Definition from ISO 6707-1:1989: Construction comprising a succession of horizontal stages (steps or landings) that make it possible to pass on foot to other levels.
              Definition from IAI: A vertical passageway allowing occupants to walk (step) from one floor level to another floor level at a different elevation. It may include a landing as an intermediate floor slab. 
              The stair is a container entity that aggregates all components of the stair, it represents. The aggregation is handled via the IfcRelAggregates relationship, relating an IfcStair with the related flights (IfcStairFlight) and landings (IfcSlab with type 'Landing').
              HISTORY: New Entity in IFC Release 2.0.
              Property Set Use Definition:
              The property sets relating to the IfcStair are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcStair are part of this IFC release:
              Pset_StairCommon: common property set for all stair occurrences 
              Geometry Use Definitions:
              The geometric representation of IfcStair is given by the IfcProductDefinitionShape, allowing multiple geometric representation. Independent geometric representations should only be used when the IfcStair is not defined as an aggregate. If defined as an aggregate, the geometric representation is the sum of the representation of the components within the aggregate. 
              Local placement
              The local placement for IfcStair is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement that is used in the ContainedInStructure inverse attribute or to a referenced spatial structure element at a higher level. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              If the LocalPlacement is given for the IfcStair, then all components, which are aggregated to the stair should use this placement as their relative placement.
              Geometric Representation
              If the IfcStair has components (referenced by SELF\IfcObject.IsDecomposedBy) then no independent geometric representation shall defined for the IfcStair. The IfcStair is then geometrically represented by the geometric representation of its components. The components are accessed via SELF\IfcObject.IsDecomposedBy[1].RelatedObjects.
              If the IfcStair has no components defined (empty set of SELF\IfcObject.IsDecomposedBy) then the IfcStair may be represented by an IfcShapeRepresentation with the RepresentationType = 'Brep'.
              Illustration:
              IfcStair defining only the local placement for all components. 
              Formal Propositions:
              WR1   :   Either the stair is not decomposed into its flights and landings (the stair can have independent geometry), or the geometry shall not be given at IfcStair directly.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcStair.ShapeType">
            <summary>
              Predefined shape types for a stair that are specified in an Enum.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcStairFlightType">
            <summary>
              The element type (IfcStairFlightType) defines a list of commonly shared property set definitions of a stair flight and an optional set of product representations.
            </summary>
            <remarks>
              Definition from IAI: The element type (IfcStairFlightType) defines a list of commonly shared property set definitions of a stair flight and an optional set of product representations. It is used to define an stair flight specification (i.e. the specific product information, that is common to all occurrences of that product type).
              NOTE: The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.
              A stair flight type is used to define the common properties of a certain type of a stair flight that may be applied to many instances of that type to assign a specific style. Stair flight types may be exchanged without being already assigned to occurrences.
              The occurrences of the IfcStairFlightType are represented by instances of IfcStairFlight.
              HISTORY: New entity in Release IFC2x Edition 2.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcStairFlightType.PredefinedType">
            <summary>
              Identifies the predefined types of a stair flight element from which the type required may be set.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcStairFlightTypeEnum">
            <summary>
              This enumeration defines the different types of stair flights
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairFlightTypeEnum.STRAIGHT">
            <summary>
              A stair flight with a straight walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairFlightTypeEnum.WINDER">
            <summary>
              A stair flight with a straight walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairFlightTypeEnum.SPIRAL">
            <summary>
              stair flight with a circular or elliptic walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairFlightTypeEnum.CURVED">
            <summary>
              A stair flight with a curved walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairFlightTypeEnum.FREEFORM">
            <summary>
              A stair flight with a free form walking line (and outer boundaries).
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairFlightTypeEnum.USERDEFINED">
            <summary>
              User-defined stair flight .
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairFlightTypeEnum.NOTDEFINED">
            <summary>
              Undefined stair flight .
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum">
            <summary>
              This enumeration defines the basic configuration of the stair type in terms of the number of stair flights and the number of landings.
            </summary>
            <remarks>
              Definition from IAI: This enumeration defines the basic configuration of the stair type in terms of the number of stair flights and the number of landings. The type also distinguished turns by windings or by landings. In addition the subdivision of the straight and changing direction stairs is included. The stair configurations are given for stairs without and with one, two or three landings.
              Stairs which are subdivided into more than three landings have to be defined by the geometry only. Also stairs with non-regular shapes have to be defined by the geometry only. The type of such stairs is OTHEROPERATION.
              HISTORY New Enumeration in IFC Release 2.0.
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.STRAIGHT_RUN_STAIR">
            <summary>
              A stair extending from one level to another without turns or winders. The stair consists of one straight flight.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.TWO_STRAIGHT_RUN_STAIR">
            <summary>
              A straight stair consisting of two straight flights without turns but with one landing.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.QUARTER_WINDING_STAIR">
            <summary>
              A stair consisting of one flight with a quarter winder, which is making a 90° turn. The direction of the turn is determined by the walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.QUARTER_TURN_STAIR">
            <summary>
              A stair making a 90° turn, consisting of two straight flights connected by a quarterspace landing. The direction of the turn is determined by the walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.HALF_WINDING_STAIR">
            <summary>
              A stair consisting of one flight with one half winder, which makes a 180° turn. The orientation of the turn is determined by the walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.HALF_TURN_STAIR">
            <summary>
              A stair making a 180° turn, consisting of two straight flights connected by a halfspace landing. The orientation of the turn is determined by the walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.TWO_QUARTER_WINDING_STAIR">
            <summary>
              A stair making a 180° turn, consisting of three straight flights connected by two quarterspace landings. The direction of the turns is determined by the walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.TWO_QUARTER_TURN_STAIR">
            <summary>
              A stair making a 180° turn, consisting of three straight flights connected by two quarterspace landings. The direction of the turns is determined by the walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.THREE_QUARTER_WINDING_STAIR">
            <summary>
              A stair consisting of one flight with three quarter winders, which make a 90° turn. The stair makes a 270° turn. The direction of the turns is determined by the walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.THREE_QUARTER_TURN_STAIR">
            <summary>
              A stair making a 270° turn, consisting of four straight flights connected by three quarterspace landings. The direction of the turns is determined by the walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.SPIRAL_STAIR">
            <summary>
              A stair constructed with winders around a circular newel often without landings. Depending on outer boundary it can be either a circular, elliptical or rectancular spiral stair. The orientation of the winding stairs is determined by the walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.DOUBLE_RETURN_STAIR">
            <summary>
              A stair having one straight flight to a wide quarterspace landing, and two side flights from that landing into opposite directions. The stair is making a 90° turn. The direction of traffic is determined by the walking line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.CURVED_RUN_STAIR">
            <summary>
              A stair extending from one level to another without turns or winders. The stair is consisting of one curved flight.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.TWO_CURVED_RUN_STAIR">
            <summary>
              A curved stair consisting of two curved flights without turns but with one landing.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcStairTypeEnum.USERDEFINED">
            <summary>
              Free form stair (user defined operation type)
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcWall">
            <summary>
              Vertical construction usually in masonry or in concrete which bounds or subdivides a construction works and fulfils a load bearing or retaining function.
            </summary>
            <remarks>
              Definition from ISO 6707-1:1989: Vertical construction usually in masonry or in concrete which bounds or subdivides a construction works and fulfils a load bearing or retaining function.
              Definition from IAI: The wall represents a vertical construction that bounds or subdivides spaces. Wall are usually vertical, or nearly vertical, planar elements, often designed to bear structural loads. A wall is however not required to be load bearing. The IFC specification provides two entities for wall occurrences:
              IfcWallStandardCase  used for all occurrences of walls, that have a non-changing thickness along the wall path and where the thickness parameter can be fully described by a material layer set. These walls are always represented geometrically by a SweptSolid geometry, if a 3D geometric representation is assigned, 
              IfcWall  used for all other occurrences of wall, particularly for walls with changing thickness along the wall path (e.g. polygonal walls), or walls with a non-rectangular cross sections (e.g. L-shaped retaining walls). 
              HISTORY New entity in IFC Release 1.0, the entity has changed in IFC Release 2x.
              Type Use Definition
              IfcWall (or the subtype IfcWallStandardCase) defines the occuurence of any wall, common information about wall types (or styles) is handled by IfcWallType. The IfcWallType (if present) may establish the common type name, usage (or predefined) type, common material layer set, common set of properties and common shape representations (using IfcRepresentationMap). The IfcWallType is attached using the IfcRelDefinedByType.RelatingType objectified relationship and is accessible by the inverse IsDefinedBy attribute.
              Property Set Use Definition:
              The property sets relating to the IfcWall are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcWall are part of this IFC release:
              Pset_WallCommon: common property set for all wall occurrences 
              Quantity Use Definition:
              The quantities relating to the IfcWall are defined by the IfcElementQuantity and attached by the IfcRelDefinesByProperties. The following quantities are foreseen, but will be subjected to the local standard of measurement:
              Name Description Value Type 
              NominalLength Total nominal (or average) length of the wall along the wall path. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityLength 
              NominalWidth Total nominal (or average) width (or thickness) of the wall perpendicular to the wall path. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityLength 
              NominalHeight Total nominal (or average) height of the wall along the wall path. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityLength 
              GrossFootprintArea Area of the wall as viewed by a ground floor view, not taking any wall modifications (like recesses) into account. It is also referred to as the foot print of the wall. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              NetFootprintArea Area of the wall as viewed by a ground floor view, taking all wall modifications (like recesses) into account. It is also referred to as the foot print of the wall. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              GrossSideAreaLeft Area of the wall as viewed by an elevation view of the left side (when viewed along the wall path orientation). It does not take into account any wall modifications (such as openings). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              NetSideAreaLeft Area of the wall as viewed by an elevation view of the left side (when viewed along the wall path orientation). It does take into account all wall modifications (such as openings). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              GrossSideAreaRight Area of the wall as viewed by an elevation view of the right side (when viewed along the wall path orientation). It does not take into account any wall modifications (such as openings). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              NetSideAreaRight Area of the wall as viewed by an elevation view of the right side (when viewed along the wall path orientation). It does take into account all wall modifications (such as openings). The exact definition and calculation rules depend on the method of measurement used. IfcQuantityArea 
              GrossVolume Volume of the wall, without taking into account the openings and the connection geometry. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              NetVolume Volume of the wall, after subtracting the openings and after considering the connection geometry. The exact definition and calculation rules depend on the method of measurement used. IfcQuantityVolume 
              Containment Use Definition
              The IfcWall (and the subtype IfcWallStandardCase) as any subtype of IfcBuildingElement, may participate in two different containment relationships. The first (and in most implementation scenarios mandatory) relationship is the hierachical spatial containment, the second (optional) relationship is the aggregation within an element assembly.
              The IfcWall is places within the project spatial hierarchy using the objectified relationship IfcRelContainedInSpatialStructure, refering to it by its inverse attribute SELF\IfcElement.ContainedInStructure. Subtypes of IfcSpatialStructureElement are valid spatial containers, with IfcBuildingStorey being the default container. 
              The IfcWall may be aggregated into an element assembly using the objectified relationship IfcRelAggregates, refering to it by its inverse attribute SELF\IfcObjectDefinition.Decomposes. Any subtype of IfcElement can be an element assembly, with IfcElementAssembly as a special focus subtype. 
              In this case the wall should not be additionally contained in the project spatial hierarchy, i.e. SELF\IfcElement.ContainedInStructure should be NIL. 
              The IfcWall may also be an aggregate i.e. being composed by other elements and acting as an assembly using the objectified relationship IfcRelAggregates, refering to it by its inverse attribute SELF\IfcObjectDefinition.IsDecomposedBy. Components of a wall are described by instances of IfcBuildingElementPart that are aggregated to form a complex wall. 
              In this case, the contained IfcBuildingElementPart's should not be additionally contained in the project spatial hierarchy, i.e. the inverse attribute SELF\IfcElement.ContainedInStructure of IfcBuildingElementPart should be NIL.
              Geometry Use Definitions: 
              The geometric representation of IfcWall is given by the IfcProductDefinitionShape, allowing multiple geometric representation. Included are: 
              Local Placement
              The local placement for IfcWall is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations. 
              The PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement that is used in the ContainedInStructure inverse attribute or to a referenced spatial structure element at a higher level. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Geometric Representations
              Currently, the use of 'SweptSolid', 'Clipping', and 'Brep' representations is supported. In addition the general representation types 'SurfaceModel' and 'BoundingBox' are allowed. The geometry use definition for 'BoundingBox', 'SurfaceModel' and 'Brep' is explained at IfcBuildingElement. A more restricted geometry definition is given at the level of the subtype IfcWallStandardCase.
              SweptSolid representation
              The standard geometric representation (for body) of IfcWall is defined using the 'SweptSolid' representation. It is based on the vertical extrusion of a polygonal footprint of the wall body. The IfcShapeRepresentation shall have the following values:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'SweptSolid' 
              The following additional constraints apply to the swept solid representation:
              Solid: IfcExtrudedAreaSolid is required, 
              Profile: IfcArbitraryClosedProfileDef shall be supported. 
              Extrusion: The profile shall be extruded vertically, i.e., in the direction of the z-axis of the co-ordinate system of the referred spatial structure element. It might be further constraint to be in the direction of the global z-axis in implementers agreements. The extrusion axis shall be perpendicular to the swept profile, i.e. pointing into the direction of the z-axis of the Position of the IfcExtrudedAreaSolid. 
              Connection Geometry
              The connection between two walls is represented by the IfcRelConnectsPathElements. The use of the parameter of that relationship object is defined at the level of the subtypes of IfcWall and at the IfcRelConnectsPathElements.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcWallStandardCase">
            <summary>
              The standard wall (IfcWallStandardCase) defines a wall with certain constraints for the provision of parameter and with certain constraints for the geometric representation.
            </summary>
            <remarks>
              Definition from IAI: The standard wall (IfcWallStandardCase) defines a wall with certain constraints for the provision of parameter and with certain constraints for the geometric representation. The IfcWallStandardCase handles all cases of walls, that have a single thickness along the path, i.e.:
              parallel sides for straight walls 
              co-centric sides for curved walls. 
              The following parameter shall be given:
              Wall height, taken from the depth of extrusion, provided by the geometric representation. 
              Wall thickness, taken from the material layer set, attached to the wall 
              Wall offset from axis, taken from the material layer set, attached to the wall 
              The material of the wall is defined by the IfcMaterialLayerSetUsage and attached by the IfcRelAssociatesMaterial. It is accessibly by the inverse HasAssociations relationship. The material layer set has to be given (enforced by where rule).
              HISTORY New entity in IFC Release 2x.
              Property Set Use Definition:
              The property sets relating to the IfcWallStandardCase are defined at the supertype IfcWall.
              Quantity Use Definition:
              The quantities relating to the IfcWallStandardCase are defined at the supertype IfcWall.
              Geometry Use Definitions:
              The geometric representation of IfcWallStandardCase is given by the IfcProductDefinitionShape, allowing multiple geometric representation. Included are: 
              Local Placement
              The use of local placement is defined at the supertype IfcWall.
              Geometric Representation
              The standard geometric representation of IfcWallStandardCase is defined using the following multiple shape representations for its definition:
              Axis: A two-dimensional open curve (IfcBoundedCurve) defining the axis for the standard wall. The material layer offset is measured from the wall axis. 
              Body: A Swept Solid Representation or a CSG representation defining the 3D shape of the standard wall 
              First representation: Curve2D representation of wall axis
              The wall axis is represented by a two-dimensional open curve within a particular shape representation. The wall axis is used to apply the parameter to the wall geometry. The following attribute values shall be used
              IfcShapeRepresentation shall have the following values:
              RepresentationIdentifier : 'Axis' 
              RepresentationType : 'Curve2D' 
              In case of a straight wall, the set of items shall include a single geometric representation item of type IfcPolyline or IfcTrimmedCurve with the BasisCurve being an IfcLine.
             
              In case of a curved wall, the set of items shall include a single geometric representation item of type IfcTrimmedCurve. The curve shall have a BasisCurve of type IfcCircle.
             
              Second representation: SweptSolid or Clipping representation of wall body
              The body of the IfcWallStandardCase is defined by using 'SweptSolid' representation for walls without clippings or 'Clipping' representation for walls with clippings (e.g. under sloped roof slabs).
              IfcShapeRepresentation shall have the following values:
              RepresentationIdentifier : 'Body' 
              RepresentationType : 'SweptSolid' or 'Clipping' 
              SweptSolid representation
              The standard geometric representation (for body) of IfcWallStandardCase is defined using the 'SweptSolid' representation. The following additional constraints apply to the swept solid representation:
              Solid: IfcExtrudedAreaSolid is required, 
              Profile: IfcArbitraryClosedProfileDef and IfcRectangleProfileDef shall be supported. 
              Extrusion: The profile shall be extruded vertically, i.e., in the direction of the z-axis of the co-ordinate system of the referred spatial structure element. It might be further constraint to be in the direction of the global z-axis in implementers agreements. The extrusion axis shall be perpendicular to the swept profile, i.e. pointing into the direction of the z-axis of the Position of the IfcExtrudedAreaSolid. 
              The profile of a wall is described in the ground view and extruded vertically. The profile (also identical with the foot print of the wall) is defined by the IfcArbitraryClosedProfileDef (excluding its subtypes). The profile is given with all wall connections already resolved. 
              In case of a straight wall the two sides of the profile shall be parallel to the wall axis, i.e. the wall has a single unchanged thickness. 
             
              In case of a curved wall the two sides of the profile shall be parallel (with defined offset) to the wall axis, i.e. the wall has a single unchanged thickness. 
             
              The advanced geometric representation (for body) of IfcWallStandardCase is defined using the 'Clipping' representation. The following additional constraints apply to the swept solid representation:
              Solid: see standard geometric representation 
              Profile: see standard geometric representation 
              Extrusion: see standard geometric representation 
              Boolean result: The IfcBooleanClippingResult shall be supported, allowing for Boolean differences between the swept solid (here IfcExtrudedAreaSolid) and one or several IfcHalfSpaceSolid (or subtypes). 
              Example of clipping using an IfcPolygonalBoundedHalfSpace as SecondOperand in the IfcBooleanClippingResult.
             
              Example of clipping using an IfcHalfSpaceSolid as SecondOperand in the IfcBooleanClippingResult
              Formal Propositions:
              WR1   :   The IfcWallStandard relies on the provision of an IfcMaterialLayerSetUsage.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcWallType">
            <summary>
              The element type (IfcWallType) defines a list of commonly shared property set definitions of a wall and an optional set of product representations.
            </summary>
            <remarks>
              Definition from IAI: The element type (IfcWallType) defines a list of commonly shared property set definitions of a wall and an optional set of product representations. 
              It is used to define an element specification (i.e. the specific product information, that is common to all occurrences of that product type).
              NOTE: The product representations are defined as representation maps (at the level of the supertype IfcTypeProduct, 
              which gets assigned by an element occurrence instance through the IfcShapeRepresentation.Item[1] being an IfcMappedItem.
              A wall type is used to define the common properties of a certain type of a wall that may be applied to many instances of that type to assign a specific style. 
              Wall types may be exchanged without being already assigned to occurrences.
              The occurrences of the IfcWallType are represented by instances of IfcWall and IfcWallStandardCase.
              HISTORY: New entity in Release IFC2x Editon 2.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWallType.PredefinedType">
            <summary>
              Identifies the predefined types of a wall element from which the type required may be set.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcWallTypeEnum">
            <summary>
              This enumeration defines the different types of walls an IfcWallType object can fulfill:
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWallTypeEnum.STANDARD">
            <summary>
              A standard wall, extruded vertically with a constant thickness along the wall path.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWallTypeEnum.POLYGONAL">
            <summary>
              A polygonal wall, extruded vertically, where the wall thickness changes along the wall path.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWallTypeEnum.SHEAR">
            <summary>
              A shear wall, having a non-rectangular cross section.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWallTypeEnum.USERDEFINED">
            <summary>
              User-defined wall element
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWallTypeEnum.NOTDEFINED">
            <summary>
              Undefined wall element
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcWindow">
            <summary>
              Construction for closing a vertical or near vertical opening in a wall or pitched roof that will admit light and may admit fresh air.
            </summary>
            <remarks>
              Definition form ISO 6707-1:1989: Construction for closing a vertical or near vertical opening in a wall or pitched roof that will admit light and may admit fresh air.
              Definition from IAI: A window consists of a lining and one or several panels. Properties concerning the lining and panel(s) are defined by the IfcWindowLiningProperties and the IfcWindowPanelProperties.
              The window entity (IfcWindow) defines a particular occurrence of a window inserted in the spatial context of a project. The actual parameter of the window and/or its shape is defined at the IfcWindowStyle, to which the IfcWindow is related by the inverse relationship IsDefinedBy pointing to IfcRelDefinesByType. The IfcWindowStyle also defines the particular attributes for the lining (IfcWindowLiningProperties) and panels (IfcWindowPanelProperties). Therefore:
              the IfcWindow is the occurrence definition (or project instance) 
              the IfcWindowStyle is the specific definition (or project type) 
              The IfcWindow is normally inserted into an IfcOpeningElement (but does not need to) using the IfcRelFillsElement relationship. It is also directly linked to the spatial structure of the project (and here normally to the IfcBuildingStorey) using the IfcRelContainedInSpatialStructure relationship.
              HISTORY New entity in IFC Release 1.0.
              Property Set Use Definition:
              The property sets relating to the IfcWindow are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcWindow are part of this IFC release:
              Pset_WindowCommon: common property set for all window occurrences 
              Pset_DoorWindowGlazingType: specific property set for the glazing properties of the window glazing, if available 
              Pset_DoorWindowShadingType: specific property set for the shading properties of the window glazing, if available 
              Geometry Use Definitions:
              The geometric representation of IfcWindow is given by the IfcProductDefinitionShape, allowing multiple geometric representation. The IfcWindow, in case of an occurrence object, gets its parameter and shape from the IfcWindowStyle. If an IfcRepresentationMap (a block definition) is defined for the IfcWindowStyle, then the IfcWindow inserts it through the IfcMappedItem (refered to by IfcShapeRepresentation.Items).
              Local Placement
              The local placement for IfcWindow is defined in its supertype IfcProduct. It is defined by the IfcLocalPlacement, which defines the local coordinate system that is referenced by all geometric representations.
              The PlacementRelTo relationship of IfcLocalPlacement shall point to the local placement of the same element (if given), in which the IfcWindow is used as a filling (normally an IfcOpeningElement), as provided by the IfcRelFillsElement relationship. 
              If the IfcWindow is not inserted into an IfcOpeningElement, then the PlacementRelTo relationship of IfcLocalPlacement shall point (if given) to the local placement of the same IfcSpatialStructureElement that is used in the ContainedInStructure inverse attribute or to a referenced spatial structure element at a higher level. 
              If the relative placement is not used, the absolute placement is defined within the world coordinate system. 
              Standard Geometric Representation using parameters given by the style
              The parameters, which define the shape of the IfcWindow, are given at the IfcWindowStyle and the property sets, which are included in the IfcWindowStyle. The IfcWindow only defines the local placement. The overall size of the IfcWindow is determined by its OverallWidth and OverallHeight parameter, if omitted, it should be taken from the profile of the IfcOpening, in which the IfcWindow is inserted.
              EXAMPLE Inserting the IfcWindowStyle.OperationType = DoublePanelHorizontal
              The insertion of the window style into the IfcOpeningElement by creating an instance of IfcWindow. The parameter: 
              OverallHeigth 
              OverallWidth 
              show the extend of the window in the positive Z and X axis of the local placement of the window. The lining and the transom are created by the given parameter (the flag ParameterTakesPrecedence = TRUE).
              The representation type of the inserted window is
              IfcShapeRepresentation.RepresentationType = 'MappedRepresentation' 
             
              The final window (DoublePanelHorizontal) with 
              first panel
              PanelPosition = TOP
              OperationType = BOTTOMHUNG 
              second panel
              PanelPosition = BOTTOM
              OperationType = TILTANDTURNLEFTHAND
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindow.OverallHeight">
            <summary>
              Optional.   Overall measure of the height, it reflects the Z Dimension of a bounding box, enclosing the body of the window opening. If omitted, the OverallHeight should be taken from the geometric representation of the IfcOpening in which the window is inserted.
            </summary>
            <remarks>
              NOTE  The body of the window might be taller then the window opening (e.g. in cases where the window lining includes a casing). In these cases the OverallHeight shall still be given as the window opening height, and not as the total height of the window lining.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindow.OverallWidth">
            <summary>
              Optional. Overall measure of the width, it reflects the X Dimension of a bounding box, enclosing the body of the window opening. If omitted, the OverallWidth should be taken from the geometric representation of the IfcOpening in which the window is inserted.
            </summary>
            <remarks>
              NOTE  The body of the window might be wider then the window opening (e.g. in cases where the window lining includes a casing). In these cases the OverallWidth shall still be given as the window opening width, and not as the total width of the window lining.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcWindowLiningProperties">
            <summary>
              The window lining is the frame which enables the window to be fixed in position. The window lining is used to hold the window panels or other casements.
            </summary>
            <remarks>
              Definition from IAI: The window lining is the frame which enables the window to be fixed in position. The window lining is used to hold the window panels or other casements. The parameter of the window lining (IfcWindowLiningProperties) define the geometrically relevant parameter of the lining.
              The IfcWindowLiningProperties are included in the list of properties (HasPropertySets) of the IfcWindowStyle. More information about the window lining can be included in the same list of the IfcWindowStyle using the IfcPropertySet for dynamic extensions. 
              HISTORY New Entity in IFC Release 2.0. Has been renamed from IfcWindowLining in IFC Release 2x. 
              Geometry Use Definitions
              The IfcWindowLiningProperties does not hold an own geometric representation. However it defines parameter, which can be used to create the shape of the window style (which is inserted by the IfcWindow into the spatial context of the project).
              Interpretation of parameter
              The parameters at the IfcWindowLiningProperties define a standard window lining, including (if given) a mullion and a transom (for horizontal and vertical splits). The outer boundary of the lining is determined by the occurrence parameter assigned to the IfcWindow, which inserts the IfcWindowStyle.
              The lining is applied to all faces of the opening reveal. The parameter are: 
              LiningDepth 
              LiningThickness 
             
              If the OperationType of the window style is 
              DoublePanelVertical (shown) 
              TriplePanelBottom 
              TriplePanelTop 
              TriplePanelLeft 
              TriplePanelRight 
              the following additional parameter apply: 
              MullionThickness 
              FirstMullionOffset - measured as offset to the Z axis (in XZ plane) 
             
              If the OperationType of the window style is 
              DoublePanelHorizontal 
              TriplePanelBottom 
              TriplePanelTop 
              TriplePanelLeft 
              TriplePanelRight 
              the following additional parameter apply 
              TransomThickness 
              FirstTransomOffset measured as offset to the X axis (in XZ plane) 
             
              If the OperationType of the window style is 
              TriplePanelVertical 
              the following additional parameter apply 
              SecondMullionOffset 
             
              If the OperationType of the window style is 
              TriplePanelHorizontal 
              the following additional parameter apply 
              SecondTransomOffset 
             
              Formal Propositions:
              WR31   :   Either both parameter, LiningDepth and LiningThickness are given, or only the LiningThickness, then the LiningDepth is variable. It is not valid to only assert the LiningDepth. 
              NOTE  A LiningDepth with NIL ($) value indicates a window style with a lining equal to the wall thickness. 
              WR32   :   Either both parameter, FirstTransomOffset and SecondTransomOffset are given, or only the FirstTransomOffset, or none of both. It is not valid to only assert the SecondTransomOffset.  
              WR33   :   Either both parameter, FirstMullionOffset and SecondMullionOffset are given, or only the FirstMullionOffset, or none of both. It is not valid to only assert the SecondMullionOffset.  
              WR34   :   The IfcWindowLiningProperties shall only be used in the context of an IfcWindowStyle.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowLiningProperties.LiningDepth">
            <summary>
              Optional. Depth of the window lining (dimension measured perpendicular to window elevation plane).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowLiningProperties.LiningThickness">
            <summary>
              Optional. Thickness of the window lining (measured parallel to the window elevation plane).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowLiningProperties.TransomThickness">
            <summary>
              Optional. Thickness of the transom (horizontal separator of window panels within a window), measured parallel to the window elevation plane. The transom is part of the lining and the transom depth is assumed to be identical to the lining depth.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowLiningProperties.MullionThickness">
            <summary>
              Optional. Thickness of the mullion (vertical separator of window panels within a window), measured parallel to the window elevation plane. The mullion is part of the lining and the mullion depth is assumed to be identical to the lining depth.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowLiningProperties.FirstTransomOffset">
            <summary>
              Optional. Offset of the transom centerline, measured along the z-axis of the window placement co-ordinate system. An offset value = 0.5 indicates that the transom is positioned in the middle of the window.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowLiningProperties.SecondTransomOffset">
            <summary>
              Optional. Offset of the transom centerline for the second transom, measured along the x-axis of the window placement co-ordinate system. An offset value = 0.666 indicates that the second transom is positioned at two/third of the window.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowLiningProperties.FirstMullionOffset">
            <summary>
              Optional. Offset of the mullion centerline, measured along the x-axis of the window placement co-ordinate system. An offset value = 0.5 indicates that the mullion is positioned in the middle of the window.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowLiningProperties.SecondMullionOffset">
            <summary>
              Optional. Offset of the mullion centerline for the second mullion, measured along the x-axis of the window placement co-ordinate system. An offset value = 0.666 indicates that the second mullion is positioned at two/third of the window.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowLiningProperties.ShapeAspectStyle">
            <summary>
              Optional. Optional link to a shape aspect definition, which points to the part of the geometric representation of the window style, which is used to represent the lining.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelOperationEnum">
            <summary>
              This enumeration defines the basic ways to describe how window panels operate.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelOperationEnum.SIDEHUNGRIGHTHAND">
            <summary>
              panel that opens to the right when viewed from the outside
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelOperationEnum.SIDEHUNGLEFTHAND">
            <summary>
              panel that opens to the left when viewed from the outside
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelOperationEnum.TILTANDTURNRIGHTHAND">
            <summary>
              panel that opens to the right and is bottom hung
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelOperationEnum.TILTANDTURNLEFTHAND">
            <summary>
              panel that opens to the left and is bottom hung
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelOperationEnum.TOPHUNG">
            <summary>
              panel is top hung
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelOperationEnum.BOTTOMHUNG">
            <summary>
              panel is bottom hung
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelOperationEnum.PIVOTHORIZONTAL">
            <summary>
              panel is swinging horizontally (hinges are in the middle)
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelOperationEnum.PIVOTVERTICAL">
            <summary>
              panel is swinging vertically (hinges are in the middle)
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelOperationEnum.SLIDINGHORIZONTAL">
            <summary>
              panel is sliding horizontally
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelOperationEnum.SLIDINGVERTICAL">
            <summary>
              panel is sliding vertically
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelOperationEnum.REMOVABLECASEMENT">
            <summary>
              panel is removable
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelOperationEnum.FIXEDCASEMENT">
            <summary>
              panel is fixed
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelOperationEnum.OTHEROPERATION">
            <summary>
              user defined operation type
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelProperties">
            <summary>
              A description of the window panel. A window panel is a casement, i.e. a component, fixed or opening, consisting essentially of a frame and the infilling.
            </summary>
            <remarks>
              Definition from IAI: A description of the window panel. A window panel is a casement, i.e. a component, fixed or opening, consisting essentially of a frame and the infilling. The infilling of a window panel is normally glazing. The way of operation is defined in the operation type. 
              The IfcWindowPanelProperties are included in the list of properties (HasPropertySets) of the IfcWindowStyle. More information about the window panel can be included in the same list of the IfcWindowStyle using the IfcPropertySet for dynamic extensions.
              HISTORY New entity in IFC Release 2.0, it had been renamed from IfcWindowPanel in IFC Release 2x.
              Geometry Use Definitions
              The IfcWindowPanelProperties does not hold an own geometric representation. However it defines parameter, which can be used to create the shape of the IfcWindowStyle (which is inserted by the IfcWindow into the spatial context of the project).
              Interpretation of parameter
              The parameters at the IfcWindowPanelProperties define a standard window panel. The outer boundary of the panel is determined by the occurrence parameter assigned to the IfcWindow, which inserts the IfcWindowStyle. It has to take the lining parameter into account as well. The position of the window panel within the overall window is determined by the PanelPosition attribute.
              The panel is applied to the position within the lining, as defined by the panel position attribute. The following parameter apply to that panel: 
              FrameDepth 
              FrameThickness
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelProperties.OperationType">
            <summary>
              Types of window panel operations. Also used to assign standard symbolic presentations according to national building standards.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelProperties.PanelPosition">
            <summary>
              Position of this panel within the overall window style.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelProperties.FrameDepth">
            <summary>
              Optional. Depth of panel frame, measured from front face to back face horizontally (i.e. perpendicular to the window (elevation) plane.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelProperties.FrameThickness">
            <summary>
              Optional. Width of panel frame, measured from inside of panel (at glazing) to outside of panel (at lining), i.e. parallel to the window (elevation) plane.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowPanelProperties.ShapeAspectStyle">
            <summary>
              Optional. Optional link to a shape aspect definition, which points to the part of the geometric representation of the window style, which is used to represent the panel.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyle">
            <summary>
              The window style defines a particular style of windows, which may be included into the spatial context of the building model through an (or multiple) instances of IfcWindow.
            </summary>
            <remarks>
              Definition from IAI: The window style defines a particular style of windows, which may be included into the spatial context of the building model through an (or multiple) instances of IfcWindow. A window style defines the overall parameter of the window style and refers to the particular parameter of the lining and one (or several) panels through the IfcWindowLiningProperties and the IfcWindowPanelProperties.
              The window entity (IfcWindow) defines a particular occurrence of a window inserted in the spatial context of a project. The actual parameter of the window and/or its shape is defined at the IfcWindowStyle, to which the IfcWindow related by the inverse relationship IsDefinedBy pointing to IfcRelDefinesByType. The IfcWindowStyle also defines the particular attributes for the lining (IfcWindowLiningProperties) and panels (IfcWindowPanelProperties).
              HISTORY New entity in IFC Release 2x.
              IFC2x2 COMPATIBILITY NOTICE: The entity IfcWindowStyle is still subtyped from the IfcTypeProduct to provide upward compatibility. This is a recorded anomaly as all other types for building elements are now subtyped from IfcBuildingElementType and have the suffix "Type", not "Style". 
              Geometry Use Definitions:
              The IfcWindowStyle defines the baseline geometry, or the representation map, for all occurrences of the window style, given by the IfcWindow, pointing to this style. The representation of the window style may be given by the agreed set of minimal parameters, defined for the window lining and the window panel(s), or it my be given by a geometric representation used by the IfcRepresentationMap. The attribute ParameterTakesPrecedence decides, whether the set of parameters can be used to exactly represent the shape of the window style (TRUE), or whether the attached IfcRepresentationMap holds the exact representation (FALSE).
              Interpretation of parameters
              The IfcWindowStyleOperationTypeEnum defines the general layout of the window style. Depending on the enumerator, the appropriate instances of IfcWindowLiningProperties and IfcWindowPanelProperties are attached in the list of HasPropertySets. See geometry use definitions there.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyle.ConstructionType">
            <summary>
              Type defining the basic construction and material type of the window.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyle.OperationType">
            <summary>
              Type defining the general layout and operation of the window style.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyle.ParameterTakesPrecedence">
            <summary>
              The Boolean value reflects, whether the parameter given in the attached lining and panel properties exactly define the geometry (TRUE), or whether the attached style shape take precedence (FALSE). In the last case the parameter have only informative value.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyle.Sizeable">
            <summary>
              The Boolean indicates, whether the attached ShapeStyle can be sized (using scale factor of transformation), or not (FALSE). If not, the ShapeStyle should be inserted by the IfcWindow (using IfcMappedItem) with the scale factor = 1.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyleConstructionEnum">
            <summary>
              This enumeration defines the basic types of construction of windows. The construction type relates to the main material (or material combination) used for making the window.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyleOperationEnum">
            <summary>
              This enumeration defines the basic configuration of the window type in terms of the number of window panels 
              and the subdivision of the total window. The window configurations are given for windows with one, 
              two or three panels (including fixed panels).
              Windows which are subdivided into more than three panels have to be defined by the geometry only. 
              The type of such windows is USERDEFINED
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyleOperationEnum.SINGLE_PANEL">
            <summary>
              Window with one panel.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyleOperationEnum.DOUBLE_PANEL_VERTICAL">
            <summary>
              Window with two panels. The configuration of the panels is vertically.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyleOperationEnum.DOUBLE_PANEL_HORIZONTAL">
            <summary>
              Window with two panels. The configuration of the panels is horizontally.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyleOperationEnum.TRIPLE_PANEL_VERTICAL">
            <summary>
              Window with three panels. The configuration of the panels is vertically.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyleOperationEnum.TRIPLE_PANEL_BOTTOM">
            <summary>
              Window with three panels. The configuration of two panels is vertically and the third one is horizontally at the bottom.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyleOperationEnum.TRIPLE_PANEL_TOP">
            <summary>
              Window with three panels. The configuration of two panels is vertically and the third one is horizontally at the top.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyleOperationEnum.TRIPLE_PANEL_LEFT">
            <summary>
              Window with three panels. The configuration of two panels is horizontally and the third one is vertically at the left hand side.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyleOperationEnum.TRIPLE_PANEL_RIGHT">
            <summary>
              Window with three panels. The configuration of two panels is horizontally and the third one is vertically at the right hand side.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyleOperationEnum.TRIPLE_PANEL_HORIZONTAL">
            <summary>
              Window with three panels. The configuration of the panels is horizontally.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.SharedBldgElements.IfcWindowStyleOperationEnum.USERDEFINED">
            <summary>
              user defined operation type
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcRelConnectsStructuralElement">
            <summary>
              The one-to-one relationship assigns a structural member (as instance of IfcStructuralMember or its subclasses) to a physical element  (as instance of IfcElement or its subclasses) to keep the association between the design or detailing element and the structural analysis element.
            </summary>
            <remarks>
              Definition from IAI: The one-to-one relationship assigns a structural member (as instance of IfcStructuralMember or its subclasses) to a physical element  (as instance of IfcElement or its subclasses) to keep the association between the design or detailing element and the structural analysis element. 
              Both, the IfcElement and the IfcStructuralMember, may involve any number (zero, one, or many) associations between physical and analytical element. Multiple instances of IfcRelConnectsStructuralElement can therefore be used to reflect the many-to-many nature of the association between physical and analytical elements.
              HISTORY  New entity in Release IFC2x Edition 3.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcRelConnectsStructuralElement.RelatingElement">
            <summary>
              The physical element, representing a design or detailing part, that is connected to the structural member as its (partial) analytical idealization.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.StructuralAnalysisDomain.IfcRelConnectsStructuralElement.RelatedStructuralMember">
            <summary>
              The structural member that is associated with the element of which it represents the analytical idealization.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassification">
            <summary>
              An IfcClassification is used for the arrangement of objects into a class or category according to a common purpose or their possession of common characteristics.
            </summary>
            <remarks>
              Definition from IAI: An IfcClassification is used for the arrangement of objects into a class or category according to a common purpose or their possession of common characteristics. 
              HISTORY: New class in IFC Release 1.5. Modified in IFC 2x 
              Use Definitions
              IfcClassification identifies the classification system or source from which a classification notation is derived. The objective is to minimize the number of IfcClassification objects contained within an IFC model. Ideally, each classification system or source used should have only one IfcClassification object. However, because multiple classification is allowed, there may be many IfcClassification objects used, each identifying a different classification system or source.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassification.Source">
            <summary>
              Source (or publisher) for this classification.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassification.Edition">
            <summary>
              The edition or version of the classification system from which the classification notation is derived.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassification.EditionDate">
            <summary>
              Optional. The date on which the edition of the classification used became valid.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassification.Name">
            <summary>
              The name or label by which the classification used is normally known.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassification.Contains">
            <summary>
              Inverse. Classification items that are classified by the classification.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationItem">
            <summary>
              An IfcClassificationItem is a class of classification notations used.
            </summary>
            <remarks>
              Definition from IAI: An IfcClassificationItem is a class of classification notations used. 
              HISTORY: New entity in IFC Release 2x. 
              Use Definitions
              The term 'classification item' is used in preference to the term 'table' for improved flexibility. For example, the classification item "L681" in Uniclass may be used to contain all subsequent notation facets within that class of classifications which has the title "Proofings, insulation" (e.g. L6811, L6812, L6813 etc.).
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationItem.Notation">
            <summary>
              The notations from within a classification item that are used within the project.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationItem.ItemOf">
            <summary>
              The classification that is the source for the uppermost level of the classification item hierarchy used.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationItem.Title">
            <summary>
              The name of the classification item.
            </summary>
            <remarks>
              NOTE: Examples of the above attributes from Uniclass: 
              A classification item in Uniclass has a notation "L6814" which has the title "Tanking".
              It has a parent notation "L681" which has the title "Proofings, insulation".
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationItem.IsClassifiedItemIn">
            <summary>
              Identifies the relationship in which the role of ClassifiedItem is taken.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationItem.IsClassifyingItemIn">
            <summary>
              Identifies the relationship in which the role of ClassifyingItem is taken.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationItemRelationship">
            <summary>
              An IfcClassificationItemRelationship is a relationship class that enables the hierarchical structure of a classification system to be exposed through its ability to contain related classification items and to be contained by a relating classification item.
            </summary>
            <remarks>
              Definition from IAI: An IfcClassificationItemRelationship is a relationship class that enables the hierarchical structure of a classification system to be exposed through its ability to contain related classification items and to be contained by a relating classification item.
              HISTORY: New entity in IFC 2x. 
              Use Definitions
              IfcClassificationItem's can be progressively decomposed using the IfcClassificationItemRelationship such that the relationship always captures the information about the parent level (relating) item and the child level (related) items of which there can be many. The following example shows how this could be achieved for the Uniclass system.
             
              The inverse relationships from IfcClassificationItem to IfcClassificationRelationship enable information about the relationship to be recovered by the items concerned so that they are also aware of the decomposition. The cardinality of the inverse relationship is that an IfcClassificationItem can be the classifying item in only one relationship and can be a classified item in only one relationship. This implies that there is no overlap of IfcClassificationItem's. This reflects typical classification approaches which use strict hierarchical decomposition (or taxonomy) and do not have matrix relationships.
              EXPRESS specification
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationItemRelationship.RelatingItem">
            <summary>
              The parent level item in a classification structure that is used for relating the child level items.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationItemRelationship.RelatedItems">
            <summary>
              The child level items in a classification structure that are related to the parent level item.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationNotation">
            <summary>
              An IfcClassificationNotation is a notation used from published reference (which may be either publicly available from a classification society or is published locally for the purposes of an organization, project or other purpose).
            </summary>
            <remarks>
              Definition from IAI: An IfcClassificationNotation is a notation used from published reference (which may be either publicly available from a classification society or is published locally for the purposes of an organization, project or other purpose). 
              HISTORY: New class in IFC Release 1.5. It has changed in IFC Release 2x. Documentation corrections made in IFC 2x Addendum 1
              Use Definitions
              A classification notation may be developed using various notation facets. A facet is a part of the actual notation but which has a specific meaning. For instance, it may be appropriate to classify an item by owning actor (represented by A=Architect) and by an entry from a classification table such as CI/SfB (represented by 210 for external wall). This gives a classification as A210.
              All classifications of an object that are contained within the IFC model are made through the IfcClassificationNotation class. For a given object, the IfcRelAssociatesClassification class makes the connection between the IfcObject and the IfcClassificationNotation. 
              It is a requirement that a classification notation can only bring together facets from the same classification system or source. Bringing together notation facets from different sources within the same classification notation is not allowed. However, multiple classifications can be applied to a single object through the use of more than one instance of IfcRelAssociatesClassification. In this way it is possible to define multiple classification notations where each notation contains facets from a single source.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationNotation.NotationFacets">
            <summary>
              Alphanumeric characters in defined groups from which the classification notation is derived.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationNotationFacet">
            <summary>
              An IfcClassificationNotationFacet is a group of alphanumeric characters used within a classification notation.
            </summary>
            <remarks>
              Definition from IAI: An IfcClassificationNotationFacet is a group of alphanumeric characters used within a classification notation. 
              HISTORY: New class in IFC Release 1.5. Modified in IFC 2x.
              Use Definitions
              An IfcClassificationNotationFacet object holds an individual classification value that is to be assigned to an object through IfcClassificationNotation and IfcRelAssociatesClassification objects.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationNotationFacet.NotationValue">
            <summary>
              The notation value that specifies the classification e.g. 'L781'
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationReference">
            <summary>
              An IfcClassificationReference is a reference into a classification system or source (see IfcClassification).
            </summary>
            <remarks>
              Definition from IAI: An IfcClassificationReference is a reference into a classification system or source (see IfcClassification). 
              An optional inherited ItemReference key is also provided to allow more specific references to classification items (or tables) by type. 
              The inherited Name attribute allows for a human interpretable designation of a classification notation (or code) - see use definition of "Lightweight Classification".
              HISTORY: New entity in IFC 2x.
              Use Definitions
              Lightweight Classification
              The IfcClassificationReference can be used as a form of 'lightweight' classification through the 'ItemReference' attribute inherited from the abstract 
              IfcExternalReference class. In this case, the 'ItemReference' could take (for instance) the Uniclass notation "L6814" which, i
              f the classification was well understood by all parties and was known to be taken from a particular classification source, would be sufficient. 
              The Name attribute could be the title "Tanking". This would remove the need for the overhead of the more complete classification structure of the model.
              However, it is not recommended that this lightweight method be used in cases where more than one classification system is in use or 
              where there may be uncertainty as to the origin or meaning of the classification.
              Referencing from an External Source
              Classifications of an object may be referenced from an external source rather than being contained within the IFC model. 
              This is done through the IfcClassificationReference class.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcClassificationReference.ReferencedSource">
            <summary>
              Optional. The classification system or source that is referenced.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentElectronicFormat">
            <summary>
              An IfcDocumentElectronicFormat captures the type of document being referenced as an external source,and for which metadata is specified by IfcDocumentInformation.
            </summary>
            <remarks>
              Definition from IAI: An IfcDocumentElectronicFormat captures the type of document being referenced as an external source,and for which metadata is specified by IfcDocumentInformation. 
              HISTORY: New entity in IFC 2x
              Formal Propositions:
              WR1   :   In order to specify a valid electronic document format either the file extension or the MIME type has to be given.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentElectronicFormat.FileExtension">
            <summary>
              Optional. File extension of electronic document used by computer operating system.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentElectronicFormat.MimeContentType">
            <summary>
              Optional. Main Mime type (as published by W3C or as user defined application type)
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentElectronicFormat.MimeSubtype">
            <summary>
              Optional. Mime subtype information.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation">
            <summary>
              An IfcDocumentInformation captures "metadata" of an external document.
            </summary>
            <remarks>
              Definition from IAI: An IfcDocumentInformation captures "metadata" of an external document. The actual content of the document is 
              not defined in IFC ; instead, it can be found following the reference given to IfcDocumentReference. 
              HISTORY: New entity in IFC 2x.
            </remarks>
        </member>
        <member name="M:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.SetDocumentReferences(System.Boolean,Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentReference[])">
            <summary>
              Initialise the Document Reference list and add passed IfcDocumentReference objects to list
            </summary>  
            <param name="clear">if true will clear existing list if existing</param>
            <param name="ifcDocumentReferences">IfcDocumentReference objects as list or ',' separated parameters</param>
        </member>
        <member name="M:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.SetEditors(System.Boolean,Xbim.XbimExtensions.SelectTypes.IfcActorSelect[])">
            <summary>
              Initialise the Editors List and add passed IfcActorSelect objects to list
            </summary>  
            <param name="clear">if true will clear existing list if existing</param>
            <param name="ifcActorSelects">IfcActorSelect objects as list or ',' separated parameters</param>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.DocumentId">
            <summary>
              Identifier that uniquely identifies a document.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.Name">
            <summary>
              File name or document name assigned by owner.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.Description">
            <summary>
              Optional. Description of document and its content.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.DocumentReferences">
            <summary>
              Optional. Information on the referenced document.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.Purpose">
            <summary>
              Optional. Purpose for this document.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.IntendedUse">
            <summary>
              Optional. Intended use for this document.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.Scope">
            <summary>
              Optional. Scope for this document.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.Revision">
            <summary>
              Optional. Document revision designation
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.DocumentOwner">
            <summary>
              Optional. Information about the person and/or organization acknowledged as the 'owner' of this document. In some contexts, the document owner determines who has access to or editing right to the document.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.Editors">
            <summary>
              Optional. The persons and/or organizations who have created this document or contributed to it.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.CreationTime">
            <summary>
              Optional. Date and time stamp when the document was originally created.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.LastRevisionTime">
            <summary>
              Optional. Date and time stamp when this document version was created.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.ElectronicFormat">
            <summary>
              Optional. Describes the electronic format of the document being referenced, providing the file extension and the manner in which the content is provided.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.ValidFrom">
            <summary>
              Optional. Date, when the document becomes valid.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.ValidUntil">
            <summary>
              Optional. Date until which the document remains valid.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.Confidentiality">
            <summary>
              Optional. The level of confidentiality of the document.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.Status">
            <summary>
              Optional. The current status of the document. Examples of status values that might be used for a document information status include:
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.IsPointedTo">
            <summary>
              An inverse relationship from the IfcDocumentInformationRelationship to the related documents.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformation.IsPointer">
            <summary>
              An inverse relationship from the IfcDocumentInformationRelationship to the relating document.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformationRelationship">
            <summary>
              An IfcDocumentInformationRelationship is a relationship class that enables a document to have the ability to reference other documents.
            </summary>
            <remarks>
              Definition from IAI: An IfcDocumentInformationRelationship is a relationship class that enables a document to have the ability to reference other documents.
              HISTORY: New entity in IFC Release 2x.
              Use Definitions
              This class can be used to describe relationships in which one document may reference one or more other sub documents or where a document is used as a replacement for another document (but where both the original and the replacing document need to be retained).
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformationRelationship.RelatingDocument">
            <summary>
              The document that acts as the parent, referencing or original document in a relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformationRelationship.RelatedDocuments">
            <summary>
              The document that acts as the child, referenced or replacing document in a relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentInformationRelationship.RelationshipType">
            <summary>
              Optional. Describes the type of relationship between documents. This could be sub-document, replacement etc. The interpretation has to be established in an application context.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentReference">
            <summary>
              An IfcDocumentReference is a reference to the location of a document.
            </summary>
            <remarks>
              Definition from IAI: An IfcDocumentReference is a reference to the location of a document. The reference is given by a system interpretable Location attribute (e.g., an URL string) or by a human readable location, where the document can be found, and an optional inherited internal reference ItemReference, which refers to a system interpretable position within the document. The optional inherited Name attribute is meant to have meaning for human readers. Optional document metadata can also be captured through reference to IfcDocumentInformation.
              HISTORY: New Entity in IFC Release 2.0. Modified in IFC 2x.
              Use Definitions
              Provides a lightweight capability that enables a document to be identified solely by reference to a name by which it is commonly known. The reference can also be used to point to document information for more detail as required.
              For example, the IAI mission statement in a document "Introduction to IAI" can be referenced by IfcDocumentReference.Location = 'http://iai-international.org/intro.html', and IfcDocumentReference = 'Mission statement'. Additionally: IfcDocumentReference.ReferenceToDocument[1].Name = 'Introduction to IAI', and IfcDocumentReference.ReferenceToDocument[1].Description = 'Basic document to introduce the aims of IAI'.
              Formal Propositions:
              WR1   :   A name should only be given, if no document information (including the document name) is attached
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentReference.ReferenceToDocument">
            <summary>
              The document information that is being referenced.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ExternalReferenceResource.IfcDocumentStatusEnum">
            <summary>
              Enables selection of the status of document information from a list of choices.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ExternalReferenceResource.IfcLibraryInformation">
            <summary>
              An IfcLibraryInformation is a class that describes a library where a library is a structured store of information, normally organized in a manner which allows information lookup through an index or reference value.
            </summary>
            <remarks>
              Definition from IAI: An IfcLibraryInformation is a class that describes a library where a library is a structured store of information, normally organized in a manner which allows information lookup through an index or reference value. IfcLibraryInformation provides the library name and optional version, version date and publisher attributes. 
              NOTE: The complete definition of the information in an external library is out of scope in this IFC release. 
              HISTORY: New Entity in IFC Release 2.0. Renamed from IfcLibrary to IfcLibraryInformation in IFC 2x.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcLibraryInformation.Name">
            <summary>
              The name which is used to identify the library.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcLibraryInformation.Version">
            <summary>
              Optional. Identifier for the library version used for reference.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcLibraryInformation.Publisher">
            <summary>
              Optional. Information of the organization that acts as the library publisher.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcLibraryInformation.VersionDate">
            <summary>
              Optional. Date of the referenced version of the library.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcLibraryInformation.LibraryReference">
            <summary>
              Optional. Information on the library being referenced.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ExternalReferenceResource.IfcLibraryReference">
            <summary>
              An IfcLibraryReference is a reference into a library of information by location (as an URL).
            </summary>
            <remarks>
              Definition from IAI: An IfcLibraryReference is a reference into a library of information by location (as an URL). It also provides an optional inherited ItemReference key to allow more specific references to library sections or tables, and the inherited Name attribute allows for a human interpretable identification of the library item. Also, general information on the external library can be given through IfcLibraryInformation, accessed by ReferenceIntoLibrary.
              HISTORY: New Entity in IFC Release 2.0, restructured in IFC 2x .
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ExternalReferenceResource.IfcLibraryReference.ReferenceIntoLibrary">
            <summary>
              Optional. The library information that is being referenced.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.Ifc2DCompositeCurve">
            <summary>
              An Ifc2DCompositeCurve is an IfcCompositeCurve that is defined within the coordinate space of an IfcPlane.
            </summary>
            <remarks>
              Definition from IAI: An Ifc2DCompositeCurve is an IfcCompositeCurve that is defined within the coordinate space of an IfcPlane. Therefore the dimensionality of the Ifc2DCompositeCurve has to be 2. 
              NOTE OF DEPRECATION: After the enhancement of the profile definition capacities in IFC Release 2.x this entity is not needed anymore for the definition of boundaries on a plane. Therefore this entity is marked as deprecated - that means it will not be supported in future versions of IFC.
              NOTE: This entity has been introduced to get a more straight forward definition of surface boundaries than by its counterpart in STEP: composite_curve_on_surface and boundary_curve. Since the only basis elementary surface in IFC is the plane surface, a two dimensional composite curve provides enough capability to define the boundary. 
              HISTORY: New class in IFC Release 1.5 
              Formal Propositions:
              WR1   :   The composite curve shall be closed.
             
              WR2   :   The dimensionality of the composite curve shall be 2
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcCompositeCurve">
            <summary>
              A composite curve (IfcCompositeCurve) is a collection of curves joined end-to-end.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A composite curve (IfcCompositeCurve) is a collection of curves joined end-to-end. The individual segments of the curve are themselves defined as composite curve segments. The parameterization of the composite curve is an accumulation of the parametric ranges of the referenced bounded curves. The first segment is parameterized from 0 to l1, and, for i ³ 2, the ith segment is parameterized from 
              where lk is the parametric length (i.e., difference between maximum and minimum parameter values) of the curve underlying the kth segment. 
              NOTE Corresponding STEP entity: composite_curve, please refer to ISO/IS 10303-42:1994, p. 56 for the final definition of the formal standard. The WR2 is added to ensure consistent Dim at all segments. 
              HISTORY New class in IFC Release 1.0 
              Informal Propositions:
              The SameSense attribute of each segment correctly specifies the senses of the component curves. When traversed in the direction indicated by SameSense, the segments shall join end-to-end. 
              Formal Propositions:
              WR41   :   No transition code should be Discontinuous, except for the last code of an open curve.  
              WR42   :   Ensures, that all segments used in the curve have the same dimensionality.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcAxis1Placement">
            <summary>
              The direction and location in three dimensional space of a single axis.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: The direction and location in three dimensional space of a single axis. An axis1_placement is defined in terms of a locating point (inherited from placement supertype) and an axis direction: this is either the direction of axis or defaults to (0.0,0.0,1.0). The actual direction for the axis placement is given by the derived attribute z (Z). 
              NOTE: Corresponding STEP name: axis1_placement, please refer to ISO/IS 10303-42:1994, p. 28 for the final definition of the formal standard. 
              HISTORY: New entity in IFC Release 1.5 
              Illustration:
              Definition of the IfcAxis1Placement within the three-dimensional coordinate system. 
              EXPRESS specification:
              Formal Propositions:
              WR1   :   The Axis when given should only reference a three-dimensional IfcDirection.  
              WR2   :   The Cartesian point defining the Location shall have the dimensionality of 3.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcPlacement">
            <summary>
              A placement entity defines the local environment for the definition of a geometry item.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A placement entity defines the local environment for the definition of a geometry item. It locates the item to be defined and, in the case of the axis placement subtypes, gives its orientation. 
              Additional definition from ISO/WD SC4/WG12/N071 Part42.2 geometry_schema: A placement locates a geometric item with respect to the coordinate system of its geometric context. 
              Definition from IAI: The IfcPlacement is an abstract supertype not to be directly instantiated, whereas the STEP P42 entity placement can be instantiated to define a placement without orientation. The derived attribute Dim has been added, see also note at IfcGeometricRepresentationItem. 
              NOTE: Corresponding STEP entity: placement. Please refer to ISO/IS 10303-42:1994, p. 27 for the final definition of the formal standard. 
              HISTORY: New entity in IFC Release 1.0
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcPlacement.Location">
            <summary>
              The geometric position of a reference point, such as the center of a circle, of the item to be located.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcPlacement.Dim">
            <summary>
              Derived. The space dimensionality of this class, derived from the dimensionality of the location.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcAxis1Placement.Axis">
            <summary>
              Optional. The direction of the local Z axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcAxis1Placement.Z">
            <summary>
              Derived. The normalized direction of the local Z axis. It is either identical with the Axis value, if given, or it defaults to [0.,0.,1.]
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcAxis2Placement2D">
            <summary>
              The location and orientation in two dimensional space of two mutually perpendicular axes.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: The location and orientation in two dimensional space of two mutually perpendicular axes. An axis2_placement_2d is defined in terms of a point, (inherited from the placement supertype), and an axis. It can be used to locate and originate an object in two dimensional space and to define a placement coordinate system. The class includes a point which forms the origin of the placement coordinate system. A direction vector is required to complete the definition of the placement coordinate system. The reference direction defines the placement X axis direction, the placement Y axis is derived from this. 
              Definition from IAI: If the RefDirection attribute is not given, the placement defaults to P[1] (x-axis) as [1.,0.] and P[2] (y-axis) as [0.,1.]. 
              NOTE: Corresponding STEP name: axis2_placement_2d, please refer to ISO/IS 10303-42:1994, p. 28 for the final definition of the formal standard. 
              HISTORY: New entity in IFC Release 1.5.
              Illustration
              Definition of the IfcAxis2Placement2D within the two-dimensional coordinate system. 
              EXPRESS specification:
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcAxis2Placement2D.RefDirection">
            <summary>
              Optional. The direction used to determine the direction of the local X Axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcAxis2Placement2D.P">
            <summary>
              Optional.   P[1]: The normalized direction of the placement X Axis. This is (1.0,0.0,0.0) if RefDirection is omitted. P[2]: The normalized direction of the placement Y Axis. This is a derived attribute and is orthogonal to P[1].
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcAxis2Placement3D">
            <summary>
              The location and orientation in three dimensional space of three mutually perpendicular axes.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: The location and orientation in three dimensional space of three mutually perpendicular axes. An axis2_placement_3D is defined in terms of a point (inherited from placement supertype) and two (ideally orthogonal) axes. It can be used to locate and originate an object in three dimensional space and to define a placement coordinate system. The entity includes a point which forms the origin of the placement coordinate system. Two direction vectors are required to complete the definition of the placement coordinate system. The axis is the placement Z axis direction and the ref_direction is an approximation to the placement X axis direction. 
              Definition from IAI: If the attribute values for Axis and RefDirection are not given, the placement defaults to P[1] (x-axis) as [1.,0.,0.], P[2] (y-axis) as [0.,1.,0.] and P[3] (z-axis) as [0.,0.,1.].  
              NOTE  Corresponding STEP name: axis2_placement_3d, please refer to ISO/IS 10303-42:1994 for the final definition of the formal standard. The WR5 is added to ensure that either both attributes Axis and RefDirection are given, or both are omitted.
              HISTORY  New entity in IFC Release 1.5.
              Illustration
              Definition of the IfcAxis2Placement3D
              Formal Propositions:
              WR1   :   The dimensionality of the placement location shall be 3.  
              WR2   :   The Axis when given should only reference a three-dimensional IfcDirection.  
              WR3   :   The RefDirection when given should only reference a three-dimensional IfcDirection.  
              WR4   :   The Axis and RefDirection shall not be parallel or anti-parallel.  
              WR5   :   Either both (Axis and RefDirection) are not given and therefore defaulted, or both shall be given. This is a further constraint in IFC Release 1.5.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcAxis2Placement3D.Axis">
            <summary>
              Optional. The exact direction of the local Z Axis.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcAxis2Placement3D.RefDirection">
            <summary>
              Optional. The direction used to determine the direction of the local X Axis. If necessary an adjustment is made to maintain orthogonality to the Axis direction. If Axis and/or RefDirection is omitted, these directions are taken from the geometric coordinate system.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcAxis2Placement3D.P">
            <summary>
              Derived. The normalized directions of the placement X Axis (P[0]) and the placement Y Axis (P[1]) and the placement Z Axis (P[2]).
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurveForm">
            <summary>
              This type is used to indicate that the B-spline curve represents a part of a curve of some sppeci c form.
            </summary>
            <remarks>
              NOTE: Corresponding STEP type: b_spline_curve_form. Please refer to ISO/IS 10303-42:1994, p. 15 for the final definition of the formal standard. 
              HISTORY: New type in Release IFC2x Edition 2.
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurveForm.POLYLINE_FORM">
            <summary>
              A connected sequence of line segments represented by degree 1 B-spline basis functions.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurveForm.CIRCULAR_ARC">
            <summary>
              An arc of a circle, or a complete circle represented by a B-spline curve.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurveForm.ELLIPTIC_ARC">
            <summary>
              An arc of an ellipse, or a complete ellipse, represented by a B-spline curve.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurveForm.PARABOLIC_ARC">
            <summary>
              An arc of finite length of a parabola represented by a B-spline curve.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurveForm.HYPERBOLIC_ARC">
            <summary>
              An arc of finite length of one branch of a hyperbola represented by a B-spline curve.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometryResource.IfcBSplineCurveForm.UNSPECIFIED">
            <summary>
              A B-spline curve for which no particular form is specified.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcCartesianPoint">
            <summary>
              A point defined by its coordinates in a two or three dimensional rectangular Cartesian coordinate system, or in a two dimensional parameter space.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A point defined by its coordinates in a two or three dimensional rectangular Cartesian coordinate system, or in a two dimensional parameter space. The entity is defined in a two or three dimensional space. 
              Definition from IAI: The derived attribute Dim has been added (see also note at IfcGeometricRepresentationItem). The WR1 was added to constrain the usage of IfcCartesianPoint in the context of IFC geometry. For the purpose of defining geometry in IFC only two and three dimensional Cartesian points are used. 
              NOTE: Corresponding STEP entity : cartesian_point, please refer to ISO/IS 10303-42:1994, p. 23 for the final definition of the formal standard. 
              HISTORY: New entity in IFC Release 1.0 
              Formal Propositions:
              WR1   :   Only two or three dimensional points shall be used for the purpose of defining geometry in this IFC Resource
            </remarks>
        </member>
        <member name="M:Xbim.Ifc2x3.GeometryResource.IfcCartesianPoint.XbimPoint3D">
            <summary>
              If the cartesian is 3D then returns Point3D or throws exception
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCartesianPoint.Coordinates">
            <summary>
              The first, second, and third coordinate of the point location. If placed in a two or three dimensional rectangular Cartesian coor
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcCartesianPoint.Dim">
            <summary>
              Derived. The space dimensionality of this class, determined by the number of coordinates in the List of Coordinates.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcDirection">
            <summary>
              This entity defines a general direction vector in two or three dimensional space.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: This entity defines a general direction vector in two or three dimensional space. The actual magnitudes of the components have no effect upon the direction being defined, only the ratios X:Y:Z or X:Y are significant. 
              NOTE: The components of this entity are not normalized. If a unit vector is required it should be normalized before use. 
              NOTE: Corresponding STEP entity: direction. Please refer to ISO/IS 10303-42:1994, p.26 for the final definition of the formal standard. The derived attribute Dim has been added (see also note at IfcGeometricRepresentationItem). 
              HISTORY: New entity in IFC Release 1.0
            </remarks>
        </member>
        <member name="M:Xbim.Ifc2x3.GeometryResource.IfcDirection.#ctor">
            <summary>
              Constructs a 3D direction
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.GeometryResource.IfcDirection.SetXY(System.Double,System.Double)">
            <summary>
              Sets X and Y changes dimension to 2D
            </summary>
            <param name = "x"></param>
            <param name = "y"></param>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcDirection.DirectionRatios">
            <summary>
              The components in the direction of X axis (DirectionRatios[1]), of Y axis (DirectionRatios[2]), and of Z axis (DirectionRatios[3])
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.GeometryResource.IfcDirection.Dim">
            <summary>
              Derived. The space dimensionality of this class, defined by the number of real in the list of DirectionRatios.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcTransitionCode">
            <summary>
              This type conveys the continuity properties of a composite curve or surface.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: This type conveys the continuity properties of a composite curve or surface. The continuity referred to is geometric, not parametric continuity. For example, in ContSameGradient the tangent vectors of successive segments will have the same direction, but may have different magnitude. 
              NOTE Corresponding STEP type: transition_code, please refer to ISO/IS 10303-42:1994, p. 14 for the final definition of the formal standard. 
              HISTORY New Type in IFC Release 1.0 
              Figure quoted from ISO/CD 10303-42:1992, p. 55
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometryResource.IfcTransitionCode.DISCONTINUOUS">
            <summary>
              The segments do not join. This is permitted only at the boundary of the curve or surface to indicate that it is not closed.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometryResource.IfcTransitionCode.CONTINUOUS">
            <summary>
              The segments join but no condition on their tangents is implied.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometryResource.IfcTransitionCode.CONTSAMEGRADIENT">
            <summary>
              The segments join and their tangent vectors or tangent planes are parallel and have the same direction at the joint: equality of derivatives is not required.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometryResource.IfcTransitionCode.CONTSAMEGRADIENTSAMECURVATURE">
            <summary>
              For a curve, the segments join, their tangent vectors are parallel and in the same direction and their curvatures are equal at the joint: equality of derivatives is not required. For a surface this implies that the principle curvatures are the same and the principle directions are coincident along the common boundary.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.GeometryResource.IfcTrimmingPreference">
            <summary>
              This type is used to describe the preferred way of trimming a parametric curve where the trimming is multiply defined.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: This type is used to describe the preferred way of trimming a parametric curve where the trimming is multiply defined. 
              NOTE Corresponding STEP type: trimming_preference, please refer to ISO/IS 10303-42:1994, p. 18 for the final definition of the formal standard. 
              HISTORY New Type in IFC Release 1.0
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometryResource.IfcTrimmingPreference.CARTESIAN">
            <summary>
              Indicates that trimming by Cartesian point is preferred.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometryResource.IfcTrimmingPreference.PARAMETER">
            <summary>
              Indicates the preference for the parameter value.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.GeometryResource.IfcTrimmingPreference.UNSPECIFIED">
            <summary>
              Indicates that no preference is communicated.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialResource.IfcDirectionSenseEnum">
            <summary>
              Enumeration denoting whether sense of direction is positive or negative along the given axis.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MaterialResource.IfcDirectionSenseEnum.POSITIVE">
            <summary>
              Direction defined to be positive.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MaterialResource.IfcDirectionSenseEnum.NEGATIVE">
            <summary>
              Direction defined to be negative.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcPropertySet">
            <summary>
              The IfcPropertySet defines all dynamically extensible properties.
            </summary>
            <remarks>
              Definition from IAI: The IfcPropertySet defines all dynamically extensible properties. The property set is a container class that holds properties within a property tree. These properties are interpreted according to their name attribute. 
              Property sets, defining a particular type of object, can be assigned an object type (IfcTypeObject). Property sets are assigned to objects (IfcObject) through an objectified relationship (IfcRelDefinedByProperties). If the same set of properties applies to more than one object, it should be assigned by a single instance of IfcRelDefinedByProperties to a set of related objects. Those property sets are referred to as shared property sets.
              HISTORY  New Entity in IFC Release 1.0 
              Use Definition
              Instances of IfcPropertySet are used to assign named sets of individual properties (complex or single properties). Each individual property has a significant name string. Some property sets have predefined instructions on assigning those significant name, these are listed under "property sets" main menu item within this specification. The naming convention "Pset_Xxx" applies to those property sets and shall be used as the value to the Name attribute.
              In addition any user defined property set can be captured, those property sets shall have a Name value not including the "Pset_" prefix.
              Formal Propositions:
              WR31   :   The Name attribute has to be provided. The attribute is used to specify the type of the property set definition. The property set structure for particular property sets may be given within the property set definition part of the IFC specification.
             
              WR32   :   Every property within the property set shall have a unique name attribute value.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcPropertySet.HasProperties">
            <summary>
              Contained set of properties. For property sets defined as part of the IFC Object model, the property objects within a property set are defined as part of the standard.
            </summary>
            <remarks>
              If a property is not contained within the set of predefined properties, its value has not been set at this time.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcProxy">
            <summary>
              The IfcProxy is intended to be a kind of a container for wrapping objects which are defined by associated properties, which may or may not have a geometric representation and placement in space.
            </summary>
            <remarks>
              Definition from IAI: The IfcProxy is intended to be a kind of a container for wrapping objects which are defined by associated properties, which may or may not have a geometric representation and placement in space. A proxy may have a semantic meaning, defined by the Name attribute, and property definitions, attached through the property assignment relationship, which definition may be outside of the definitions given by the current release of IFC.
              The ProxyType may give an indication to which high level semantic breakdown of object the semantic definition of the proxy relates to. the Tag attribute may be used to assign a human or system interpretable identifier (such as a serial number or bar code).
              NOTE 1  Given that only a limited number of semantic constructs can be formally defined within IFC (and it will never be possible to define all), there has to be a mechanism for capturing those constructs that are not (yet) defined by IFC. 
              NOTE 2  Product proxies are a mechanism that allows to exchange data that is part of the project but not necessarily part of the IFC model. Those proxies may have geometric representations assigned.
              HISTORY  New entity in IFC Release 1.5.
              Formal Propositions:
              WR1   :   The Name attribute has to be provided for a proxy.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcProxy.ProxyType">
            <summary>
              High level (and only) semantic meaning attached to the IfcProxy, defining the basic construct type behind the Proxy, e.g. Product or Process.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcProxy.Tag">
            <summary>
              The tag (or label) identifier at the particular instance of a product, e.g. the serial number, or the position number. It is the identifier at the occurrance level.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelAggregates">
            <summary>
              The aggregation relationship IfcRelAggregates is a special type of the general composition/decomposition (or whole/part) relationship IfcRelDecomposes.
            </summary>
            <remarks>
              Definition from IAI: The aggregation relationship IfcRelAggregates is a special type of the general composition/decomposition (or whole/part) relationship IfcRelDecomposes. The aggregation relationship can be applied to all subtypes of object.
              Some further specializations of decomposition may imply additional constraints and meanings, such as the requirement of aggregates to represent physical containment. In cases of physical containment the representation (within the same representation context) of the whole can be taken from the sum of the representations of the parts.
              EXAMPLE: A roof is the aggregation of the roof elements, such as roof slabs, rafters, purlins, etc. Within the same representation context, e.g. the detailed geometric representation, the shape representation of the roof is given by the shape representation of its parts
              Decompositions imply a dependency, i.e. the definition of the whole depends on the definition of the parts and the parts depend on the existence of the whole. The behaviour that is implied from the dependency has to be established inside the applications.
              HISTORY: New entity in IFC Release 2x.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelDecomposes">
            <summary>
              The decomposition relationship, IfcRelDecomposes, defines the general concept of elements being composed or decomposed.
            </summary>
            <remarks>
              Definition from IAI: The abstract generalization of all objectified relationships in IFC. Objectified relationships are the preferred way to handle relationships among objects. This allows to keep relationship specific properties directly at the relationship and opens the possibility to later handle relationship specific behavior. 
              There are two different types of relationships, 1-to-1 relationships and 1-to-many relationship. used within the subtypes of IfcRelationship. The following convention applies to all subtypes:
              The two sides of the objectified relationship are named 
              - Relating+name of relating object and 
              - Related+name of related object 
              In case of the 1-to-many relationship, the related side of the relationship shall be an aggregate SET 1:N 
              HISTORY: New entitiy in IFC Release 1.0.
              Formal Propositions:
              WR31   :   The instance to which the relation RelatingObject points shall not be contained in the List of RelatedObjects.  
              WR32   :   Only object occurrences shall be valid instances for an object decomposition. 
              NOTE  This restriction might be lifted in future releases of the IFC object model.  
              WR33   :   Only object occurrences shall be valid instances for an object decomposition. 
              NOTE  This restriction might be lifted in future releases of the IFC object model.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelDecomposes.RelatingObject">
            <summary>
              The object that represents the nest or aggregation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelDecomposes.RelatedObjects">
            <summary>
              The objects being nested or aggregated.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelAssignsToGroup">
            <summary>
              This objectified relationship (IfcRelAssignsToGroup) handles the assignment of objects (subtypes of IfcObject) to a group (subtypes of IfcGroup).
              The relationship handles the assignment of group members to the group object. It allows for grouping arbitrary objects within a group, including other groups. 
              The grouping relationship can be applied in a recursive manner. The resulting group is of type IfcGroup. 
              The Purpose attribute defined at the supertype IfcReleationship, may assign a descriptor, that defines the purpose of the group.
              The inherited attribute RelatedObjects gives the references to the objects, which are the elements within the group. The RelatingGroup is the group, that comprises all elements.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelAssignsToGroup.RelatingGroup">
            <summary>
              Reference to group that finally contains all assigned group members.
            </summary>
            <remarks>
              WR1   :   The instance to with the relation points shall not be contained in the List of RelatedObjects.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelAssignsToProcess">
            <summary>
              his objectified relationship (IfcRelAssignsToProcess) handles the assignment of an object as an item the process operates on
            </summary>
            <remarks>
              Definition from IAI: This objectified relationship (IfcRelAssignsToProcess) handles the assignment of an object as an item the process operates on. Process is related to the product that it operate on (normally as input or output) through this relationship. Processes can operate on things other than products, and can operate in ways other than input and output. 
              Example, it may be common to define processes during estimating or scheduling that describe design tasks (resulting in documents), procurement tasks (resulting in construction materials), planning tasks (resulting in processes), etc. Furthermore, the ways in which process can operate on something might include "installs", "finishes", "transports", "removes", etc. The ways are described as operation types.
              The inherited attribute RelatedObjects gives the references to the objects, which the process operates on. The RelatingProcess is the process, that operates on the object. The operation types are captured in the inherited attribute Name.
              HISTORY: New entity in IFC Release 1.5. Has been renamed from IfcRelProcessOperatesOn in IFC Release 2x.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelAssignsToProduct">
            <summary>
              This objectified relationship IfcRelAssignsToProduct handles the assignment of objects (subtypes of IfcObject) to a product (subtypes of IfcProduct).
            </summary>
            <remarks>
              Definition from IAI: This objectified relationship IfcRelAssignsToProduct handles the assignment of objects (subtypes of IfcObject) to a product (subtypes of IfcProduct). 
              The Name attribute should be used to classify the usage of the IfcRelAssignsToProduct objectified relationship. The following Name values are proposed:
              'Reference' : Assignment of a product (via RelatingProduct) to a spatial structure (via RelatedObjects) to which it is referenced (in contrary to being contained - which is handled by IfcRelContainedInSpatialStructure). 
              IFC2x Edition 3 CHANGE  The reference of a product within a spatial structure is now handled by a new relationship object IfcRelReferencedInSpatialStructure. The IfcRelAssignsToProduct shall not be used to represent this relation from IFC2x3 onwards.
              'Context' : Assignment of a context specific representation, such as of structural members to a different context representation (with potentially different decomposition breakdown) such as of building elements for a specific context specific representation.  
              IFC2x Edition 3 CHANGE  The relation of a structural member (as instance of IfcStructuralMember or its subclasses) to a physical element  (as instance of IfcElement or its subclasses) is now handled by a new relationship object IfcRelConnectsStructuralElement. The IfcRelAssignsToProduct shall not be used to represent this relation from IFC2x3 onwards.
              'View' : Assignment of a product (via RelatingProduct) that is decomposed according to a discipline view, to another product (via RelatedObjects) that is decomposed according to a different discipline view. An example is the assignment of the architectural slab to a different decomposition of the pre manufactured sections of a slab (under a precast concrete discipline view). 
              HISTORY New Entity in IFC Release 2x
              Formal Propositions:
              WR1   :   The instance to which the relation points (RelatingProduct) shall not be contained in the list of RelatedObjects.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelAssignsToProduct.RelatingProduct">
            <summary>
              Reference to group that finally contains all assigned group members.
            </summary>
            <remarks>
              WR1   :   The instance to with the relation points shall not be contained in the List of RelatedObjects.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelAssignsToResource">
            <summary>
              This objectified relationship (IfcRelAssignsToResource) handles the assignment of objects (subtypes of IfcObject) to a resource (subtypes of IfcResource).
            </summary>
            <remarks>
              Definition from IAI: This objectified relationship (IfcRelAssignsToResource) handles the assignment of objects (subtypes of IfcObject) to a resource (subtypes of IfcResource). 
              For example: The assignment of a resource (e.g. a labor resource - as subtype of IfcResource) to a construction process on site (process as subtype of IfcObject) , is an application of this generic relationship.
              HISTORY New Entity in IFC Release 2x. 
              Formal Propositions:
              WR1   :   The instance to with the relation points shall not be contained in the List of RelatedObjects.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelAssociatesClassification">
            <summary>
              This objectified relationship (IfcRelAssociatesClassification) handles the assignment of a classification object (items of the select IfcClassificationSelect) to objects (subtypes of IfcObject).
            </summary>
            <remarks>
              Definition from IAI: This objectified relationship (IfcRelAssociatesClassification) handles the assignment of a classification object (items of the select IfcClassificationSelect) to objects (subtypes of IfcObject).
              The relationship is used to assign a classification notation or a classification reference to objects. A single notation can be applied to multiple objects. Depending on the type of the RelatingClassification, either a reference to a fully described classification system can be made, or just a reference using the classification code.
              The inherited attribute RelatedObjects define the objects to which the classification is applied. The attribute RelatingClassification is the reference to a classification, applied to the object(s).
              HISTORY: New entity in IFC Release 2x.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelAssociatesClassification.RelatingClassification">
            <summary>
              Classification applied to the objects.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelAssociatesDocument">
            <summary>
              This objectified relationship (IfcRelAssociatesDocument) handles the assignment of a document information (items of the select IfcDocumentSelect) to objects (subtypes of IfcObject).
            </summary>
            <remarks>
              Definition from IAI: This objectified relationship (IfcRelAssociatesDocument) handles the assignment of a document information (items of the select IfcDocumentSelect) to objects (subtypes of IfcObject).
              The relationship is used to assign a document reference or a more detailed document information to objects. A single document reference can be applied to multiple objects.
              The inherited attribute RelatedObjects define the objects to which the document association is applied. The attribute RelatingDocument is the reference to a document reference, applied to the object(s).
              HISTORY: New entity in IFC Release 2x.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelAssociatesDocument.RelatingDocument">
            <summary>
              Document information or reference which is applied to the objects.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelAssociatesLibrary">
            <summary>
              This objectified relationship (IfcRelAssociatesLibrary) handles the assignment of a library item (items of the select IfcLibrarySelect) to objects (subtypes of IfcObject).
            </summary>
            <remarks>
              Definition from IAI: This objectified relationship (IfcRelAssociatesLibrary) handles the assignment of a library item (items of the select IfcLibrarySelect) to objects (subtypes of IfcObject).
              The relationship is used to assign a library reference or a more detailed link to a library information to objects, property sets or types. A single library reference can be applied to multiple items.
              The inherited attribute RelatedObjects define the items to which the library association is applied. The attribute RelatingLibrary is the reference to a library reference, applied to the item(s).
              HISTORY: New entity in IFC Release 2x.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelAssociatesLibrary.RelatingLibrary">
            <summary>
              Reference to a library, from which the definition of the property set is taken.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelDefines">
            <summary>
              A definition relationship (IfcRelDefines) that uses a type definition or property set definition (seens as partial type information) to define the properties of the object instance.
              It is a specific - occurrence relationship with implied dependencies (as the occurrence properties depend on the specific properties).
              The IfcRelDefines relationship establishes the link between one type (specific) information and several objects (occurrences). 
              Those occurrences then share the same type (or partial type) information.
              EXAMPLE: Several instances of windows within the IFC project model may be of the same (catalogue or manufacturer) type. Thereby they share the same properties. 
              This relationship is established by a subtype of the IfcRelDefines relationship assigning an IfcProductType (or subtype thereof) to the IfcWindow.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelDefines.RelatedObjects">
            <summary>
              Reference to the objects (or single object) to which the property definition applies.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelDefinesByProperties">
            <summary>
              This objectified relationship (IfcRelDefinesByProperties) defines the relationships between property set definitions and objects. 
              Properties are aggregated in property sets, property sets can be grouped to define an object type.
              The IfcRelDefinesByProperties is a 1-to-N relationship, as it allows for the assignment of one property set to a single or to many objects. 
              Those objects then share the same property definition.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelDefinesByProperties.RelatingPropertyDefinition">
            <summary>
              Reference to the property set definition for that object or set of objects.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelDefinesByType">
            <summary>
              This objectified relationship (IfcRelDefinesByType) defines the relationships between an object type and objects.
              The IfcRelDefinesByType is a 1-to-N relationship, as it allows for the assignment of one type information to a single or to many objects. 
              Those objects then share the same object type.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelDefinesByType.RelatingType">
            <summary>
              Reference to the type (or style) information for that object or set of objects.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelNests">
            <summary>
              nesting relationship IfcRelNests is a special type of the general composition/decomposition (or whole/part) relationship IfcRelDecomposes.
            </summary>
            <remarks>
              Definition from IAI: The nesting relationship IfcRelNests is a special type of the general composition/decomposition (or whole/part) relationship IfcRelDecomposes. The nesting relationship can be applied to all subtypes of object, however it requires both the whole and the part to be of the same object type.
              EXAMPLE: A nesting of costs is the composition of a complex cost from other costs. A nesting of work tasks is the composition of an overall work task from more specific work tasks. In all cases the whole has the same type as the parts.
              Decompositions imply a dependency, i.e. the definition of the whole depends on the definition of the parts and the parts depend on the existence of the whole. The behaviour that is implied from the dependency has to be established inside the applications.
              HISTORY: New entity in IFC Release 2.0.
              Formal Propositions:
              WR1   :   The type of the RelatingObject shall always be the same as the type of each RelatedObject, i.e. the RelatingObject and all RelatedObject's are of the same type.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelOverridesProperties">
            <summary>
              The objectified relationship (IfcRelOverridesProperties) defines the relationships between objects and a standard property set.
            </summary>
            <remarks>
              Definition from IAI: The objectified relationship (IfcRelOverridesProperties) defines the relationships between objects and a standard property set. It also defines a set of properties, which values override the standard values given within the standard property set.
              The inherited attributes should be interpreted as follows:
              SELF\IfcRelDefinedByProperties.RelatingPropertyDefinition: Property set, which defines the standard set of properties assigned to all objects, that have the same set of properties, 
              SELF\IfcRelDefines.RelatedObjects: An object occurrence, to which the same set of properties is applied. The object is characterized that certain property values, given by the standard set of properties, have a different value than those defined for all objects of the same style, 
              OverridingProperties: A set of properties, that have a different value for the subset of objects. The set of the individual overriding properties have to correspond with a standard property set and its containing properties, as given by the RelatingPropertyDefinition attribute. The correspondence is established by the Name attribute. 
              It is provided as specialization of IfcRelDefinedByProperties relationship. 
              NOTE that there must be a correspondence between the names of the properties in the set of overriding properties and the names of the properties whose values are to be changed in the base property set. In addition the inherited attribute RelatingPropertyDefinition points to the property set which values are overridden.
              HISTORY: New Entity in IFC Release 2x.
              Formal Propositions:
              WR1   :   The overriding is only applicable as an occurrence property set - i.e. it can only be assigned to a single occurrence of IfcObject.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelOverridesProperties.OverridingProperties">
            <summary>
              A property set, which contains those properties, that have a different value for the subset of objects.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcRelSequence">
            <summary>
              This objectified relationship handles the concatenation of processes over time.
            </summary>
            <remarks>
              Definition from IAI: This objectified relationship handles the concatenation of processes over time. The sequence is defined as relationship between two processes. The related object is the successor of the relating object, being the predecessor. A time lag is assigned to a sequence, and the sequence type defines the way in which the time lag applies to the sequence. 
              IfcRelSequence is defined as an one-to-one relationship, therefore it assigns one predecessor to one successor. However, each IfcProcess can have multiple predecessors and successors, as the sequence relationship is truly an N-to-M relationship. 
              HISTORY: New entity in IFC Release 1.0.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelSequence.RelatingProcess">
            <summary>
              Reference to the Process, that is the predecessor.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelSequence.RelatedProcess">
            <summary>
              Reference to the Process, that is the successor.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelSequence.TimeLag">
            <summary>
              The way in which the time lag applies to the sequence.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcRelSequence.SequenceType">
            <summary>
              Time Duration of the sequence, it is the time lag between the predecessor and the successor as specified by the SequenceType.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialResource.IfcMaterial">
            <summary>
              A homogenious substance that can be used to form elements.
            </summary>
            <remarks>
              Definition from IAI: A homogenious substance that can be used to form elements. 
              NOTE  In this IFC Release only isotropic materials are allowed for. In future releases also anistropic materials and their usage may be considered. 
              HISTORY  New entity in IFC1.0
              IFC2x Edition 3 CHANGE  The inverse attribute HasRepresentation has been added. Upward compatibility for file based exchange is guaranteed.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterial.Name">
            <summary>
              Name of the matsel.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterial.HasRepresentation">
            <summary>
              Reference to the IfcMaterialDefinitionRepresentation that provides presentation information to a representation common to this matsel in style definitions.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterial.ClassifiedAs">
            <summary>
              Reference to the relationship pointing to the classification(s) of the matsel.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialResource.IfcMaterialClassificationRelationship">
            <summary>
              Relationship assigning classifications to materials.
            </summary>
            <remarks>
              HISTORY: New entity in Release IFC2x.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterialClassificationRelationship.MaterialClassifications">
            <summary>
              The material classifications identifying the type of material.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterialClassificationRelationship.ClassifiedMaterial">
            <summary>
              Material being classified.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialResource.IfcMaterialLayer">
            <summary>
              A single and identifiable part of an element which is constructed of a number of layers (one or more).
            </summary>
            <remarks>
              Definition from IAI: A single and identifiable part of an element which is constructed of a number of layers (one or more). 
              Each IfcMaterialLayer is located relative to the referencing IfcMaterialLayerSet. 
              EXAMPLE: A cavity wall with brick masonry used in each leaf would be modeled using three IfcMaterialLayers: Brick-Air-Brick.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterialLayer.Material">
            <summary>
              Optional reference to the matsel from which the layer is constructed. Note, that if this value is not given, it does not denote a layer with no matsel (an air gap), it only means that the matsel is not specified at that point.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterialLayer.LayerThickness">
            <summary>
              The thickness of the layer (dimension measured along the local x-axis of Mls LCS, in positive direction).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterialLayer.IsVentilated">
            <summary>
              Indication of whether the matsel layer represents an air layer (or cavity).
            </summary>
            <remarks>
              set to TRUE if the matsel layer is an air gap and provides air exchange from the layer to the outside air. 
              set to NULL if the matsel layer is an air gap and does not provide air exchange (or when this information about air exchange of the air gap is not available). 
              set to FALSE if the matsel layer is a solid matsel layer (the default).
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterialLayer.ToMaterialLayerSet">
            <summary>
              Inverse. Reference to the matsel layer set, in which the matsel layer is included.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialResource.IfcMaterialLayerSet">
            <summary>
              A designation by which materials of an element constructed of a number of matsel layers is known and through which the relative positioning of individual layers can be expressed.
            </summary>
            <remarks>
              Definition from IAI: A designation by which materials of an element constructed of a number of matsel layers is known and through which the relative positioning of individual layers can be expressed. 
              EXAMPLE: A cavity brick wall would be modeled as IfcMaterialLayerSet consisting of three IfcMaterialLayer's: brick, air cavity and brick. 
              Geometry use
              Each IfcMaterialLayerSet implicitly defines a reference line (MlsBase), to which the start of the first IfcMaterialLayer is aligned. The total thickness of a layer set is calculated from the individual layer thicknesses, the first layer starting from the reference line and following layers being placed on top of the previous (no gaps or overlaps).
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterialLayerSet.MaterialLayers">
            <summary>
              Identification of the layers from which the matsel layer set is composed.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterialLayerSet.LayerSetName">
            <summary>
              The name by which the matsel layer set is known.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterialLayerSet.TotalThickness">
            <summary>
              Derived. Total thickness of the matsel layer set, sum of each Material Layer thickness.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialResource.IfcMaterialLayerSetUsage">
            <summary>
              Determines the usage of IfcMaterialLayerSet in terms of its location and orientation relative to the associated element geometry.
            </summary>
            <remarks>
              Definition from IAI: Determines the usage of IfcMaterialLayerSet in terms of its location and orientation relative to the associated element geometry. The location of matsel layer set shall be compatible with the element geometry (i.e. matsel layers shall fit inside the element geometry).
              EXAMPLE: For a cavity brick wall with extruded geometric representation, the IfcMaterialLayerSet.TotalThickness shall be equal to the wall thickness. 
              Material layer set is primarily intended to be associated with planar elements with constant thickness. With further agreements on the interpretation of layer set direction, the usage can be extended also to other cases, e.g. to curved elements.
              Generally, an element may be layered in any of its primary directions, denoted by its x, y or z axis. However, with geometry use definitions for specific elements, it may become evident which direction is the relevant one for layering.
              EXAMPLE: For a standard wall with extruded geometric representation (vertical extrusion), the layer set direction shall be perpendicular to extrusion direction, and coincide with the direction denoting the wall thickness (in positive or negative sense). For a curved wall, "direction denoting the wall thickness" can be derived from the element LCS, but it will remain perpendicular to the wall path. 
              EXAMPLE: For a slab with vertically extruded geometric representation, the layer set direction shall coincide with the extrusion direction (in positive or negative sense). 
              Fig 1: shows the use of IfcMaterialLayerSetUsage aligned to the axis of a wall.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterialLayerSetUsage.ForLayerSet">
            <summary>
              Layer set to which the usage is applied.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterialLayerSetUsage.LayerSetDirection">
            <summary>
              Orientation of the layer set relative to element geometry. The meaning of the value of this attribute shall be specified in the geometry use section for each element. For extruded geometric representation, direction can be given along the extrusion path (e.g. for slabs) or perpendicular to it (e.g. for walls).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterialLayerSetUsage.DirectionSense">
            <summary>
              Denotion whether the layer set is oriented in positive or negative sense along the axis given by LayerSetDirection.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterialLayerSetUsage.OffsetFromReferenceLine">
            <summary>
              Offset of the matsel layer set (MlsBase) from reference line. The offset can be positive or negative, unless restricted for a particular building element type in its use definition or by implementer agreement. The reference line for each IfcElement is defined in use definition for the element.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MaterialResource.IfcMaterialList">
            <summary>
              A list of the different materials that are used in an element.
            </summary>
            <remarks>
              Definition from IAI: A list of the different materials that are used in an element. 
              NOTE: The class IfcMaterialList will normally be used where an element is described at a more abstract level. For example, for an architectural specification writer, the only information that may be needed about a concrete column is that it contains concrete, reinforcing steel and mild steel ligatures. It shall not be used for elements consisting of matsel layers when the different layers can be defined and the class IfcMaterialLayerSet can be used. Also, IfcMaterialList shall not be used for elements consisting of a single identifiable matsel, (e.g. to represent anisotropic matsel).
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.MaterialResource.IfcMaterialList.Materials">
            <summary>
              Materials used in a composition of substances.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MeasureResource.IfcContextDependentUnit">
            <summary>
              A context dependent unit is a unit which is not related to the SI system. 
              NOTE The number of parts in an assembly is a physical quantity measured in units that may be called "parts" but which cannot be related to an SI unit. 
              NOTE Corresponding STEP name: context_dependent_unit, please refer to ISO/IS 10303-41:1994 for the final definition of the formal standard.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcContextDependentUnit.Name">
            <summary>
              The word, or group of words, by which the context dependent unit is referred to.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MeasureResource.IfcConversionBasedUnit">
            <summary>
              A conversion based unit is a unit that is defined based on a measure with unit. 
              NOTE Corresponding STEP name: conversion_based_unit, please refer to ISO/IS 10303-41:1994 for the final definition of the formal standard. 
              HISTORY New entity in IFC Release 1.5.1. 
              An inch is a converted unit. It is from the Imperial system, its name is "inch" and it can be related to the si unit, millimetre, through a measure with unit whose value is 25.4 millimetre. A foot is also a converted unit. It is from the Imperial system, its name is "foot" and it can be related to an si unit, millimetre, either directly or through the unit called "inch".
              To identify some commonly used conversion based units the standard designations (case insensitive) for the Name attribute include the following: Name Description 
              'inch' Length measure equal to 25.4 mm 
              'foot' Length measure equal to 30.48 mm 
              'yard' Length measure equal to 914 mm 
              'mile' Length measure equal to 1609 m 
              'acre' Area measure equal to 4046,86 square meters 
              'litre' Volume measure equal to 0.001 cubic meters 
              'pint UK' Volume measure equal to 0.000568 cubic meters 
              'pint US' Volume measure equal to 0.000473 cubic meters 
              'gallon UK' Volume measure equal to 0.004546 cubic meters 
              'gallon US' Volume measure equal to 0.003785 cubic meters 
              'ounce' Weight measure equal to 28.35 g 
              'pound' Weight measure equal to 0.454 kg
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcConversionBasedUnit.Name">
            <summary>
              The word, or group of words, by which the conversion based unit is referred to.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcConversionBasedUnit.ConversionFactor">
            <summary>
              The physical quantity from which the converted unit is derived.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MeasureResource.IfcDerivedUnitElement">
            <summary>
              A derived unit element is one of the unit quantities which makes up a derived unit. 
              EXAMPLE: Newtons per square millimetre is a derived unit. It has two elements, Newton whose exponent has a value of 1 and millimetre whose exponent is -2. 
              NOTE Corresponding STEP name: derived_unit_element, please refer to ISO/IS 10303-41:1994 for the final definition of the formal standard.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcDerivedUnitElement.Unit">
            <summary>
              The fixed quantity which is used as the mathematical factor.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcDerivedUnitElement.Exponent">
            <summary>
              The power that is applied to the unit attribute.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcDimensionalExponents.LengthExponent">
            <summary>
              The power of the length base quantity.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcDimensionalExponents.MassExponent">
            <summary>
              The power of the mass base quantity.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcDimensionalExponents.TimeExponent">
            <summary>
              The power of the time base quantity.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcDimensionalExponents.ElectricCurrentExponent">
            <summary>
              The power of the electric current base quantity.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcDimensionalExponents.ThermodynamicTemperatureExponent">
            <summary>
              The power of the thermodynamic temperature base quantity.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcDimensionalExponents.AmountOfSubstanceExponent">
            <summary>
              The power of the amount of substance base quantity.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcDimensionalExponents.LuminousIntensityExponent">
            <summary>
              The power of the luminous intensity base quantity.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum">
            <summary>
              An enumeration of the international abbreviations of currencies used of various countries.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.AED">
            <summary>
              United Arab Emirates
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.AES">
            <summary>
              Argentina
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.ATS">
            <summary>
              Austria
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.AUD">
            <summary>
              Australia
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.BBD">
            <summary>
              Barbados
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.BEG">
            <summary>
              Belgium
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.BGL">
            <summary>
              Bulgaria
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.BHD">
            <summary>
              Bahrain
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.BMD">
            <summary>
              Bermuda
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.BND">
            <summary>
              Brunei
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.BRL">
            <summary>
              Brazil
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.BSD">
            <summary>
              Bahamas
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.BWP">
            <summary>
              Botswana
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.BZD">
            <summary>
              Belize
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.CAD">
            <summary>
              Canada
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.CBD">
            <summary>
              Carribean
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.CHF">
            <summary>
              Switzerland
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.CLP">
            <summary>
              Chile
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.CNY">
            <summary>
              China
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.CYS">
            <summary>
              Cyprus
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.CZK">
            <summary>
              Czech Republic
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.DDP">
            <summary>
              Dominican Republic
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.DEM">
            <summary>
              Germany
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.DKK">
            <summary>
              Denmark
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.EGL">
            <summary>
              Egypt
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.EST">
            <summary>
              Spain
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.EUR">
            <summary>
              currency adopted by a number of countries within the European Union from January 1st 1999. The zone in which the currency operates is termed 'Euroland' in financial transactions
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.FAK">
            <summary>
              Faroe Islands
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.FIM">
            <summary>
              Finland
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.FJD">
            <summary>
              Fiji
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.FKP">
            <summary>
              Falkland Islands
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.FRF">
            <summary>
              France
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.GBP">
            <summary>
              United Kingdom
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.GIP">
            <summary>
              Gibraltar
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.GMD">
            <summary>
              Gambia
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.GRX">
            <summary>
              Greece
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.HKD">
            <summary>
              Hong Kong
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.HUF">
            <summary>
              Hungary
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.ICK">
            <summary>
              Iceland
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.IDR">
            <summary>
              Indonesia
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.ILS">
            <summary>
              Israel
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.INR">
            <summary>
              India
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.IRP">
            <summary>
              Ireland
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.ITL">
            <summary>
              Italy
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.JMD">
            <summary>
              Jamaica
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.JOD">
            <summary>
              Jordan
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.JPY">
            <summary>
              Japan
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.KES">
            <summary>
              Kenya
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.KRW">
            <summary>
              Republic of Korea
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.KWD">
            <summary>
              Kuwait
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.KYD">
            <summary>
              Cayman Islands
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.LKR">
            <summary>
              Sri Lanka
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.LUF">
            <summary>
              Luxembourg
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.MTL">
            <summary>
              Malta
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.MUR">
            <summary>
              Mauritius
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.MXN">
            <summary>
              Mexico
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.MYR">
            <summary>
              Malaysia
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.NLG">
            <summary>
              Netherlands
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.NZD">
            <summary>
              New Zealand
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.OMR">
            <summary>
              Oman
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.PGK">
            <summary>
              Papua New Guinea
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.PHP">
            <summary>
              Philipines
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.PKR">
            <summary>
              Pakistan
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.PLN">
            <summary>
              Poland
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.PTN">
            <summary>
              Portugal
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.QAR">
            <summary>
              Qatar
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.RUR">
            <summary>
              Russia
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.SAR">
            <summary>
              Saudi Arabia
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.SCR">
            <summary>
              Seychelles
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.SEK">
            <summary>
              Sweden
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.SGD">
            <summary>
              Singapore
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.SKP">
            <summary>
              St.Helena
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.THB">
            <summary>
              Thailand
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.TRL">
            <summary>
              Turkey
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.TTD">
            <summary>
              Trinidad and Tobago
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.TWD">
            <summary>
              Taiwan
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.USD">
            <summary>
              United States of America
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.VEB">
            <summary>
              Venezuela
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.VND">
            <summary>
              Viet-Nam
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.XEU">
            <summary>
              Europe (States of the European Union)
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.ZAR">
            <summary>
              South Africa
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcCurrencyEnum.ZWD">
            <summary>
              Zimbabwe
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MeasureResource.IfcDerivedUnitEnum">
            <summary>
              An enumeration type for allowed types of derived units.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcMeasureWithUnit.ValueComponent">
            <summary>
              The value of the physical quantity when expressed in the specified units.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcMeasureWithUnit.UnitComponent">
            <summary>
              The unit in which the physical quantity is expressed.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcProject">
            <summary>
              The undertaking of some design, engineering, construction, or maintenance activities leading towards a product.
            </summary>
            <remarks>
              Definition from IAI: The undertaking of some design, engineering, construction, or maintenance activities leading towards a product. The project establishes the context for information to be exchanged or shared, and it may represent a construction project but does not have to. 
              The representation context, in the case of a geometric representation context, which is referenced from the IfcProject, includes:
              the default units used 
              the world coordinate system 
              the coordinate space dimension 
              the precision used within the geometric representations, and 
              optionally the indication of the true north relative to the world coordinate system 
              HISTORY  New Entity in IFC Release 1.0
              Property Set Use Definition:
              The property sets relating to the IfcProject are defined by the IfcPropertySet and attached by the IfcRelDefinesByProperties relationship. It is accessible by the inverse IsDefinedBy relationship. The following property set definitions specific to the IfcProject are part of this IFC release:
              Pset_ProjectCommon: common property set for the single project occurrence. 
              Spatial Structure Use Definition
              The IfcProject is used to reference the root of the spatial structure of a building (that serves as the primary project breakdown and is required to be hierarchical). The spatial structure elements are linked together, and to the IfcProject, by using the objectified relationship IfcRelAggregates. The IfcProject references them by its inverse relationship:
              IfcBuilding.Decomposes -- referencing (IfcSite || IfcBuilding) by IfcRelAggregates.RelatingObject. The IfcSite or IrfcBuilding referenced shall be the root of the spatial structure. 
              IfcBuilding.IsDecomposedBy -- it shall be NIL, i.e. the IfcProject shall not be decomposed into any parts. 
              Informal propositions: 
              There shall only be one project within the exchange context. This is enforced by the global rule IfcSingleProjectInstance. 
              Formal Propositions:
              WR31   :   The Name attribute has to be provided for the project. It is the short name for the project.  
              WR32   :   There shall be no instance of IfcGeometricRepresentationSubContext directly included in the set of RepresentationContexts.  
              WR33   :   The IfcProject represents the root of the any decomposition tree. It shall therefore not be used to decompose any other object definition.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcProject.LongName">
            <summary>
              Optional. Long name for the project as used for reference purposes.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcProject.Phase">
            <summary>
              Optional. Current project phase, open to interpretation for all project partner, therefore given as IfcString.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcProject.RepresentationContexts">
            <summary>
              Context of the representations used within the project. When the project includes shape representations for its components, one or several geometric representation contexts need to be included that define e.g. the world coordinate system, the coordinate space dimensions, and/or the precision factor.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.Kernel.IfcProject.UnitsInContext">
            <summary>
              Units globally assigned to measure types used within the context of this project.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcSIUnit.Dimensions">
            <summary>
              The dimensional exponents of SI units are derived and override the NamedUnit value
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcSIUnit.Prefix">
            <summary>
              The SI Prefix for defining decimal multiples and submultiples of the unit.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcSIUnit.Name">
            <summary>
              The word, or group of words, by which the SI unit is referred to.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcDerivedUnit.Elements">
            <summary>
              The group of units and their exponents that define the derived unit.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcDerivedUnit.UnitType">
            <summary>
              Name of the derived unit chosen from an enumeration of derived unit types for use in IFC models.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.MeasureResource.IfcDerivedUnit.Dimensions">
            <summary>
              Dimensional exponents derived using the function IfcDerivedDimensionalExponents using (SELF) as the input value.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix">
            <summary>
              An SI prefix is the name of a prefix that may be associated with an SI unit. 
              The definitions of SI prefixes are specified in ISO 1000 (clause 3).
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.EXA">
            <summary>
              10^18
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.PETA">
            <summary>
              10^15
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.TERA">
            <summary>
              10^12
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.GIGA">
            <summary>
              10^9
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.MEGA">
            <summary>
              10^6
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.KILO">
            <summary>
              10^3
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.HECTO">
            <summary>
              10^2
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.DECA">
            <summary>
              10
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.DECI">
            <summary>
              10^-1
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.CENTI">
            <summary>
              10^-2
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.MILLI">
            <summary>
              10^-3
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.MICRO">
            <summary>
              10^-6
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.NANO">
            <summary>
              10^-9
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.PICO">
            <summary>
              10^-12
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.FEMTO">
            <summary>
              10^-15
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIPrefix.ATTO">
            <summary>
              10^-18
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName">
            <summary>
              Name of the SI Unit
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.AMPERE">
            <summary>
              Unit for electric current.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.BECQUEREL">
            <summary>
              Unit for radioactivity.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.CANDELA">
            <summary>
              Unit for luminousintensity.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.COULOMB">
            <summary>
              Unit for electric charge.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.CUBIC_METRE">
            <summary>
              Unit for volume.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.DEGREE_CELSIUS">
            <summary>
              Unit for thermodynamic temperature.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.FARAD">
            <summary>
              Unit for electric capacitance.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.GRAM">
            <summary>
              Unit for mass.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.GRAY">
            <summary>
              Unit for absorbed radioactive dose.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.HENRY">
            <summary>
              Unit for inductance.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.HERTZ">
            <summary>
              Unit for frequency.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.JOULE">
            <summary>
              Unit for energy.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.KELVIN">
            <summary>
              Unit for thermodynamic temperature.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.LUMEN">
            <summary>
              Unit for luminous flux.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.LUX">
            <summary>
              Unit for illuminance.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.METRE">
            <summary>
              Unit for length.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.MOLE">
            <summary>
              Unit for amount of substance.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.NEWTON">
            <summary>
              Unit for force.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.OHM">
            <summary>
              Unit for electric resistance.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.PASCAL">
            <summary>
              Unit for pressure.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.RADIAN">
            <summary>
              Unit for plane angle.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.SECOND">
            <summary>
              Unit for time.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.SIEMENS">
            <summary>
              Unit for electric conductance.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.SIEVERT">
            <summary>
              Unit for radioactive dose equivalent.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.SQUARE_METRE">
            <summary>
              Unit for area.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.STERADIAN">
            <summary>
              Unit for solid angle.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.TESLA">
            <summary>
              Unit for magnetic flux density.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.VOLT">
            <summary>
              Unit for electric voltage.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.WATT">
            <summary>
              Unit for power.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.MeasureResource.IfcSIUnitName.WEBER">
            <summary>
              Unit for magnetic flux.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.MeasureResource.IfcUnitEnum">
            <summary>
              An enumeration type for allowed unit types of NamedUnit.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcSequenceEnum">
            <summary>
              This enumeration defines the different ways, in which a time lag is applied to a sequence between two processes.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.Kernel.IfcObjectType">
            <summary>
              This enumeration defines the applicable object categories (i.e. the subtypes at the 2nd level of the IFC inheritance tree) . 
              Attached to an object, it indicates to which subtype of IfcObject the entity referencing it would otherwise comply with.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PropertyResource.IfcComplexProperty">
            <summary>
              This IfcComplexProperty is used to define complex properties to be handled completely within a property set.
            </summary>
            <remarks>
              Definition from IAI: This IfcComplexProperty is used to define complex properties to be handled completely within a property set. The included list may be a mixed or consistent collection of IfcProperty subtypes. This enables the definition of a list of properties to be included as a single 'property' entry in a property set. The definition of such a list can be reused in many different property sets, but the instantiation of such a complex property shall only be used within a single property set.
              NOTE: Since an IfcComplexProperty may contain other complex properties, list of properties can be nested.
              HISTORY: New Entity in IFC Release 2.0, capabilities enhanced in IFC Release 2x.
              Formal Propositions:
              WR21   :   The IfcComplexProperty should not reference itself within the list of HasProperties.  
              WR22   :   Each property within the complex property shall have a unique name attribute.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.PropertyResource.IfcProperty">
            <summary>
              Definition from IAI: An abstract generalization for all types of properties that can be associated with IFC objects through the property set mechanism.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcProperty.Name">
            <summary>
              Name for this property. This label is the significant name string that defines the semantic meaning for the property.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcProperty.Description">
            <summary>
              Optional. Informative text to explain the property.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcProperty.PropertyForDependance">
            <summary>
              Inverse. The property on whose value that of another property depends.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcProperty.PropertyDependsOn">
            <summary>
              Inverse. The relating property on which the value of the property depends.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcProperty.PartOfComplex">
            <summary>
              Inverse. Reference to the IfcComplexProperty in which the IfcProperty is contained.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcComplexProperty.UsageName">
            <summary>
              Usage description of the IfcComplexProperty within the property set which references the IfcComplexProperty.
            </summary>
            <value>NOTE: Consider a complex property for glazing properties. The Name attribute of the IfcComplexProperty could be Pset_GlazingProperties, and the UsageName attribute could be OuterGlazingPane.</value>
        </member>
        <member name="T:Xbim.Ifc2x3.PropertyResource.SetOfProperty">
            <summary>
              Set Of Properties, the Name of each property in the set must be unique
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PropertyResource.IfcPropertyBoundedValue">
            <summary>
              A property with a bounded value (IfcPropertyBoundedValue) defines a property object which has a maximum of two (numeric or descriptive) values assigned, the first value specifying the upper bound and the second value specifying the lower bound.
            </summary>
            <remarks>
              Definition from IAI: A property with a bounded value (IfcPropertyBoundedValue) defines a property object which has a maximum of two (numeric or descriptive) values assigned, the first value specifying the upper bound and the second value specifying the lower bound. It defines a property - value bound (min-max) combination for which the property name, the upper bound value with measure type, the lower bound value with measure type (and optional the unit) is given.
              The unit is handled by the Unit attribute:
              If the Unit attribute is not given, then the unit is already implied by the type of IfcMeasureValue or IfcDerivedMeasureValue. The associated unit can be found at the IfcUnitAssignment globally defined at the project level (IfcProject.UnitsInContext). 
              If the Unit attribute is given, then the unit assigned by the Unit attribute overrides the globally assigned unit. 
              The IfcPropertyBoundedValue allows for the specification of an interval for the value component of the property description. If either the LowerBoundValue or the UpperBoundValue is not given, then it indicates an open bound (either a minimum value or a maximum value). The interval is by definition inclusive, i.e. the value given for the LowerBoundValue or the UpperBoundValue is included in the interval.
              Examples of a property with bounded value are:
              Name UpperBoundValue LowerBoundValue Type 
              (through IfcValue, WR1 ensures same type for both values) Unit 
             
              OverallHeight 1930 2300 IfcPositiveLengthMeasure -  
              OverallWidth 0.9 1.25 IfcPositiveLengthMeasure m 
              MaxHeight 20.0 nil IfcPositiveLengthMeasure - 
              MinWeight nil 20 IfcMassMeasure kg 
              HISTORY: New entity in IFC Release 2x. 
              IFC2x PLATFORM CHANGE: The attribute type of the attribute UpperBoundValue and LowerBoundValue has been changed from mandatory to optional with upward compatibility for file based exchange.
              Informal proposition:
              If the measure type for the upper and lover bound value is a numeric measure, then the following shall be true: UpperBoundValue &gt; LowerBoundValue. 
              Definition from IAI: A property with a bounded value (IfcPropertyBoundedValue) defines a property object which has a maximum of two (numeric or descriptive) values assigned, the first value specifying the upper bound and the second value specifying the lower bound. It defines a property - value bound (min-max) combination for which the property name, the upper bound value with measure type, the lower bound value with measure type (and optional the unit) is given.
              The unit is handled by the Unit attribute:
              If the Unit attribute is not given, then the unit is already implied by the type of IfcMeasureValue or IfcDerivedMeasureValue. The associated unit can be found at the IfcUnitAssignment globally defined at the project level (IfcProject.UnitsInContext). 
              If the Unit attribute is given, then the unit assigned by the Unit attribute overrides the globally assigned unit. 
              The IfcPropertyBoundedValue allows for the specification of an interval for the value component of the property description. If either the LowerBoundValue or the UpperBoundValue is not given, then it indicates an open bound (either a minimum value or a maximum value). The interval is by definition inclusive, i.e. the value given for the LowerBoundValue or the UpperBoundValue is included in the interval.
              Examples of a property with bounded value are:
              Name UpperBoundValue LowerBoundValue Type 
              (through IfcValue, WR1 ensures same type for both values) Unit 
             
              OverallHeight 1930 2300 IfcPositiveLengthMeasure -  
              OverallWidth 0.9 1.25 IfcPositiveLengthMeasure m 
              MaxHeight 20.0 nil IfcPositiveLengthMeasure - 
              MinWeight nil 20 IfcMassMeasure kg 
              HISTORY: New entity in IFC Release 2x. 
              IFC2x PLATFORM CHANGE: The attribute type of the attribute UpperBoundValue and LowerBoundValue has been changed from mandatory to optional with upward compatibility for file based exchange.
              Informal proposition:
              If the measure type for the upper and lover bound value is a numeric measure, then the following shall be true: UpperBoundValue &gt; LowerBoundValue.
              Formal Propositions:
              WR21   :   The measure type of the upper bound value shall be the same as the measure type of the lower bound value, if both (upper and lower bound) are given.  
              WR22   :   Either the upper bound, or the lower bound, or both bounds shall be given.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.PropertyResource.IfcSimpleProperty">
            <summary>
              A generalization of a single property object. The various subtypes of IfcSimpleProperty establish different ways in which a property value can be set.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyBoundedValue.UpperBoundValue">
            <summary>
              Optional.   Upper bound value for the interval defining the property value. If the value is not given, it indicates an open bound (all values to be greater than or equal to LowerBoundValue).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyBoundedValue.LowerBoundValue">
            <summary>
              Optional.   Lower bound value for the interval defining the property value. If the value is not given, it indicates an open bound (all values to be lower than or equal to UpperBoundValue).
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyBoundedValue.Unit">
            <summary>
              Optional.  Unit for the upper and lower bound values, if not given, the default value for the measure type (given by the TYPE of the upper and lower bound values) is used as defined by the global unit assignment at IfcProject.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PropertyResource.IfcPropertyDependencyRelationship">
            <summary>
              An IfcPropertyDependencyRelationship describes an identified dependency between the value of one property and that of another.
            </summary>
            <remarks>
              Definition from IAI: An IfcPropertyDependencyRelationship describes an identified dependency between the value of one property and that of another.
              HISTORY: New entity in Release IFC2x Edition 2
              Use Definition
              Whilst the IfcPropertyDependencyRelationship may be used to describe the dependency, and it may do so in terms of the expression of how the dependency operates, it is not possible through the current IFC model for the value of the related property to be actually derived from the value of the relating property. The determination of value according to the dependency is required to be performed by an application that can then use the Expression attribute to flag the form of the dependency.
              Formal Propositions:
              WR1   :   The DependingProperty shall not point to the same instance as the DependantProperty
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyDependencyRelationship.DependingProperty">
            <summary>
              The property on which the relationship depends.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyDependencyRelationship.DependantProperty">
            <summary>
              The dependant property
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyDependencyRelationship.Name">
            <summary>
              A name used to identify or qualify the applied value relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyDependencyRelationship.Description">
            <summary>
              A description that may apply additional information about an applied value relationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyDependencyRelationship.Expression">
            <summary>
              The arithmetic operator applied in an applied value relationship.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PropertyResource.IfcPropertyEnumeratedValue">
            <summary>
              A property with an enumerated value (IfcPropertyEnumeratedValue) defines a property object which has a value assigned which is chosen from an enumeration.
            </summary>
            <remarks>
              Definition from IAI: A property with an enumerated value (IfcPropertyEnumeratedValue) defines a property object which has a value assigned which is chosen from an enumeration. It defines a property - value combination for which the property name, the value with measure type (and optional the unit) are given.
              NOTE: Multiple choices from the property enumeration are supported.
              The unit is handled by the Unit attribute of the IfcPropertyEnumeration:
              If the Unit attribute is not given, then the unit is already implied by the type of IfcMeasureValue or IfcDerivedMeasureValue. The associated unit can be found at the IfcUnitAssignment globally defined at the project level (IfcProject.UnitsInContext). 
              If the Unit attribute is given, thrn the unit assigned by the unit attribute overrides the globally assigned unit. 
              More precisely: The IfcPropertyEnumeratedValue defines a property, which value is selected from a defined list of enumerators. The enumerators are stored in a dynamic enumeration of values including the type information from IfcValue (see IfcPropertyEnumeration). This enables applications to use an enumeration value as a property within a property set (IfcPropertySet) including the allowed list of values. Examples of a property with enumerated value with are:
              Name  Value
              (EnumerationValue) Type 
              (through IfcValue) ref. IfcPropertyEnumeration
              (Name)  
              BladeAction Opposed IfcString DamperBladeActionEnum 
              BladeAction Parallel IfcString DamperBladeActionEnum 
              The IfcPropertyEnumeratedValue refers to an IfcPropertyEnumeration, e.g. for the above:
              Name EnumerationValues Type 
              (through IfcValue) Unit 
              DamperBladeActionEnum (Parallel, Opposed, Other, Unset) IfcString - 
              HISTORY: New Entity in IFC Release 2.0, capabilities enhanced in IFC R2x. The entity has been renamed from IfcEnumeratedProperty in IFC Release 2x.
              Formal Propositions:
              WR1   :   Each enumeration value shall be a member of the list of EnumerationValues at the referenced IfcPropertyEnumeration (if given).
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyEnumeratedValue.EnumerationValues">
            <summary>
              Optional. Enumeration values, which shall be listed in the referenced IfcPropertyEnumeration, if such a reference is provided.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyEnumeratedValue.EnumerationReference">
            <summary>
              Enumeration from which a enumeration value has been selected. The referenced enumeration also establishes the unit of the enumeration value.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PropertyResource.IfcPropertyEnumeration">
            <summary>
              A collection of simple or measure values that define a prescribed set of alternatives from which 'enumeration values' are selected.
            </summary>
            <remarks>
              Definition from IAI: A collection of simple or measure values that define a prescribed set of alternatives from which 'enumeration values' are selected. This enables inclusion of enumeration values in property sets. IfcPropertyEnumeration provides a name for the enumeration as well as a list of unique (numeric or descriptive) values (that may have a measure type assigned). The entity defines the list of potential enumerators to be exchanged together (or separately) with properties of type IfcPropertyEnumeratedValue that selects their actual property values from this enumeration. 
              The unit is handled by the Unit attribute:
              If the Unit attribute is not given, than the unit is already implied by the type of IfcMeasureValue or IfcDerivedMeasureValue. The associated unit can be found at the IfcUnitAssignment globally defined at the project level (IfcProject.UnitsInContext). 
              If the Unit attribute is given, the unit assigned by the unit attribute overrides the globally assigned unit. 
              Name EnumerationValues Type (through IfcValue) Unit 
              PEnum_DamperBladeAction Parallel IfcString - 
              Opposed IfcString   
              Other IfcString   
              Unset IfcString   
              HISTORY: New Entity in IFC Release 2.0, capabilities enhanced in IFC Release 2x. Entity has been renamed from IfcEnumeration in IFC Release 2x.
              Formal Propositions:
              WR01   :   All values within the list of EnumerationValues shall be of the same measure type.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyEnumeration.Name">
            <summary>
              Name of this enumeration.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyEnumeration.EnumerationValues">
            <summary>
              List of values that form the enumeration.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyEnumeration.Unit">
            <summary>
              Optional. Unit for the enumerator values, if not given, the default value for the measure type (given by the TYPE of nominal value) is used as defined by the global unit assignment at IfcProject.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PropertyResource.IfcPropertyListValue">
            <summary>
              An IfcPropertyListValue defines a property that has several (numeric or descriptive) values assigned, these values are given by an ordered list.
            </summary>
            <remarks>
              Definition from IAI: An IfcPropertyListValue defines a property that has several (numeric or descriptive) values assigned, these values are given by an ordered list. 
              An IfcPropertyListValue is a list of values. The order in which values appear is significant. Each value in the list is unique i.e. no duplicate values are allowed. All list members should be of the same type.
              The unit applicable to all values is handled by the Unit attribute:
              If the Unit attribute is not given, then the unit is already implied by the type of IfcMeasureValue or IfcDerivedMeasureValue. The associated unit can be found at the IfcUnitAssignment globally defined at the project level (IfcProject.UnitsInContext). 
              If the Unit attribute is given, then the unit assigned by the Unit attribute overrides the globally assigned unit. 
              Example of a property with list value is:
              Name ListValues Type 
              (through IfcValue) Unit 
             
              ApplicableSizes 1200 IfcPositiveLengthMeasure - 
              - 1600 IfcPositiveLengthMeasure - 
              - 2400 IfcPositiveLengthMeasure - 
              HISTORY: New Entity in Release IFC 2x Edition 2.
              Formal Propositions:
              WR31   :   All values within the list of values shall be of the same measure type.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyListValue.ListValues">
            <summary>
              List of values.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyListValue.Unit">
            <summary>
              Optional.   Unit for the list values, if not given, the default value for the measure type (given by the TYPE of nominal value) is used as defined by the global unit assignment at IfcProject.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PropertyResource.IfcPropertyReferenceValue">
            <summary>
              The IfcPropertyReferenceValue allows a property value to be given by referencing other entities within the resource definitions of IFC.
            </summary>
            <remarks>
              Definition from IAI: The IfcPropertyReferenceValue allows a property value to be given by referencing other entities within the resource definitions of IFC. Those other entities are regarded as predefined complex properties and can be aggregated within a property set (IfcPropertySet). The allowable entities to be used as value references are given by the IfcObjectReferenceSelect.
              HISTORY: New entity in IFC Release 1.5. Entity has been renamed from IfcObjectReference in IFC Release 2x.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyReferenceValue.UsageName">
            <summary>
              Optional. Description of the use of the referenced value within the property.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyReferenceValue.PropertyReference">
            <summary>
              Reference to another entity througH one of the select types in IfcObjectReferenceSelect.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PropertyResource.IfcPropertySingleValue">
            <summary>
              A property with a single value (IfcPropertySingleValue) defines a property object which has a single (numeric or descriptive) value assigned.
            </summary>
            <remarks>
              Definition from IAI: A property with a single value (IfcPropertySingleValue) defines a property object which has a single (numeric or descriptive) value assigned. It defines a property - single value combination for which the property name, the value with measure type (and optionally the unit) is given.
              The unit is handled by the Unit attribute:
              If the Unit attribute is not given, then the unit is already implied by the type of IfcMeasureValue or IfcDerivedMeasureValue. The associated unit can be found at the IfcUnitAssignment globally defined at the project level (IfcProject.UnitsInContext). 
              If the Unit attribute is given, then the unit assigned by the Unit attribute overrides the globally assigned unit. 
              Examples of a property with single value are:
              Name NominalValue Type 
              (through IfcValue) Unit 
             
              Description Manufacturer "A" door IfcLabel - 
              PanelThickness 0.12 IfcPositiveLengthMeasure -  
              ThermalTransmittance 2.6 IfcThermalTransmittanceMeasure W/(m2K) 
              HISTORY: New entity in IFC Release 1.0. The entity has been renamed from IfcSimpleProperty in IFC Release 2x
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertySingleValue.NominalValue">
            <summary>
              Optional. Value and measure type of this property.
            </summary>
            <value>
              NOTE  By virtue of the defined data type, that is selected from the SELECT IfcValue, the appropriate unit can be found within the IfcUnitAssignment, 
              defined for the project if no value for the unit attribute is given.
              IFC2x Edition 3 CHANGE  The attribute has been made optional with upward compatibility for file based exchange.
            </value>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertySingleValue.Unit">
            <summary>
              Optional. Unit for the nominal value, if not given, the default value for the measure type (given by the TYPE of nominal value) is used as defined by the global unit assignment at IfcProject.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.PropertyResource.IfcPropertyTableValue">
            <summary>
              A property with a range value (IfcPropertyTableValue) defines a property object which has two lists of (numeric or descriptive) values assigned, the values specifying a table with two columns.
            </summary>
            <remarks>
              Definition from IAI: A property with a range value (IfcPropertyTableValue) defines a property object which has two lists of (numeric or descriptive) values assigned, the values specifying a table with two columns. The defining values provide the first column and establish the scope for the defined values (the second column). Interpolations are out of scope of the IfcPropertyTableValue. An optional Expression attribute may give the equation used for deriving the range value, which is for information purposes only.
              The IfcPropertyTableValue defines a defining/defined property value combination for which the property name, the table with defining and defined values with measure type (and optional the units for defining and defined values)are given.
              The units are handled by the DefiningUnit and DefinedUnit attributes:
              If the DefiningUnit or DefinedUnit attribute is not given, then the unit is already implied by the type of IfcMeasureValue or IfcDerivedMeasureValue. The associated unit can be found at the IfcUnitAssignment globally defined at the project level (IfcProject.UnitsInContext). 
              If the DefiningUnit or DefinedUnit attribute is given, then the unit assigned by the unit attribute overrides the globally assigned unit. 
              The IfcPropertyTableValue allows for the specification of a table of defining/defined value pairs of the property description.
              Examples of a property with range value are:
              Name DefiningValues DefiningValue Type 
              (through IfcValue) DefinedValues DefinedValue Type 
              (through IfcValue) DefingUnit  DefinedUnit 
              SoundTransmissionLoss 100 IfcFrequencyMeasure 20 IfcNumericMeasure -  dB 
              200	 IfcFrequencyMeasure 	42 	IfcNumericMeasure     
              400	 IfcFrequencyMeasure 	46 	IfcNumericMeasure     
              800	 IfcFrequencyMeasure 	56 	IfcNumericMeasure     
              1600	 IfcFrequencyMeasure 	60 	IfcNumericMeasure     
              3200 	IfcFrequencyMeasure 	65 	IfcNumericMeasure     
              HISTORY: New entity in IFC Release 2x. 
              Informal propositions:
              The list of DerivedValues and the list of DefiningValues are corresponding lists. 
              Formal Propositions:
              WR1   :   The number of members in the list of defining values shall be the same as the number of members in the list of defined values.  
              WR2   :   All values within the list of defining values shall have the same measure type.  
              WR3   :   All values within the list of defined values shall have the same measure type.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyTableValue.DefiningValues">
            <summary>
              List of defining values, which determine the defined values.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyTableValue.DefinedValues">
            <summary>
              Defined values which are applicable for the scope as defined by the defining values.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyTableValue.Expression">
            <summary>
              Optional. Expression for the derivation of defined values from the defining values, the expression is given for information only, i.e. no automatic processing can be expected from the expression.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyTableValue.DefiningUnit">
            <summary>
              Optional. Unit for the defining values, if not given, the default value for the measure type (given by the TYPE of the defining values) is used as defined by the global unit assignment at IfcProject.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.PropertyResource.IfcPropertyTableValue.DefinedUnit">
            <summary>
              Optional. Unit for the defined values, if not given, the default value for the measure type (given by the TYPE of the defined values) is used as defined by the global unit assignment at IfcProject.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.RepresentationResource.IfcGeometricProjectionEnum">
            <summary>
              The IfcGeometricProjectionEnum defines the various representation types that can be semantically distinguished.
            </summary>
            <remarks>
              Definition from IAI: The IfcGeometricProjectionEnum defines the various representation types that can be semantically distinguished. Often different levels of detail of the shape representation are controlled by the representation type.
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.RepresentationResource.IfcGeometricProjectionEnum.GRAPH_VIEW">
            <summary>
              Geometric display representation that shows an abstract, often 1D element representation, e.g. representing a wall by its axis line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.RepresentationResource.IfcGeometricProjectionEnum.SKETCH_VIEW">
            <summary>
              Geometric display representation that shows an abstract, often 2D element representation, e.g. representing a wall by its two foot print edges, surpressing any inner layer representation.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.RepresentationResource.IfcGeometricProjectionEnum.MODEL_VIEW">
            <summary>
              Geometric display representation that shows a full 3D element representation, e.g. representing a wall by its volumetric body.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.RepresentationResource.IfcGeometricProjectionEnum.PLAN_VIEW">
            <summary>
              Geometric display representation that shows a full 2D element representation, the level of detail often depends on the target scale, e.g. representing a wall by its two foot print edges and the edges of all inner layers. The projection is shown in ground view as seen from above.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.RepresentationResource.IfcGeometricProjectionEnum.REFLECTED_PLAN_VIEW">
            <summary>
              Geometric display representation that shows a full 2D element representation, the level of detail often depends on the target scale, e.g. representing a wall by its two foot print edges and the edges of all inner layers. The projection is shown in ground view as seen from below.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.RepresentationResource.IfcGeometricProjectionEnum.SECTION_VIEW">
            <summary>
              Geometric display representation that shows a full 2D element representation, the level of detail often depends on the target scale, e.g. representing a wall by its two inner/outer edges and the edges of all inner layers, if the element is cut by the section line.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.RepresentationResource.IfcGeometricProjectionEnum.ELEVATION_VIEW">
            <summary>
              Geometric display representation that shows a full 2D element representation, the level of detail often depends on the target scale, e.g. representing a wall by its bounding edges if the element is within an elevation view.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.RepresentationResource.IfcGeometricProjectionEnum.USERDEFINED">
            <summary>
              A user defined specification is given by the value of the UserDefinedTargetView attribute.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.RepresentationResource.IfcGeometricProjectionEnum.NOTDEFINED">
            <summary>
              No specification given.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationContext">
            <summary>
              A geometric representation context is a representation context in which the geometric representation items are geometrically founded.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A geometric representation context is a representation context in which the geometric representation items are geometrically founded. A geometric representation context is a distinct coordinate space, spatially unrelated to other coordinate spaces. 
              Definition from IAI: The IfcGeometricRepresentationContext defines the context that applies to several shape representations of products within a project. It defines the type of the context in which the shape representation is defined, and the numeric precision applicable to the geometric representation items defined in this context. In addition it can be used to offset the project coordinate system from a global point of origin, using the WorldCoordinateSystem attribute. The TrueNorth attribute can be given, if the y axis of the WorldCoordinateSystem does not point to the global northing. 
              NOTE: The inherited attribute ContextType shall have one of the following recognized values: 'Sketch', 'Outline', 'Design', 'Detail', 'Model', 'Plan', 'NotDefined'.
              The use of one instance of IfcGeometricRepresentationContext to represent the model (3D) view is mandatory, the use of a second instance of IfcGeometricRepresentationContext to represent the plan (2D) view is optional (but needs to be given, if there are scale dependent plan views), the additional scale or view dependent contexts need to be handled by using the subtype IfcGeometricRepresentationSubContext pointing to the model view (or the plan view) as the ParentContext. 
              NOTE The definition of this class relates to the STEP entity geometric_representation_context. Please refer to ISO/IS 10303-42:1994 for the final definition of the formal standard. 
              HISTORY New Entity in IFC Release 2.0
              IFC2x Edition 3 CHANGE The attribute WorldCoordinateSystem has been made OPTIONAL Applicable values for ContextType are only 'Model',  'Plan', and  'NotDefined'. All other sub contexts are now handled by the new subtype in IFC2x Edition 2 IfcGeometricRepresentationSubContext. Upward compatibility for file based exchange is guaranteed.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.RepresentationResource.IfcRepresentationContext">
            <summary>
              A representation context is a context in which a set of representation items are related.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A representation context is a context in which a set of representation items are related. 
              Definition from IAI: The IfcRepresentationContext defines the context to which the IfcRepresentation of a product is related. 
              NOTE  The definition of this class relates to the STEP entity representation_context. Please refer to ISO/IS 10303-43:1994 for the final definition of the formal standard.
              HISTORY  New entity in IFC Release 1.5. 
              IFC2x Edition 3 NOTE  Users should not instantiate the entity IfcRepresentationContext from IFC2x Edition 2 onwards. It will be changed into an ABSTRACT supertype in future releases of IFC.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcRepresentationContext.ContextIdentifier">
            <summary>
              The optional identifier of the representation context as used within a project.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcRepresentationContext.ContextType">
            <summary>
              The description of the type of a representation context. The supported values for context type are to be specified by implementers agreements.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcRepresentationContext.RepresentationsInContext">
            <summary>
              Inverse. All shape representations that are defined in the same representation context.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationContext.CoordinateSpaceDimension">
            <summary>
              The integer dimension count of the coordinate space modeled in a geometric representation context.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationContext.Precision">
            <summary>
              Optional. Value of the model precision for geometric models. It is a double value (REAL), typically in 1E-5 to 1E-8 range, that indicates the tolerance under which two given points are still assumed to be identical. The value can be used e.g. to sets the maximum distance from an edge curve to the underlying face surface in brep models.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationContext.WorldCoordinateSystem">
            <summary>
              Optional. Establishment of the engineering coordinate system (often refered to as the world coordinate system in CAD) for all representation contexts used by the project. If not given, it defaults to origin: (0.,0.,0.) and directions x(1.,0.,0.), y(0.,1.,0.), z(0.,0.,1.). Must be of type Axis2Placement2D or Axis2Placement3D
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationContext.TrueNorth">
            <summary>
              Optional. Direction of the true north relative to the underlying coordinate system as established by the attribute WorldCoordinateSystem. It is given by a direction within the xy-plane of the underlying coordinate system. If not given, it defaults to the positive direction of the y-axis of the WorldCoordinateSystem.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationContext.DefaultPrecision">
            <summary>
            Returns the default precision, if not define return 1e-005
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationContext.HasSubContexts">
            <summary>
              Inverse. The set of IfcGeometricRepresentationSubContexts that refer to this IfcGeometricRepresentationContext.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationSubContext">
            <summary>
              The IfcGeometricRepresentationSubContext defines the context that applies to several shape representations of a product being a sub context, sharing the WorldCoordinateSystem, CoordinateSpaceDimension, Precision and TrueNorth attributes with the parent IfcGeometricRepresentationContext.
            </summary>
            <remarks>
              Definition from IAI: The IfcGeometricRepresentationSubContext defines the context that applies to several shape representations of a product being a sub context, sharing the WorldCoordinateSystem, CoordinateSpaceDimension, Precision and TrueNorth attributes with the parent IfcGeometricRepresentationContext.
              The IfcGeometricRepresentationSubContext is used to define semantically distinguished representation types for different information content, dependent on the representation view and the target scale. It can be used to control the level of detail of the shape representation that is most applicable to this geometric representation context. addition the sub context is used to control the later appearance of the IfcShapeRepresentation within a plot view. 
              NOTE  If the IfcShapeRepresentation using this sub context has IfcStyledItem's assigned to the Items, the presentation style information (e.g. IfcCurveStyle, IfcTextStyle) associated with the IfcStyledItem is given in target plot dimensions. E.g. a line thickness (IfcCurveStyle.CurveWidth) is given by a thickness measure relating to the thickness for a plot within the (range of) target scale.
              Each IfcProduct can then have several instances of subtypes of IfcRepresentation, each being assigned to a different geometric representation context (IfcGeometricRepresentationContext or IfcGeometricRepresentationSubContext). The application can then choose the most appropriate representation for showing the geometric shape of the product, depending on the target view and scale.
              NOTE The provision of a model view (IfcGeometricRepresentationContext.ContextType = 'Model') is mandatory. Instances of IfcGeometricRepresentationSubContext relate to it as its ParentContext.
              EXAMPLE  Instances of IfcGeometricRepresentationSubContext can be used to handle the multi-view blocks or macros, which are used in CAD programs to store several scale and/or view dependent geometric representations of the same object. 
              HISTORY New entity in Release IFC 2x Edition 2.
              Formal Propositions:
              WR31   :   The parent context shall not be another geometric representation sub context.  
              WR32   :   The attribute UserDefinedTargetView shall be given, if the attribute TargetView is set to USERDEFINED.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationSubContext.CoordinateSpaceDimension">
            <summary>
              Override, returns parentContext
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationSubContext.Precision">
            <summary>
              Override, returns parentContext
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationSubContext.WorldCoordinateSystem">
            <summary>
              Override, returns parentContext
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationSubContext.TrueNorth">
            <summary>
              Override, returns parentContext
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationSubContext.ParentContext">
            <summary>
              SpatialStructuralElementParent context from which the sub context derives its world coordinate system, precision, space coordinate dimension and true north.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationSubContext.TargetScale">
            <summary>
              Optional. The target plot scale of the representation to which this representation context applies.
            </summary>
            <remarks>
              Scale indicates the target plot scale for the representation sub context, all annotation styles are given in plot dimensions according to this target plot scale.
              If multiple instances of IfcGeometricRepresentationSubContext are given having the same TargetView value, the target plot scale applies up to the next smaller scale, or up to unlimited small scale. 
              Note: Scale 1:100 (given as 0.01 within TargetScale) is bigger then 1:200 (given as 0.005 within TargetScale).
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationSubContext.TargetView">
            <summary>
              Target view of the representation to which this representation context applies.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcGeometricRepresentationSubContext.UserDefinedTargetView">
            <summary>
              Optional. User defined target view, this attribute value shall be given, if the TargetView attribute is set to USERDEFINED.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.RepresentationResource.IfcMaterialDefinitionRepresentation">
            <summary>
              The IfcMaterialDefinitionRepresentation defines presentation information relating to IfcMaterial.
            </summary>
            <remarks>
              Definition from IAI: The IfcMaterialDefinitionRepresentation defines presentation information relating to IfcMaterial. It allows for multiple presentations of the same material for different geometric representation contexts.
              NOTE  The IfcMaterialDefinitionRepresentation is currently only used to define presentation information to material used at subtypes of IfcElement. The IfcMaterial is assigned to the subtype of IfcElement using the IfcRelAssociatesMaterial (eventually via other material related entities IfcMaterialLayerSetUsage, IfcMaterialLayerSet, IfcMaterialLayer). 
              HISTORY  New entity in IFC Release 2x Edition 3.
              IFC2x Edition 3 CHANGE  The entity IfcMaterialDefinitionRepresentation  has been added. Upward compatibility for file based exchange is guaranteed.
              Formal Propositions:
              WR11   :   Only representations of type IfcStyledRepresentation should be used to represent material through the IfcMaterialRepresentation.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.RepresentationResource.IfcProductRepresentation">
            <summary>
              The IfcProductRepresentation defines a representation of a product, including its (geometric or topological) representation.
            </summary>
            <remarks>
              Definition from IAI: The IfcProductRepresentation defines a representation of a product, including its (geometric or topological) representation. A product can have zero, one or many geometric representations, and a single geometric representation can be shared among various products using mapped representations.
              NOTE: The definition of this entity relates to the STEP entity property_definition. The use of the term ‘property’ was avoided since it conflicts with the property, property type, and property set definitions elsewhere in the IFC model. 
              HISTORY: New entity in IFC Release 2.0
              IFC2x Edition 3 NOTE  Users should not instantiate the entity IfcProductRepresentation from IFC2x Edition 3 onwards. It will be changed into an ABSTRACT supertype in future releases of IFC
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcProductRepresentation.Name">
            <summary>
              Optional. The word or group of words by which the product representation is known.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcProductRepresentation.Description">
            <summary>
              Optional.   The word or group of words that characterize the product representation. It can be used to add additional meaning to the name of the product representation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcProductRepresentation.Representations">
            <summary>
              Contained list of representations (including shape representations). Each member defines a valid representation of a particular type within a particular representation context.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcMaterialDefinitionRepresentation.RepresentedMaterial">
            <summary>
              Reference to the material to which the representation applies.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.RepresentationResource.IfcProductDefinitionShape">
            <summary>
              A product definition shape identifies a product’s shape as the conceptual idea of the form of a product.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A product definition shape identifies a product’s shape as the conceptual idea of the form of a product.
              Definition from IAI: The IfcProductDefinitionShape defines all shape relevant information about an IfcProduct. It allows for multiple geometric shape representations of the same product. 
              NOTE: The definition of this entity relates to the STEP entity product_definition_shape. Please refer to ISO/IS 10303-41:1994 for the final definition of the formal standard. 
              HISTORY: New Entity in IFC Release 1.5
              Formal Propositions:
              WR11   :   Only representations of type IfcShapeModel, i.e. either IfcShapeRepresentation or IfcTopologyRepresentation should be used to represent a product through the IfcProductDefinitionShape.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcProductDefinitionShape.ShapeOfProduct">
            <summary>
              Inverse. The IfcProductDefinitionShape shall be used to provide a representation for a single instance of IfcProduct.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcProductDefinitionShape.HasShapeAspects">
            <summary>
              Inverse. Reference to the shape aspect that represents part of the shape or its feature distinctively.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.RepresentationResource.IfcRepresentation">
            <summary>
              A representation is one or more representation items that are related in a specified representation context as the representation of some concept.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-43:1992: A representation is one or more representation items that are related in a specified representation context as the representation of some concept. 
              Definition from IAI: The IfcRepresentation defines the general concept of representing product properties. 
              NOTE  The definition of this entity relates to the STEP entity representation. Please refer to ISO/IS 10303-43:1994 for the final definition of the formal standard. 
              HISTORY  New entity in IFC Release 2.0 
              IFC2x Edition 3 NOTE  Users should not instantiate the entity IfcRepresentation from IFC2x Edition 3 onwards. It will be changed into an ABSTRACT supertype in future releases of IFC.
              IFC2x Edition 3 CHANGE  The inverse attributes LayerAssignments and RepresentationMap have been added with upward compatibility.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcRepresentation.ContextOfItems">
            <summary>
              Definition of the representation context for which the different subtypes of representation are valid.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcRepresentation.RepresentationIdentifier">
            <summary>
              Optional identifier of the representation as used within a project.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcRepresentation.RepresentationType">
            <summary>
              The description of the type of a representation context. 
              The representation type defines the type of geometry or topology used for representing the product representation. 
              More information is given at the subtypes ShapeRepresentation and TopologyRepresentation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcRepresentation.Items">
            <summary>
              Set of geometric representation items that are defined for this representation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcRepresentation.RepresentationMap">
            <summary>
              Inverse. Use of the representation within an IfcRepresentationMap. If used, this IfcRepresentation may be assigned to many representations as one of its Items using an IfcMappedItem. Using IfcRepresentationMap is the way to share one representation (often of type IfcShapeRepresentation) by many products.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcRepresentation.LayerAssignments">
            <summary>
              Inverse. Assignment of the whole representation to a single or multiple layer(s). The LayerAssigments can be overridden by LayerAssigments of the IfcRepresentationItem's within the list of Items.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcRepresentation.OfProductRepresentation">
            <summary>
              Inverse. Reference to the product shape, for which it is the shape representation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.RepresentationContextSet.ModelView">
            <summary>
              Returns the Mandatory Model 3DView of ContextType = "Model"
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.RepresentationResource.IfcShapeAspect">
            <summary>
              The shape aspect is an identifiable element of the shape of a product.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-41:1992: The shape aspect is an identifiable element of the shape of a product. 
              Definition from IAI: The IfcShapeAspect allows for grouping of shape representation items that represent aspects (or components) of the shape of a product. Thereby shape representations of components of the product shape represent a distinctive part to a product that can be explicitly addressed. 
              NOTE: The definition of this class relates to the STEP entity shape_aspect. Please refer to ISO/IS 10303-41:1994 for the final definition of the formal standard. 
              HISTORY: New Entity in IFC Release 2.0
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcShapeAspect.ShapeRepresentations">
            <summary>
              List of shapeModel. Each member defines a valid representation of a particular type within a particular representation context
              as being an aspect (or part) of a product definition.
            </summary>
            <remarks>
              IFC2x Edition 3 CHANGE  The data type has been changed from IfcShapeRepresentation to IfcShapeModel with upward compatibility
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcShapeAspect.Name">
            <summary>
              Optional. The word or group of words by which the shape aspect is known. It is a tag to indicate the particular semantic of a component within the product definition shape, used to provide meaning. Example: use the tag "Glazing" to define which component of a window shape defines the glazing area.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcShapeAspect.Description">
            <summary>
              Optional. The word or group of words that characterize the shape aspect. It can be used to add additional meaning to the name of the aspect.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcShapeAspect.ProductDefinitional">
            <summary>
              An indication that the shape aspect is on the physical boundary of the product definition shape.
            </summary>
            <remarks>
              If the value of this attribute is TRUE, it shall be asserted that the shape aspect being identified is on such a boundary. If the value is FALSE, it shall be asserted that the shape aspect being identified is not on such a boundary. If the value is UNKNOWN, it shall be asserted that it is not known whether or not the shape aspect being identified is on such a boundary. 
              ---
              EXAMPLE: Would be FALSE for a center line, identified as shape aspect; would be TRUE for a cantilever.
              ---
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcShapeAspect.PartOfProductDefinitionShape">
            <summary>
              Reference to the product definition shape of which this class is an aspect.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.RepresentationResource.IfcShapeModel">
            <summary>
              The IfcShapeModel represents the concept of a particular geometric and/or topological representation of a product's shape or a product component's shape within a representation context.
            </summary>
            <remarks>
              Definition from IAI: The IfcShapeModel represents the concept of a particular geometric and/or topological representation of a product's shape or a product component's shape within a representation context. This representation context has to be a geometric representation context (with the exception of topology representations without associated geometry). The two subtypes are IfcShapeRepresentation to cover the geometric models (or sets) that represent a shape, and IfcTopologyRepresentation to cover the conectivity of a product or product component. The topology may or may not have geometry associated.
              The IfcShapeModel can be a shape representation (geometric and/or topologogical) of a product (via IfcProductDefinitionShape), or a shape representation (geometric and/or topologogical)  of a component of a product shape (via IfcShapeAspect).
              HISTORY  New entity in Release IFC 2x Edition 3. 
              EXPRESS specification:
              Formal Propositions:
              WR11   :   The IfcShapeModel shall either be used by an IfcProductRepresentation, an IfcRepresentationMap or by an IfcShapeAspect
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.RepresentationResource.IfcShapeModel.OfShapeAspect">
            <summary>
              Reference to the shape aspect, for which it is the shape representation.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.RepresentationResource.IfcShapeRepresentation">
            <summary>
              The shape representation is a specific kind of representation that represents a shape.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: The shape representation is a specific kind of representation that represents a shape. 
              Definition from IAI: The IfcShapeRepresentation represents the concept of a particular geometric representation of a product or a product component within a specific geometric representation context. The inherited attribute RepresentationType is used to define the geometric model used for the shape representation, the inherited attribute RepresentationIdentifier is used to denote the part of the representation captured by the IfcShapeRepresentation (e.g. Axis, Body, etc.). 
              Several representation types for shape representation are included as predefined types: 
              Curve2D 2 dimensional curves  
              GeometricSet  points, curves, surfaces (2 or 3 dimensional) 
              GeometricCurveSet points, curves (2 or 3 dimensional) 
              SurfaceModel  face based and shell based surface model 
              SolidModel  including swept solid, Boolean results and Brep bodies
              more specific types are: 
              SweptSolid swept area solids, by extrusion and revolution 
              Brep faceted Brep's with and without voids 
              CSG Boolean results of operations between solid models, half spaces and Boolean results 
              Clipping Boolean differences between swept area solids, half spaces and Boolean results 
              AdvancedSweptSolid swept area solids created by sweeping a profile along a directrix 
              additional types  some additional representation types are given: 
              BoundingBox simplistic 3D representation by a bounding box 
              SectionedSpine cross section based representation of a spine curve and planar cross sections. It can represent a surface or a solid and the interpolations of the between the cross sections is not defined 
              MappedRepresentation representation based on mapped item(s), referring to a representation map. Note: it can be seen as an inserted block reference. The shape representation of the mapped item has a representation type declaring the type of its representation items. 
              Table 1: string values for the inherited attribute 'RepresentationType'.
              NOTE: The definition of this entity relates to the STEP entity shape_representation. Please refer to ISO/IS 10303-41:1994 for the final definition of the formal standard. 
              HISTORY: New entity in IFC Release 1.5.
              Formal Propositions:
              WR21   :   The context to which the IfcShapeRepresentation is assign, shall be of type IfcGeometricRepresentationContext.  
              WR22   :   No topological representation item shall be directly used for shape representations, with the exception of IfcVertexPoint, IfcEdgeCurve, IfcFaceSurface.  
              WR23   :   A representation type should be given to the shape representation.  
              WR24   :   Checks the proper use of Items according to the RepresentationType.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.RepresentationResource.IfcStyledRepresentation">
            <summary>
              The IfcStyledRepresentation represents the concept of a styled presentation being a representation of a product or a product component, like material. within a representation context.
            </summary>
            <remarks>
              Definition from IAI: The IfcStyledRepresentation represents the concept of a styled presentation being a representation of a product or a product component, like material. within a representation context. This representation context does not need to be (but may be) a geometric representation context.
              NOTE  Current usage of IfcStyledRepresentation includes the assignment of presentation information to an material. The IfcStyledRepresentation then includes presentation styles (IfcAnnotationCurveOccurrence, IfcAnnotationFillAreaOccurrence, IfcAnnotationSurfaceOccurrence) that define that a material should be shown within a particular (eventually view and scale dependent) representation context. All instances of IfcStyledRepresentation are referenced by IfcMaterialDefinitionRepresentation, and assigned to IfcMaterial by IfcMaterialDefinitionRepresentation.RepresentedMaterial. 
              A styled representation has to include one or several styled items or annotation occurrences with the associated style information (curve, symbol, text, fill area, or surface styles). It may also contain the geometric representation items that are styled. 
              HISTORY: New entity in Release IFC 2x Edition 2.
              Formal Propositions:
              WR21   :   Only IfcStyledItem's (or subtypes) are allowed as members in the list of Items, inherited from IfcRepresentation. 
              IFC2x Edition 3 CHANGE  New where rule to ensure the usage for material definition representations, and other non-shape representations
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.RepresentationResource.IfcStyleModel">
            <summary>
              The IfcStyleModel represents the concept of a particular presentation style defined for a material (or other characteristic) of a product or a product component within a representation context.
            </summary>
            <remarks>
              Definition from IAI: The IfcStyleModel represents the concept of a particular presentation style defined for a material (or other characteristic) of a product or a product component within a representation context. This representation context may (but has not to be) a geometric representation context. 
              The IfcStyleModel can be a style representation (presentation style) of a material (via IfcMaterialDefinitionRepresentation), potentially differentiated for different representation contexts (e.g. different material hatching depending on the scale of the target representation context).
              HISTORY  New entity in Release IFC 2x Edition
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.RepresentationResource.IfcTopologyRepresentation">
            <summary>
              The IfcTopologyRepresentation represents the concept of a particular topological representation of a product or a product component within a representation context.
            </summary>
            <remarks>
              Definition from IAI: The IfcTopologyRepresentation represents the concept of a particular topological representation of a product or a product component within a representation context. This representation context does not need to be (but may be) a geometric representation context. Several representation types for shape representation are included as predefined types: 
              Vertex topological vertex representation (with or without assigned geometry) 
              Edge topological edge representation (with or without assigned geometry) 
              Path topological path representation (with or without assigned geometry) 
              Face topological face representation (with or without assigned geometry) 
              Shell topological shell representation (with or without assigned geometry) 
              Undefined no constraints imposed 
              The representation type is given as a string value at the inherited attribute 'RepresentationType'.
              HISTORY: New entity in Release IFC 2x Edition 2. 
              Formal Propositions:
              WR21   :   Only topological representation items should be used.  
              WR22   :   A representation type should be given to the topology representation.  
              WR23   :   Checks the proper use of Items according to the RepresentationType.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.TopologyResource.IfcClosedShell">
            <summary>
              A closed shell is a shell of the dimensionality 2 which typically serves as a bound for a region in R3.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A closed shell is a shell of the dimensionality 2 which typically serves as a bound for a region in R3. A closed shell has no boundary, and has non-zero finite extent. If the shell has a domain with coordinate space R3, it divides that space into two connected regions, one finite and the other infinite. In this case, the topological normal of the shell is defined as being directed from the finite to the infinite region. 
              The shell is represented by a collection of faces. The domain of the shell, if present, contains all those faces, together with their bounds. Associated with each face in the shell is a logical value which indicates whether the face normal agrees with (TRUE) or is opposed to (FALSE) the shell normal. The logical value can be applied directly as a BOOLEAN attribute of an oriented face, or be defaulted to TRUE if the shell boundary attribute member is a face without the orientation attribute. 
              The combinatorial restrictions on closed shells and geometrical restrictions on their domains are designed to ensure that any domain associated with a closed shell is a closed, orientable manifold. The domain of a closed shell, if present, is a connected, closed, oriented 2-manifold. It is always topologically equivalent to an H-fold torus for some H ³ 0. The number H is referred to as the surface genus of the shell. If a shell of genus H has a domain within coordinate space R3, then the finite region of space inside it is topologically equivalent to a solid ball with H tunnels drilled through it.
              The Euler equation (7) applies with B=0, because in this case there are no holes. As in the case of open shells, the surface genus H may not be known a priori, but shall be an integer ³ 0. Thus a necessary, but not sufficient, condition for a well-formed closed shell is the following:
              Definition from IAI: In the current IFC Release only poly loops (IfcPolyLoop) are defined for bounds of face bound (IfcFaceBound). This will allow for faceted B-rep only. 
              NOTE: Corresponding STEP entity: closed_shell, please refer to ISO/IS 10303-42:1994, p.149 for the final definition of the formal standard. 
              HISTORY: New class in IFC Release 1.0 
              Informal propositions: 
              Every edge shall be referenced exactly twice by the loops of the face. 
              Each oriented edge shall be unique. 
              No edge shall be referenced by more than two faces. 
              Distinct faces of the shell do not intersect, but may share edges or vertices. 
              Distinct edges do not intersect but may share vertices. 
              Each face reference shall be unique. 
              The loops of the shell shall not be a mixture of poly loop and other loop types. Note: this is given, since only poly loop is defined as face bound definition. 
              The closed shell shall be an oriented arcwise connected 2-manifold. 
              The Euler equation shall be satisfied. Note: Please refer to ISO/IS 10303-42:1994, p.149 for the equation.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.TopologyResource.IfcTopologicalRepresentationItem">
            <summary>
              The topological representation item is the supertype for all the topological representation items in the geometry resource.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcConnectedFaceSet.CfsFaces">
            <summary>
              The set of faces arcwise connected along common edges or vertices.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.TopologyResource.IfcEdge">
            <summary>
              An edge is the topological construct corresponding to the connection of two vertices.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: An edge is the topological construct corresponding to the connection of two vertices. More abstractly, it may stand for a logical relationship between two vertices. The domain of an edge, if present, is a finite, non-self-intersecting open curve in RM, that is, a connected 1-dimensional manifold. The bounds of an edge are two vertices, which need not be distinct. The edge is oriented by choosing its traversal direction to run from the first to the second vertex. If the two vertices are the same, the edge is a self loop. The domain of the edge does not include its bounds, and 0 ≤ Ξ ≤ ∞. Associated with an edge may be a geometric curve to locate the edge in a coordinate space; this is represented by the edge curve (IfcEdgeCurve) subtype. The curve shall be finite and non-self-intersecting within the domain of the edge. An edge is a graph, so its multiplicity M and graph genus Ge may be determined by the graph traversal algorithm. Since M = E = 1, the Euler equation (1) reduces in the case to 
              where V = 1 or 2, and Ge = 1 or 0. Specifically, the topological edge defining data shall satisfy: 
              - an edge has two vertices 
             
              - the vertices need not be distinct 
             
              - Equation (2) shall hold. 
             
              NOTE Corresponding STEP entity: edge. Please refer to ISO/IS 10303-42:1994, p. 130 for the final definition of the formal standard. 
              HISTORY New Entity in IFC Release 2.0
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcEdge.EdgeStart">
            <summary>
              Start point (vertex) of the edge.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcEdge.EdgeEnd">
            <summary>
              End point (vertex) of the edge. The same vertex can be used for both EdgeStart and EdgeEnd.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.TopologyResource.IfcEdgeCurve">
            <summary>
              An edge curve is a special subtype of edge which has its geometry fully defined.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: An edge curve is a special subtype of edge which has its geometry fully defined. The geometry is defined by associating the edge with a curve which may be unbounded. As the topological and geometric directions may be opposed, an indicator (same sense) is used to identify whether the edge and curve directions agree or are opposed. The Boolean value indicates whether the curve direction agrees with (TRUE) or is in the opposite direction (FALSE) to the edge direction. Any geometry associated with the vertices of the edge shall be consistent with the edge geometry. 
              NOTE: Corresponding STEP entity: edge_curve. Please refer to ISO/IS 10303-42:1994, p. 132 for the final definition of the formal standard. Due to the general IFC model specification rule not to use multiple inheritance, the subtype relationship to geometric_representation_item is not included.
              HISTORY: New Entity in IFC Release 2.x. 
              Informal propositions:
              The domain of the edge curve is formally defined to be the domain of its edge geometry as trimmed by the vertices. This domain does not include the vertices. 
              An edge curve has non-zero finite extent. 
              An edge curve is a manifold. 
              An edge curve is arcwise connected. 
              The edge start is not a part of the edge domain. 
              The edge end is not a part of the edge domain. 
              Vertex geometry shall be consistent with edge geometry.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcEdgeCurve.EdgeGeometry">
            <summary>
              The curve which defines the shape and spatial location of the edge. This curve may be unbounded and is implicitly trimmed by the vertices of the edge; this defines the edge domain. Multiple edges can reference the same curve.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcEdgeCurve.SameSense">
            <summary>
              This logical flag indicates whether (TRUE), or not (FALSE) the senses of the edge and the curve defining the edge geometry are the same. The sense of an edge is from the edge start vertex to the edge end vertex; the sense of a curve is in the direction of increasing parameter.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.TopologyResource.IfcEdgeLoop">
            <summary>
              An edge_loop is a loop with nonzero extent.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: An edge_loop is a loop with nonzero extent. It is a path in which the start and end vertices are the same. Its domain, if present, is a closed curve. An edge_loop may overlap itself.
              Informal propositions:
              The genus of the IfcEdgeLoop shall be 1 or greater. 
              The Euler formula shall be satisfied:
              (number of vertices) + genus - (number of edges) = 1; 
              No edge may be referenced more than once by the same IfcEdgeLoop with the same sense. For this purpose, an edge which is not an oriented edge is considered to be referenced with the sense TRUE. 
              NOTE: Corresponding STEP entity: edge_loop. Please refer to ISO/IS 10303-42:1994, p. 122 for the final definition of the formal standard. 
              HISTORY: New Entity in Release IFC 2x Edition 2. 
              EXPRESS specification:
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.TopologyResource.IfcFace">
            <summary>
              A face is a topological entity of dimensionality 2 corresponding to the intuitive notion of a piece of surface bounded by loops.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A face is a topological entity of dimensionality 2 corresponding to the intuitive notion of a piece of surface bounded by loops. Its domain, if present, is an oriented, connected, finite 2-manifold in Rm. A face domain shall not have handles but it may have holes, each hole bounded by a loop. The domain of the underlying geometry of the face, if present, does not contain its bounds, and 0 lt Ξ gt ∞.
              A face is represented by its bounding loops, which are defined as face bounds. A face has a topological normal n and the tangent to a loop is t. For a loop bounding a face with defined geometry, the cross product n x t points toward the interior of the face. That is, each loop runs counter-clockwise around the face when viewed from above, if we consider the normal n to point up. With each loop is associated a BOOLEAN flag to signify whether the loop direction is oriented with respect to the face normal (TRUE) or should be reversed (FALSE). 
              A face shall have at least one bound, and the loops shall not intersect. One loop is optionally distinguished as the outer loop of the face. If so, it establishes a preferred way of embedding the face domain in the plane, in which the other bounding loops of the face are inside the outer bound. Because the face domain is arcwise connected, no inner loop will contain any other loop. This is true regardless of which embedding in the plane is chosen. 
              The edges and vertices referenced by the loops of a face form a graph, of which the individual loops are the connected components. The Euler equation (1) for this graph becomes:
              where Gli is the graph genus of the i th loop.
              NOTE Corresponding STEP entity: face. No subtypes of face have been incorporated into this IFC Release. Please refer to ISO/IS 10303-42:1994, p. 140 for the final definition of the formal standard. The WR1 has not been incorporated, since it is always satisfied, due to the fact that only poly loops exist for face bounds. 
              HISTORY New class in IFC Release 1.0 
              Informal propositions:
              No edge shall be referenced by the face more than twice. 
              Distinct face bounds of the face shall have no common vertices. 
              If geometry is present, distinct loops of the same face shall not intersect. 
              The face shall satisfy the Euler Equation: (number of vertices) - (number of edges) - (number of loops) + (sum of genus for loops) = 0.
              Formal Propositions:
              WR1   :   At most one of the bounds shall be of the type IfcFaceOuterBound
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcFace.Bounds">
            <summary>
              Boundaries of the face.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.TopologyResource.IfcFaceBound">
            <summary>
              A face bound is a loop which is intended to be used for bounding a face.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A face bound is a loop which is intended to be used for bounding a face. 
              NOTE Corresponding STEP entity: face_bound. Please refer to ISO/IS 10303-42:1994, p. 139 for the final definition of the formal standard. 
              HISTORY New class in IFC Release 1.0
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcFaceBound.Bound">
            <summary>
              The loop which will be used as a face boundary.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcFaceBound.Orientation">
            <summary>
              This indicated whether (TRUE) or not (FALSE) the loop has the same sense when used to bound the face as when first defined. If sense is FALSE the senses of all its component oriented edges are implicitly reversed when used in the face.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.TopologyResource.IfcFaceSurface">
            <summary>
              A face surface (IfcFaceSurface) is a subtype of face in which the geometry is defined by an associated surface.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A face surface (IfcFaceSurface) is a subtype of face in which the geometry is defined by an associated surface. The portion of the surface used by the face shall be embeddable in the plane as an open disk, possibly with holes. However, the union of the face with the edges and vertices of its bounding loops need not be embeddable in the plane. It may, for example, cover an entire sphere or torus. As both a face and a geometric surface have defined normal directions, a BOOLEAN flag (the orientation attribute) is used to indicate whether the surface normal agrees with (TRUE) or is opposed to (FALSE) the face normal direction. The geometry associated with any component of the loops of the face shall be consistent with the surface geometry, in the sense that the domains of all the vertex points and edge curves are contained in the face geometry surface. A surface may be referenced by more than one face surface.
              NOTE Corresponding STEP entity: face_surface. Please refer to ISO/IS 10303-42:1994, p. 204 for the final definition of the formal standard. Due to the general IFC model specification rule not to use multiple inheritance, the subtype relationship to geometric_representation_item is not included.
              HISTORY New class in IFC Release 2.x 
              Informal propositions: 
              The domain of the face surface is formally defined to be the domain of its face geometry as trimmed by the loops, this domain does not include the bounding loops. 
              A face surface has non zero finite extent. 
              A face surface is a manifold. 
              A face surface is arcwise connected. 
              A face surface has surface genus 0. 
              The loops are not part of the face domain. 
              Loop geometry shall be consistent with face geometry. This implies that any edge - curves or vertex points used in defining the loops bounding the face surface shall lie on the face geometry. 
              The loops of the face shall not intersect.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcFaceSurface.Surface">
            <summary>
              The surface which defines the internal shape of the face. This surface may be unbounded. The domain of the face is defined by this surface and the bounding loops in the inherited attribute SELF\FaceBounds.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcFaceSurface.SameSense">
            <summary>
              This flag indicates whether the sense of the surface normal agrees with (TRUE), or opposes (FALSE), the sense of the topological normal to the face.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.TopologyResource.IfcOpenShell">
            <summary>
              An open shell is a shell of the dimensionality 2. Its domain, if present, is a finite, connected, oriented, 2-manifold with boundary, but is not a closed surface.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: An open shell is a shell of the dimensionality 2. Its domain, if present, is a finite, connected, oriented, 2-manifold with boundary, but is not a closed surface. It can be thought of as a closed shell with one or more holes punched in it. The domain of an open shell satisfies 0 lt Ξ lt 1. An open shell is functionally more general than a face because its domain can have handles.
              The shell is defined by a collection of faces, which may be oriented faces. The sense of each face, after taking account of the orientation, shall agree with the shell normal as defined below. The orientation can be supplied directly as a BOOLEAN attribute of an oriented face, or be defaulted to TRUE if the shell member is a face without the orientation attribute.
              The following combinatorial restrictions on open shells and geometrical restrictions on their domains are designed, together with the informal propositions, to ensure that any domain associated with an open shell is an orientable manifold.
              Each face reference shall be unique. 
              An open shell shall have at least one face. 
              A given face may exist in more than one open shell. 
              The boundary of an open shell consists of the edges that are referenced only once by the face - bounds (loops) of its faces, together with all of their vertices. The domain of an open shell, if present, contains all edges and vertices of its faces.
              NOTE Note that this is slightly different from the definition of a face domain, which includes none of its bounds. For example, a face domain may exclude an isolated point or line segment. An open shell domain may not. (See the algorithm for computing below.)
              Definition from IAI: In the current IFC Release only poly loops (IfcPolyLoop) are defined for bounds of face bound (IfcFaceBound.Bound). This will allow for faceted B-rep only. For further specification, including the Euler formulars to be satisfied, please refer to ISO 10303-42:1994.
              NOTE: Corresponding STEP entity: open_shell, please refer to ISO/IS 10303-42:1994, p.148 for the final definition of the formal standard. 
              HISTORY: New class in IFC Release 2.x 
              Informal propositions: 
              Every edge shall be referenced exactly twice by the face bounds of the face. 
              Each oriented edge shall be unique. 
              No edge shall be referenced by more than two faces. 
              Distinct faces of the shell do not intersect, but may share edges or vertices. 
              Distinct edges do not intersect but may share vertices. 
              Each face reference shall be unique. 
              The loops of the shell shall not be a mixture of poly loop and other loop types. Note: this is given, since only poly loop is defined as face bound definition. 
              The closed shell shall be an oriented arcwise connected 2-manifold. 
              The Euler equation shall be satisfied. Note: Please refer to ISO/IS 10303-42:1994, p.148 for the equation.
            </remarks>
        </member>
        <member name="T:Xbim.Ifc2x3.TopologyResource.IfcOrientedEdge">
            <summary>
              An oriented edge is an edge constructed from another edge and contains a BOOLEAN direction flag to indicate whether or not the orientation of the constructed edge agrees with the orientation of the original edge.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: An oriented edge is an edge constructed from another edge and contains a BOOLEAN direction flag to indicate whether or not the orientation of the constructed edge agrees with the orientation of the original edge. Except for perhaps orientation, the oriented edge is equivalent to the original edge. 
              NOTE A common practice is solid modelling systems is to have an entity that represents the "use" or "traversal" of an edge. This "use" entity explicitly represents the requirement in a manifold solid that each edge must be traversed exactly twice, once in each direction. The "use" functionality is provided by the edge subtype oriented edge.
              NOTE: Corresponding STEP entity: oriented_edge. Please refer to ISO/IS 10303-42:1994, p. 133 for the final definition of the formal standard. 
              HISTORY: New Entity in IFC Release 2.0
              Formal Propositions:
              WR1   :   The edge element shall not be an oriented edge.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcOrientedEdge.EdgeElement">
            <summary>
              Edge entity used to construct this oriented edge.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcOrientedEdge.Orientation">
            <summary>
              If TRUE the topological orientation as used coincides with the orientation from start vertex to end vertex of the edge element. If FALSE otherwise.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcOrientedEdge.EdgeStart">
            <summary>
              The start vertex of the oriented edge. It derives from the vertices of the edge element after taking account of the orientation.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcOrientedEdge.EdgeEnd">
            <summary>
              The end vertex of the oriented edge. It derives from the vertices of the edge element after taking account of the orientation.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.TopologyResource.IfcPath">
            <summary>
             A path is a topological entity consisting of an ordered collection of oriented edges, such that the edge start vertex of each edge coincides with the edge end of its predecessor. The path is ordered from the edge start of the first oriented edge to the edge end of the last edge. The BOOLEAN value sense in the oriented edge indicates whether the edge direction agrees with the direction of the path (TRUE) or is the opposite direction (FALSE).
            
            An individual edge can only be referenced once by an individual path. An edge can be referenced by multiple paths. An edge can exist independently of a path. 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcPath.EdgeList">
            <summary>
            The list of oriented edges which are concatenated together to form this path. 
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.TopologyResource.IfcPolyLoop">
            <summary>
              A poly loop is a loop with straight edges bounding a planar region in space.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A poly loop is a loop with straight edges bounding a planar region in space. A poly loop is a loop of genus 1 where the loop is represented by an ordered coplanar collection of points forming the vertices of the loop. The loop is composed of straight line segments joining a point in the collection to the succeeding point in the collection. The closing segment is from the last to the first point in the collection. 
              The direction of the loop is in the direction of the line segments. 
              NOTE  This entity exists primarily to facilitate the efficient communication of faceted B-rep models. 
              A poly loop shall conform to the following topological constraints:
              - the loop has the genus of one. 
              - the following equation shall be satisfied 
             
              Definition from IAI:  The IfcPolyLoop is always closed and the last segment is from the last IfcCartesianPoint in the list of Polygon's to the first IfcCartesianPoint. Therefore the first point shall not be repeated at the end of the list, neither by referencing the same instance, nor by using an additional instance of IfcCartesianPoint having the coordinates as the first point. 
              NOTE   Corresponding STEP entity: poly_loop. Please refer to ISO/IS 10303-42:1994, p. 138 for the final definition of the formal standard. Due to the general IFC model specification rule not to use multiple inheritance, the subtype relationship to geometric_representation_item is not included. The derived attribute Dim has been added at this level. 
              HISTORY   New class in IFC Release 1.0 
              Informal propositions: 
              All the points in the polygon defining the poly loop shall be coplanar. 
              The first and the last Polygon shall be different by value. 
              Formal Propositions:
              WR21   :   The space dimensionality of all Points shall be the same.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcPolyLoop.Polygon">
            <summary>
              List of points defining the loop. There are no repeated points in the list.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcPolyLoop.IsOuterBound">
            <summary>
              Polyloops do not have holes so are always the outer bound
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcSubedge.ParentEdge">
            <summary>
              The Edge, or Subedge, which contains the Subedge.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.TopologyResource.IfcVertex">
            <summary>
              A vertex is the topological construct corresponding to a point. It has dimensionality 0 and extent 0. The domain of a vertex, if present, 
              is a point in m dimensional real space RM; this is represented by the vertex point subtype.
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.TopologyResource.IfcVertexLoop">
            <summary>
              A vertex_loop is a loop of zero genus consisting of a single vertex.
            </summary>
            <remarks>
              Definition from ISO/CD 10303-42:1992: A vertex_loop is a loop of zero genus consisting of a single vertex. A vertex can exist independently of a vertex loop. The topological data shall satisfy the following constraint:
              Informal propositions:
              A vertex loop has zero extent and dimensionality. 
              The vertex loop has genus 0. 
              NOTE: Corresponding STEP entity: vertex_loop. Please refer to ISO/IS 10303-42:1994, p. 121 for the final definition of the formal standard. 
              HISTORY: New Entity in Release IFC 2x Edition 2.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcVertexLoop.LoopVertex">
            <summary>
              The vertex which defines the entire loop.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.TopologyResource.IfcVertexPoint.VertexGeometry">
            <summary>
              The geometric point, which defines the position in geometric space of the vertex.
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.UtilityResource.IfcGloballyUniqueId.#ctor(System.String)">
            <summary>
              Constructs a GloballyUniqueId from a 22 character ifc string
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.UtilityResource.IfcGloballyUniqueId.#ctor(System.Guid)">
            <summary>
              Constructs a GloballyUniqueId from a System.Guid
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.UtilityResource.IfcGloballyUniqueId.ConvertToBase64(System.Guid)">
            <summary>
              Returns the 22 character length base 64 ifc compliant string
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.UtilityResource.IfcGloballyUniqueId.To64String(System.UInt32,System.Int32)">
            <summary>
              Helper function to convert from Guid to base 64 string
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.UtilityResource.IfcGloballyUniqueId.From64String(System.String)">
            <summary>
              Helper function to convert from base 64 string to Guid
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.UtilityResource.IfcChangeActionEnum">
            <summary>
              Enumeration identifying the type of change that might have occurred to the object during the last session 
              (e.g., unchanged, added, deleted, etc.). 
              This information is required in a partial model exchange scenario so that an application or model server 
              will know how an object might have been affected by the previous application
            </summary>
            <remarks>
              Consider Application A receives an IFC dataset, adds a new object and sets IfcChangeActionEnum to ADDED. Application B then receives this IFC dataset but doesn't do anything to the object added by Application A. Consequently, the object's IfcChangeActionEnum remains set at ADDED. Consequently, the intent is that an application only modifies the value of IfcChangeActionEnum when it does something to the object, with the further intent that a model server is responsible for clearing the IfcChangeActionEnum back to UNCHANGED when it is checked back into the repository.
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.UtilityResource.IfcChangeActionEnum.NOCHANGE">
            <summary>
              Object has not been modified. This is the default state.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.UtilityResource.IfcChangeActionEnum.MODIFIED">
            <summary>
              A modification to the object has been made by the user and application defined by the LastModifyingUser and LastModifyingApplication respectively.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.UtilityResource.IfcChangeActionEnum.ADDED">
            <summary>
              The object has been added by the user and application defined by the LastModifyingUser and LastModifyingApplication respectively.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.UtilityResource.IfcChangeActionEnum.DELETED">
            <summary>
              The object has been deleted by the user and application defined by the LastModifyingUser and LastModifyingApplication respectively.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.UtilityResource.IfcChangeActionEnum.MODIFIEDADDED">
            <summary>
              The object has been added and modified by the user and application defined by the LastModifyingUser and LastModifyingApplication respectively.
            </summary>
            <remarks>
              Note that only the first four enumerations should be used. The MODIFIEDADDED and MODIFIEDDELETED are left for compatibility purposes but should not be used.
            </remarks>
        </member>
        <member name="F:Xbim.Ifc2x3.UtilityResource.IfcChangeActionEnum.MODIFIEDDELETED">
            <summary>
              The object has been modified and deleted by the user and application defined by the LastModifyingUser and LastModifyingApplication respectively.
            </summary>
            <remarks>
              Note that only the first four enumerations should be used. The MODIFIEDADDED and MODIFIEDDELETED are left for compatibility purposes but should not be used.
            </remarks>
        </member>
        <member name="M:Xbim.Ifc2x3.ActorResource.ActorRoleCollection.ToString">
            <summary>
              List the actor roles delimited by a comma and a space
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.ActorResource.ActorRoleCollection.ToString(System.String,System.IFormatProvider)">
            <summary>
              Special format method for the properties of a Label collection
            </summary>
            <remarks>
              Format strings as a delimited list, use {D} followed by any sequence of characters to act as the delimiter
            </remarks>
            <param name = "format">
              use {D} followed by any sequence of characters to act as the delimiter
            </param>
            <param name = "formatProvider">
              Provide an interface to an object to contro formatting
            </param>
            <returns>String with the formatted result.</returns>
        </member>
        <member name="T:Xbim.Ifc2x3.ActorResource.IfcActorRole">
            <summary>
              A role which is performed by an actor, either a person, an organization or a person related to an organization. 
              NOTE: The list of roles of the enumeration values of the Role attribute can never be complete. 
              Therefore using enumeration value USERDEFINED, the user can provide his/her own role as a value of the attribute UserDefinedRole. 
              NOTE Corresponds to STEP names: organization_role and person_role, please refer to ISO/IS 10303-41:1994 for the final definition of the formal standard.
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.ActorResource.IfcActorRole.#ctor(Xbim.Ifc2x3.MeasureResource.IfcLabel)">
            <summary>
              Creates a new actor role with the string role, will match a role or create a user-defined if necessary
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.ActorResource.IfcActorRole.#ctor(Xbim.Ifc2x3.ActorResource.IfcRole)">
            <summary>
              Creates a new actorrole and initializes with the role
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.ActorResource.IfcActorRole.ConvertRoleString(System.String,Xbim.Ifc2x3.ActorResource.IfcRole@,System.Nullable{Xbim.Ifc2x3.MeasureResource.IfcLabel}@)">
            <summary>
              Converts a string to a Role or a User defined role if necessary
            </summary>
            <param name = "value"></param>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcActorRole.Role">
            <summary>
              The name of the role played by an actor. If the Role requires the value USERDEFINED, then set the UserDefinedRole property, this will automatically set this value to UserDefined.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcActorRole.UserDefinedRole">
            <summary>
              Allows for specification of user defined roles beyond the values in the Role enumeration
            </summary>
            <value>it should be restricted to max. 255 characters.</value>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcActorRole.Description">
            <summary>
              A textual description relating the nature of the role played by an actor.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcActorRole.RoleString">
            <summary>
              Gets or Sets the Role, if the name provided matches on of the Role enums, the enum is selected, otherwise a userdefined role is created. Use this to simplify binding
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcApplication.ApplicationDeveloper">
            <summary>
              Name of the application developer, being requested to be member of the IAI.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcApplication.Version">
            <summary>
              The version number of this software as specified by the developer of the application.
            </summary>
            <value>it should be restricted to max. 255 characters.</value>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcApplication.ApplicationFullName">
            <summary>
              The full name of the application as specified by the application developer.
            </summary>
            <value>it should be restricted to max. 255 characters.</value>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcApplication.ApplicationIdentifier">
            <summary>
              Short identifying name for the application.
            </summary>
            <value>it should be restricted to max. 255 characters.</value>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.OrganizationCollection.Item(Xbim.Ifc2x3.MeasureResource.IfcIdentifier)">
            <summary>
              Finds the organization with either the ID of id or if the ID is null the Name == id. Only returns the first match or null if none found
            </summary>
            <param name = "id"></param>
            <returns></returns>
        </member>
        <member name="M:Xbim.Ifc2x3.ActorResource.IfcOrganization.SetRoles(Xbim.Ifc2x3.ActorResource.IfcActorRole[])">
            <summary>
              Sets the ActorRoleCollection to the array of ActorRole, deletes any previous values, initialises collection.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcOrganization.Id">
            <summary>
              Optional. Identification of the organization.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcOrganization.Name">
            <summary>
              The word, or group of words, by which the organization is referred to.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcOrganization.Description">
            <summary>
              Optional.   Text that relates the nature of the organization.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcOrganization.Roles">
            <summary>
              Optional.   Roles played by the organization.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcOrganization.Addresses">
            <summary>
              Optional.   Postal and telecom addresses of an organization
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcOrganization.IsRelatedBy">
            <summary>
              The inverse relationship for relationship RelatedOrganizations of IfcOrganizationRelationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcOrganization.Relates">
            <summary>
              The inverse relationship for relationship RelatingOrganization of IfcOrganizationRelationship.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcOrganization.Engages">
            <summary>
              Inverse relationship to IfcPersonAndOrganization relationships in which IfcOrganization is engaged.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcOrganization.AddressesString">
            <summary>
              A string representation of the Addresses Collection
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.UtilityResource.IfcOwnerHistory.#ctor">
            <summary>
              Creates an Ifc schema compliant OwnerHistory, Creation Date default to Now, changeAction to ADDED
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcOwnerHistory.OwningUser">
            <summary>
              Direct reference to the end user who currently "owns" this object. Note that IFC includes the concept of ownership transfer from one user to another and therefore distinguishes between the Owning User and Creating User.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcOwnerHistory.OwningApplication">
            <summary>
              Direct reference to the application which currently "Owns" this object on behalf of the owning user, who uses this application. Note that IFC includes the concept of ownership transfer from one app to another and therefore distinguishes between the Owning Application and Creating Application.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcOwnerHistory.State">
            <summary>
              Enumeration that defines the current access state of the object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcOwnerHistory.ChangeAction">
            <summary>
              Enumeration that defines the actions associated with changes made to the object.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcOwnerHistory.LastModifiedDate">
            <summary>
              Date and Time at which the last modification occurred. This is an optional value and will return null if not defined
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcOwnerHistory.LastModifyingUser">
            <summary>
              User who carried out the last modification.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcOwnerHistory.LastModifyingApplication">
            <summary>
              Application used to carry out the last modification.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcOwnerHistory.CreationDate">
            <summary>
              Time and date of creation. This is an optional value and will return null if not defined
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.PersonCollection.Item(Xbim.Ifc2x3.MeasureResource.IfcIdentifier)">
            <summary>
              Finds the person with either the ID of id or if the ID is null the FamilyName == id. Only returns the first match or null if none found
            </summary>
            <param name = "id"></param>
            <returns></returns>
        </member>
        <member name="M:Xbim.Ifc2x3.ActorResource.IfcPerson.ToString(System.String,System.IFormatProvider)">
            <summary>
              Special format method for the properties of a Person
            </summary>
            <remarks>
              Format string in two parts. {FormatChar}{Text}. i.e. "F,"
              Text is any arbitrary text to appear after the formatted text. If the formatted text is an empty string the arbitrary text is not appended. Where there is a list of values these are listed and delimited by the arbitrary text.
            </remarks>
            <param name = "format">
              Format string in two parts. {FormatChar}{Text}. i.e. "F,"
              Text is any arbitrary text to appear after the formatted text. If the formatted text is an empty string the arbitrary text is not appended. Where there is a list of values these are listed and delimited by the arbitrary text.
              'I' = Identifier
              'F' = FirstName
              'M' = List of Middle names
              'G' = Given or first name
              'P' = List of Prefix Titles (Dr. Mr. etc)
              'S' = List of Suffix titles
              'R' = List of Roles (Engineer, Architect)
            </param>
            <param name = "formatProvider">
            </param>
            <returns>String with the formatted result.</returns>
        </member>
        <member name="M:Xbim.Ifc2x3.ActorResource.IfcPerson.SetRoles(Xbim.Ifc2x3.ActorResource.IfcActorRole[])">
            <summary>
              Sets the ActorRoleCollection to the array of ActorRole, deletes any previous values, initialises collection.
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.ActorResource.IfcPerson.SetTelecomAddresss(Xbim.Ifc2x3.ActorResource.IfcTelecomAddress[])">
            <summary>
              Sets the AddressCollection to the array of IfcTelecomAddress, deletes any previous values, initialises collection.
              Should test to see if Addresses exists before calling unless a new list is required, if not use Add or Add_Reversible if within a transaction 
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.ActorResource.IfcPerson.SetPostalAddresss(Xbim.Ifc2x3.ActorResource.IfcPostalAddress[])">
            <summary>
              Sets the AddressCollection to the array of IfcPostalAddress, deletes any previous values, initialises collection.
              Should test to see if Addresses exists before calling unless a new list is required, if not use Add or Add_Reversible if within a transaction 
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPerson.Id">
            <summary>
              Optional Identification of the person
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPerson.FamilyName">
            <summary>
              Optional.   The name by which the family identity of the person may be recognized.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPerson.GivenName">
            <summary>
              Optional. The name by which a person is known within a family and by which he or she may be familiarly recognized.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPerson.MiddleNames">
            <summary>
              Optional. Additional names given to a person that enable their identification apart from others who may have the same or similar family and given names.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPerson.PrefixTitles">
            <summary>
              Optional The word, or group of words, which specify the person's social and/or professional standing and appear before his/her names.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPerson.SuffixTitles">
            <summary>
              Optional. The word, or group of words, which specify the person's social and/or professional standing and appear after his/her names.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPerson.Roles">
            <summary>
              Optional. Roles played by the person
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPerson.Addresses">
            <summary>
              Optional. Postal and telecommunication addresses of a person.
            </summary>
            <remarks>
              NOTE - A person may have several addresses.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPersonAndOrganization.ThePerson">
            <summary>
              The person who is related to the organization.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPersonAndOrganization.TheOrganization">
            <summary>
              The organization to which the person is related.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPersonAndOrganization.Roles">
            <summary>
              Roles played by the person within the context of an organization. Use RoleString to set value
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.ActorResource.IfcPostalAddress.SetAddressLines(System.String[])">
            <summary>
              Initialise the addresslines list of address lines. Clears any existing lines, further lines can be added through the AddressLine property
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPostalAddress.InternalLocation">
            <summary>
              Optional. An organization defined address for internal mail delivery.
            </summary>
            <value>it should be restricted to max. 255 characters.</value>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPostalAddress.AddressLines">
            <summary>
              Optional. The postal address.
            </summary>
            <remarks>
              NOTE: A postal address may occupy several lines (or elements) when recorded. It is expected that normal usage will incorporate relevant
              elements of the following address concepts: A location within a building (e.g. 3rd Floor) Building name (e.g. Interoperability House) Street              /// number (e.g. 6400) Street name (e.g. Alliance Boulevard). Typical content of address lines may vary in different countries.
            </remarks>
            <value>it should be restricted to max. 255 characters.</value>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPostalAddress.PostalBox">
            <summary>
              Optional. An address that is implied by an identifiable mail drop.
            </summary>
            <value>it should be restricted to max. 255 characters.</value>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPostalAddress.Town">
            <summary>
              Optional. The name of the town
            </summary>
            <value>it should be restricted to max. 255 characters.</value>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPostalAddress.Region">
            <summary>
              Optional. The name of a region.
            </summary>
            <remarks>
              NOTE: The counties of the United Kingdom and the states of North America are examples of regions.
            </remarks>
            <value>it should be restricted to max. 255 characters.</value>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPostalAddress.PostalCode">
            <summary>
              Optional. The code that is used by the country's postal service.
            </summary>
            <value>it should be restricted to max. 255 characters.</value>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcPostalAddress.Country">
            <summary>
              Optional. The name of a country.
            </summary>
            <value>it should be restricted to max. 255 characters.</value>
        </member>
        <member name="T:Xbim.Ifc2x3.UtilityResource.IfcStateEnum">
            <summary>
              Enumeration identifying the state or accessibility of the object (e.g., read/write, locked, etc.). 
              This concept was initially introduced in IFC 2.0 as IfcModifiedFlag of type BINARY(3) FIXED and has been modified in R2x to an enumeration. 
              It was initially introduced as a first step towards providing facilities for partial model exchange from a server as requested by the IFC implementers. 
              It is intended for use primarily by a model server so that an application can identify the state of the object.
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.UtilityResource.IfcStateEnum.READWRITE">
            <summary>
              Object is in a Read-Write state. It may be modified by an application
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.UtilityResource.IfcStateEnum.READONLY">
            <summary>
              Object is in a Read-Only state. It may be viewed but not modified by an application
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.UtilityResource.IfcStateEnum.LOCKED">
            <summary>
              Object is in a Locked state. It may not be accessed by an application
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.UtilityResource.IfcStateEnum.READWRITELOCKED">
            <summary>
              Object is in a Read-Write-Locked state. It may not be accessed by an application
            </summary>
        </member>
        <member name="F:Xbim.Ifc2x3.UtilityResource.IfcStateEnum.READONLYLOCKED">
            <summary>
              Object is in a Read-Only-Locked state. It may not be accessed by an application
            </summary>
        </member>
        <member name="T:Xbim.Ifc2x3.ActorResource.IfcRole">
            <summary>
              Roles which may be played by an actor.
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.ActorResource.IfcTelecomAddress.SetElectronicMailAddress(System.String[])">
            <summary>
              Initialise the ElectronicMailAddress the list of email addresses. Clears any existing addresses, further lines can be added through the ElectronicMailAddress property.
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.ActorResource.IfcTelecomAddress.SetTelephoneNumbers(System.String[])">
            <summary>
              Initialise the TelephoneNumbers to the list of numbers. Clears any existing numbers, further lines can be added through the TelephoneNumbers property.
            </summary>
        </member>
        <member name="M:Xbim.Ifc2x3.ActorResource.IfcTelecomAddress.SetFacsimileNumbers(System.String[])">
            <summary>
              Initialise the FacsimileNumbers to the list of numbers. Clears any existing numbers, further lines can be added through the FacsimileNumbers property.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcTelecomAddress.TelephoneNumbers">
            <summary>
              Optional. The list of telephone numbers at which telephone messages may be received.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcTelecomAddress.FacsimileNumbers">
            <summary>
              Optional. The list of fax numbers at which fax messages may be received.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcTelecomAddress.PagerNumber">
            <summary>
              Optional. The pager number at which paging messages may be received.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcTelecomAddress.ElectronicMailAddresses">
            <summary>
              Optional. The list of Email addresses at which Email messages may be received.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.ActorResource.IfcTelecomAddress.WWWHomePageURL">
            <summary>
              Optional. The world wide web address at which the preliminary page of information for the person or organization can be located.
            </summary>
            <remarks>
              NOTE: Information on the world wide web for a person or organization may be separated into a number of pages and across a number of host sites, all of which may be linked together. It is assumed that all such information may be referenced from a single page that is termed the home page for that person or organization.
            </remarks>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcTable.Name">
            <summary>
              A unique name which is intended to describe the usage of the Table.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcTable.Rows">
            <summary>
              Reference to information content of rows.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcTable.NumberOfDataRows">
            <summary>
              The number of rows in a table that contains data, i.e. total number of rows minus number of heading rows in table.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcTable.NumberOfCellsInRow">
            <summary>
              The number of cells in each row, this complies to the number of columns in a table. See WR2 that ensures that each row has the same number of cells. The actual value is derived from the first member of the Rows list.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcTable.NumberOfHeadings">
            <summary>
              The number of headings in a table. This is restricted by WR3 to max. one.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcTableRow.RowCells">
            <summary>
              The value of information by row and column using the units defined. NOTE - The row value identifies both the actual value and the units in which it is recorded. Each cell (unique row and column) may have a different value AND different units. If the row is a heading row, then the row values are strings defined by the IfcString.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcTableRow.IsHeading">
            <summary>
              Flag which identifies if the row is a heading row or a row which contains row values. NOTE - If the row is a heading, the flag takes the value = TRUE.
            </summary>
        </member>
        <member name="P:Xbim.Ifc2x3.UtilityResource.IfcTableRow.OfTable">
            <summary>
              Reference to the IfcTable, in which the IfcTableRow is defined (or contained).
            </summary>
        </member>
    </members>
</doc>
